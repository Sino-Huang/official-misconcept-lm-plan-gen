{"domain": "barman", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_63 is clean, cocktail_292 has ingredient_363 as its first ingredient, shot_155 is on the table, dispenser_127 dispenses ingredient_363, shaker_63's fill level is at level_0, shot_193 is empty, right_hand is empty, level_1 is the next level after level_0, shot_156 is on the table, dispenser_348 dispenses ingredient_214, shot_156 is empty, shot_156 is clean, shot_155 is clean, shaker_63's zero fill level is at level_0, cocktail_292 has ingredient_214 as its second ingredient, shot_193 is on the table, left_hand is empty, shaker_63 is empty, shot_155 is empty, shot_193 is clean, shaker_63 is on the table, level_2 is the next level after level_1.\nMy goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 14 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 13 </COUNT>  <PRECON> We can grasp shot_193 only if the shot_193 is on the table. We can grasp a shot_193 only right_hand is empty. </PRECON> grasp the shot_193 using right_hand <EFFECT> Once we grasp a shot_193, we are holding the shot_193 and right_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 12 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_63 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_63 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 11 </COUNT>  <PRECON> We can fill a shot_193 with an ingredient_214 only if the shot_193 is empty and clean. We can fill a shot_193 with an ingredient_214 only if one right_hand is holding the shot_193 and the other left_hand is empty to manipulate the dispenser_348 that contains the ingredient_214. </PRECON> fill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty <EFFECT> Once we fill a shot_193 with an ingredient_214, the shot_193 is no longer empty and clean. Once we fill a shot_193 with an ingredient_214, the shot_193 contains the ingredient_214 and we say that the shot_193 is used to store the ingredient_214. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 10 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 9 </COUNT>  <PRECON> We can pour the ingredient_214 of a shot_193 into a clean shaker_63 only if the shaker_63 is clean and empty. We can pour the ingredient_214 of a shot_193 into a clean shaker_63 only if we are holding the shot_193 and the shot_193 contains some ingredient_214. </PRECON> pour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shaker_63 contains the ingredient_214 and thus the shaker_63 is no longer empty. Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shot_193 does not contain any ingredient_214 and is empty. Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shaker_63's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 8 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_63 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_63 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 7 </COUNT>  <PRECON> We can clean a shot_193 only if we are holding the shot_193 and another left_hand is empty to manipulate the cleaning equipment. We can clean a shot_193 only if the shot_193 is empty but is used to store some ingredient_214. </PRECON> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty <EFFECT> Once we clean a shot_193, the shot_193 is clean and is considered not used to store any ingredient_214. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 6 </COUNT>  <PRECON> We can fill a shot_193 with an ingredient_363 only if the shot_193 is empty and clean. We can fill a shot_193 with an ingredient_363 only if one right_hand is holding the shot_193 and the other left_hand is empty to manipulate the dispenser_127 that contains the ingredient_363. </PRECON> fill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty <EFFECT> Once we fill a shot_193 with an ingredient_363, the shot_193 is no longer empty and clean. Once we fill a shot_193 with an ingredient_363, the shot_193 contains the ingredient_363 and we say that the shot_193 is used to store the ingredient_363. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 5 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_363 of a shot_193 into a used shaker_63 only if we are holding the shot_193 and the shot_193 contains some ingredient_363. We can pour the ingredient_363 of a shot_193 into a used shaker_63 only if the shaker_63 has not been shaken yet. </PRECON> pour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shaker_63's fill level level_1 will increment one level level_2. Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shaker_63 contains the ingredient_363. Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shot_193 does not contain any ingredient_363 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 3 </COUNT>  <PRECON> We can leave a right_hand on the table only if we are holding the right_hand. </PRECON> leave the shot_193 using right_hand <EFFECT> Once we leave a right_hand on the table, the right_hand is on the table and we are no longer holding the right_hand. Once we leave a right_hand on the table, our shot_193 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 2 </COUNT>  <PRECON> We can shake a shaker_63 only if the shaker_63 has not yet shaken. We can shake a shaker_63 only if we are holding the shaker_63 and the shaker_63 contains two types ingredient_363 and ingredient_214. </PRECON> shake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty <EFFECT> Once we shake a shaker_63, the shaker_63 contains a cocktail_292 that is a mixture of the two ingredient_363 and ingredient_214. Once we shake a shaker_63, the shaker_63 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 1 </COUNT>  <PRECON> We can pour the cocktail_292 of a shaker_63 into a shot_155 only if the shot_155 is empty and clean. We can pour the cocktail_292 of a shaker_63 into a shot_155 only if we are holding the shaker_63 and the shaker_63 contains a cocktail_292. </PRECON> pour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shaker_63's fill level level_2 will decrement one level level_1. Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shot_155 contains the cocktail_292 and the shot_155 is not empty. Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shot_155 is not clean. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_292 of a shaker_63 into a shot_156 only if the shot_156 is empty and clean. We can pour the cocktail_292 of a shaker_63 into a shot_156 only if we are holding the shaker_63 and the shaker_63 contains a cocktail_292. </PRECON> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0 <EFFECT> Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shaker_63's fill level level_1 will decrement one level level_0. Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shot_156 contains the cocktail_292 and the shot_156 is not empty. Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shot_156 is not clean. </EFFECT> \n</PLAN>", "plan_length": 15, "raw_plan": ["(grasp left shaker63)", "(grasp right shot193)", "(leave left shaker63)", "(fill-shot shot193 ingredient214 right left dispenser348)", "(grasp left shaker63)", "(pour-shot-to-clean-shaker shot193 ingredient214 shaker63 right l0 l1)", "(leave left shaker63)", "(clean-shot shot193 ingredient214 right left)", "(fill-shot shot193 ingredient363 right left dispenser127)", "(grasp left shaker63)", "(pour-shot-to-used-shaker shot193 ingredient363 shaker63 right l1 l2)", "(leave right shot193)", "(shake cocktail292 ingredient363 ingredient214 shaker63 left right)", "(pour-shaker-to-shot cocktail292 shot155 left shaker63 l2 l1)", "(pour-shaker-to-shot cocktail292 shot156 left shaker63 l1 l0)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_63 is clean, cocktail_292 has ingredient_363 as its first ingredient, shot_155 is on the table, dispenser_127 dispenses ingredient_363, shaker_63's fill level is at level_0, shot_193 is empty, right_hand is empty, level_1 is the next level after level_0, shot_156 is on the table, dispenser_348 dispenses ingredient_214, shot_156 is empty, shot_156 is clean, shot_155 is clean, shaker_63's zero fill level is at level_0, cocktail_292 has ingredient_214 as its second ingredient, shot_193 is on the table, left_hand is empty, shaker_63 is empty, shot_155 is empty, shot_193 is clean, shaker_63 is on the table, level_2 is the next level after level_1.My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 14 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 13 </COUNT>  <PRECON> We can grasp shot_193 only if the shot_193 is on the table. We can grasp a shot_193 only right_hand is empty. </PRECON> grasp the shot_193 using right_hand <EFFECT> Once we grasp a shot_193, we are holding the shot_193 and right_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 12 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_63 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_63 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 11 </COUNT>  <PRECON> We can fill a shot_193 with an ingredient_214 only if the shot_193 is empty and clean. We can fill a shot_193 with an ingredient_214 only if one right_hand is holding the shot_193 and the other left_hand is empty to manipulate the dispenser_348 that contains the ingredient_214. </PRECON> fill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty <EFFECT> Once we fill a shot_193 with an ingredient_214, the shot_193 is no longer empty and clean. Once we fill a shot_193 with an ingredient_214, the shot_193 contains the ingredient_214 and we say that the shot_193 is used to store the ingredient_214. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 10 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 9 </COUNT>  <PRECON> We can pour the ingredient_214 of a shot_193 into a clean shaker_63 only if the shaker_63 is clean and empty. We can pour the ingredient_214 of a shot_193 into a clean shaker_63 only if we are holding the shot_193 and the shot_193 contains some ingredient_214. </PRECON> pour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shaker_63 contains the ingredient_214 and thus the shaker_63 is no longer empty. Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shot_193 does not contain any ingredient_214 and is empty. Once we pour the ingredient_214 of a shot_193 into a clean shaker_63, the shaker_63's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 8 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_63 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_63 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 7 </COUNT>  <PRECON> We can clean a shot_193 only if we are holding the shot_193 and another left_hand is empty to manipulate the cleaning equipment. We can clean a shot_193 only if the shot_193 is empty but is used to store some ingredient_214. </PRECON> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty <EFFECT> Once we clean a shot_193, the shot_193 is clean and is considered not used to store any ingredient_214. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 6 </COUNT>  <PRECON> We can fill a shot_193 with an ingredient_363 only if the shot_193 is empty and clean. We can fill a shot_193 with an ingredient_363 only if one right_hand is holding the shot_193 and the other left_hand is empty to manipulate the dispenser_127 that contains the ingredient_363. </PRECON> fill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty <EFFECT> Once we fill a shot_193 with an ingredient_363, the shot_193 is no longer empty and clean. Once we fill a shot_193 with an ingredient_363, the shot_193 contains the ingredient_363 and we say that the shot_193 is used to store the ingredient_363. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 5 </COUNT>  <PRECON> We can grasp shaker_63 only if the shaker_63 is on the table. We can grasp a shaker_63 only left_hand is empty. </PRECON> grasp the shaker_63 using left_hand <EFFECT> Once we grasp a shaker_63, we are holding the shaker_63 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_363 of a shot_193 into a used shaker_63 only if we are holding the shot_193 and the shot_193 contains some ingredient_363. We can pour the ingredient_363 of a shot_193 into a used shaker_63 only if the shaker_63 has not been shaken yet. </PRECON> pour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shaker_63's fill level level_1 will increment one level level_2. Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shaker_63 contains the ingredient_363. Once we pour the ingredient_363 of a shot_193 into a used shaker_63, the shot_193 does not contain any ingredient_363 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 3 </COUNT>  <PRECON> We can leave a right_hand on the table only if we are holding the right_hand. </PRECON> leave the shot_193 using right_hand <EFFECT> Once we leave a right_hand on the table, the right_hand is on the table and we are no longer holding the right_hand. Once we leave a right_hand on the table, our shot_193 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 2 </COUNT>  <PRECON> We can shake a shaker_63 only if the shaker_63 has not yet shaken. We can shake a shaker_63 only if we are holding the shaker_63 and the shaker_63 contains two types ingredient_363 and ingredient_214. </PRECON> shake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty <EFFECT> Once we shake a shaker_63, the shaker_63 contains a cocktail_292 that is a mixture of the two ingredient_363 and ingredient_214. Once we shake a shaker_63, the shaker_63 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 1 </COUNT>  <PRECON> We can pour the cocktail_292 of a shaker_63 into a shot_155 only if the shot_155 is empty and clean. We can pour the cocktail_292 of a shaker_63 into a shot_155 only if we are holding the shaker_63 and the shaker_63 contains a cocktail_292. </PRECON> pour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shaker_63's fill level level_2 will decrement one level level_1. Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shot_155 contains the cocktail_292 and the shot_155 is not empty. Once we pour the cocktail_292 of a shaker_63 into a shot_155, the shot_155 is not clean. </EFFECT> \n <GOAL> My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_292 of a shaker_63 into a shot_156 only if the shot_156 is empty and clean. We can pour the cocktail_292 of a shaker_63 into a shot_156 only if we are holding the shaker_63 and the shaker_63 contains a cocktail_292. </PRECON> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0 <EFFECT> Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shaker_63's fill level level_1 will decrement one level level_0. Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shot_156 contains the cocktail_292 and the shot_156 is not empty. Once we pour the cocktail_292 of a shaker_63 into a shot_156, the shot_156 is not clean. </EFFECT> \n</PLAN>"}
{"domain": "barman", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_119's zero fill level is at level_0, shaker_119 is empty, shot_189 is clean, shot_189 is on the table, dispenser_149 dispenses ingredient_348, dispenser_366 dispenses ingredient_24, cocktail_107 has ingredient_24 as its second ingredient, level_1 is the next level after level_0, shaker_119 is clean, cocktail_107 has ingredient_348 as its first ingredient, dispenser_127 dispenses ingredient_314, shot_234 is empty, dispenser_308 dispenses ingredient_267, shaker_119's fill level is at level_0, left_hand is empty, level_2 is the next level after level_1, shot_234 is on the table, shot_234 is clean, right_hand is empty, shot_189 is empty, shaker_119 is on the table.\nMy goal is to have that shot_234 contains cocktail_107.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT>  <PRECON> We can grasp shot_189 only if the shot_189 is on the table. We can grasp a shot_189 only left_hand is empty. </PRECON> grasp the shot_189 using left_hand <EFFECT> Once we grasp a shot_189, we are holding the shot_189 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_189 with an ingredient_24 only if the shot_189 is empty and clean. We can fill a shot_189 with an ingredient_24 only if one left_hand is holding the shot_189 and the other right_hand is empty to manipulate the dispenser_366 that contains the ingredient_24. </PRECON> fill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty <EFFECT> Once we fill a shot_189 with an ingredient_24, the shot_189 contains the ingredient_24 and we say that the shot_189 is used to store the ingredient_24. Once we fill a shot_189 with an ingredient_24, the shot_189 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_24 of a shot_189 into a clean shaker_119 only if we are holding the shot_189 and the shot_189 contains some ingredient_24. We can pour the ingredient_24 of a shot_189 into a clean shaker_119 only if the shaker_119 is clean and empty. </PRECON> pour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shot_189 does not contain any ingredient_24 and is empty. Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shaker_119 contains the ingredient_24 and thus the shaker_119 is no longer empty. Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shaker_119's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_189 only if the shot_189 is empty but is used to store some ingredient_24. We can clean a shot_189 only if we are holding the shot_189 and another right_hand is empty to manipulate the cleaning equipment. </PRECON> clean the shot_189 on left_hand used for ingredient_24 when right_hand is empty <EFFECT> Once we clean a shot_189, the shot_189 is clean and is considered not used to store any ingredient_24. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_189 with an ingredient_348 only if the shot_189 is empty and clean. We can fill a shot_189 with an ingredient_348 only if one left_hand is holding the shot_189 and the other right_hand is empty to manipulate the dispenser_149 that contains the ingredient_348. </PRECON> fill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty <EFFECT> Once we fill a shot_189 with an ingredient_348, the shot_189 contains the ingredient_348 and we say that the shot_189 is used to store the ingredient_348. Once we fill a shot_189 with an ingredient_348, the shot_189 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_348 of a shot_189 into a used shaker_119 only if we are holding the shot_189 and the shot_189 contains some ingredient_348. We can pour the ingredient_348 of a shot_189 into a used shaker_119 only if the shaker_119 has not been shaken yet. </PRECON> pour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shot_189 does not contain any ingredient_348 and is empty. Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shaker_119's fill level level_1 will increment one level level_2. Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shaker_119 contains the ingredient_348. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_189 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shot_189 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 2 </COUNT>  <PRECON> We can grasp shaker_119 only if the shaker_119 is on the table. We can grasp a shaker_119 only left_hand is empty. </PRECON> grasp the shaker_119 using left_hand <EFFECT> Once we grasp a shaker_119, we are holding the shaker_119 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_119 only if the shaker_119 has not yet shaken. We can shake a shaker_119 only if we are holding the shaker_119 and the shaker_119 contains two types ingredient_348 and ingredient_24. </PRECON> shake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty <EFFECT> Once we shake a shaker_119, the shaker_119 is considered shaken. Once we shake a shaker_119, the shaker_119 contains a cocktail_107 that is a mixture of the two ingredient_348 and ingredient_24. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_107 of a shaker_119 into a shot_234 only if we are holding the shaker_119 and the shaker_119 contains a cocktail_107. We can pour the cocktail_107 of a shaker_119 into a shot_234 only if the shot_234 is empty and clean. </PRECON> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shaker_119's fill level level_2 will decrement one level level_1. Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shot_234 is not clean. Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shot_234 contains the cocktail_107 and the shot_234 is not empty. </EFFECT> \n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot189)", "(fill-shot shot189 ingredient24 left right dispenser366)", "(pour-shot-to-clean-shaker shot189 ingredient24 shaker119 left l0 l1)", "(clean-shot shot189 ingredient24 left right)", "(fill-shot shot189 ingredient348 left right dispenser149)", "(pour-shot-to-used-shaker shot189 ingredient348 shaker119 left l1 l2)", "(leave left shot189)", "(grasp left shaker119)", "(shake cocktail107 ingredient348 ingredient24 shaker119 left right)", "(pour-shaker-to-shot cocktail107 shot234 left shaker119 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_119's zero fill level is at level_0, shaker_119 is empty, shot_189 is clean, shot_189 is on the table, dispenser_149 dispenses ingredient_348, dispenser_366 dispenses ingredient_24, cocktail_107 has ingredient_24 as its second ingredient, level_1 is the next level after level_0, shaker_119 is clean, cocktail_107 has ingredient_348 as its first ingredient, dispenser_127 dispenses ingredient_314, shot_234 is empty, dispenser_308 dispenses ingredient_267, shaker_119's fill level is at level_0, left_hand is empty, level_2 is the next level after level_1, shot_234 is on the table, shot_234 is clean, right_hand is empty, shot_189 is empty, shaker_119 is on the table.My goal is to have that shot_234 contains cocktail_107.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT>  <PRECON> We can grasp shot_189 only if the shot_189 is on the table. We can grasp a shot_189 only left_hand is empty. </PRECON> grasp the shot_189 using left_hand <EFFECT> Once we grasp a shot_189, we are holding the shot_189 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_189 with an ingredient_24 only if the shot_189 is empty and clean. We can fill a shot_189 with an ingredient_24 only if one left_hand is holding the shot_189 and the other right_hand is empty to manipulate the dispenser_366 that contains the ingredient_24. </PRECON> fill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty <EFFECT> Once we fill a shot_189 with an ingredient_24, the shot_189 contains the ingredient_24 and we say that the shot_189 is used to store the ingredient_24. Once we fill a shot_189 with an ingredient_24, the shot_189 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_24 of a shot_189 into a clean shaker_119 only if we are holding the shot_189 and the shot_189 contains some ingredient_24. We can pour the ingredient_24 of a shot_189 into a clean shaker_119 only if the shaker_119 is clean and empty. </PRECON> pour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shot_189 does not contain any ingredient_24 and is empty. Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shaker_119 contains the ingredient_24 and thus the shaker_119 is no longer empty. Once we pour the ingredient_24 of a shot_189 into a clean shaker_119, the shaker_119's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_189 only if the shot_189 is empty but is used to store some ingredient_24. We can clean a shot_189 only if we are holding the shot_189 and another right_hand is empty to manipulate the cleaning equipment. </PRECON> clean the shot_189 on left_hand used for ingredient_24 when right_hand is empty <EFFECT> Once we clean a shot_189, the shot_189 is clean and is considered not used to store any ingredient_24. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_189 with an ingredient_348 only if the shot_189 is empty and clean. We can fill a shot_189 with an ingredient_348 only if one left_hand is holding the shot_189 and the other right_hand is empty to manipulate the dispenser_149 that contains the ingredient_348. </PRECON> fill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty <EFFECT> Once we fill a shot_189 with an ingredient_348, the shot_189 contains the ingredient_348 and we say that the shot_189 is used to store the ingredient_348. Once we fill a shot_189 with an ingredient_348, the shot_189 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_348 of a shot_189 into a used shaker_119 only if we are holding the shot_189 and the shot_189 contains some ingredient_348. We can pour the ingredient_348 of a shot_189 into a used shaker_119 only if the shaker_119 has not been shaken yet. </PRECON> pour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shot_189 does not contain any ingredient_348 and is empty. Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shaker_119's fill level level_1 will increment one level level_2. Once we pour the ingredient_348 of a shot_189 into a used shaker_119, the shaker_119 contains the ingredient_348. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_189 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shot_189 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 2 </COUNT>  <PRECON> We can grasp shaker_119 only if the shaker_119 is on the table. We can grasp a shaker_119 only left_hand is empty. </PRECON> grasp the shaker_119 using left_hand <EFFECT> Once we grasp a shaker_119, we are holding the shaker_119 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_119 only if the shaker_119 has not yet shaken. We can shake a shaker_119 only if we are holding the shaker_119 and the shaker_119 contains two types ingredient_348 and ingredient_24. </PRECON> shake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty <EFFECT> Once we shake a shaker_119, the shaker_119 is considered shaken. Once we shake a shaker_119, the shaker_119 contains a cocktail_107 that is a mixture of the two ingredient_348 and ingredient_24. </EFFECT> \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_107 of a shaker_119 into a shot_234 only if we are holding the shaker_119 and the shaker_119 contains a cocktail_107. We can pour the cocktail_107 of a shaker_119 into a shot_234 only if the shot_234 is empty and clean. </PRECON> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shaker_119's fill level level_2 will decrement one level level_1. Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shot_234 is not clean. Once we pour the cocktail_107 of a shaker_119 into a shot_234, the shot_234 contains the cocktail_107 and the shot_234 is not empty. </EFFECT> \n</PLAN>"}
{"domain": "barman", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_245 is on the table, dispenser_357 dispenses ingredient_125, level_2 is the next level after level_1, shaker_245's fill level is at level_0, shot_32 is on the table, shot_108 is clean, shot_108 is on the table, cocktail_367 has ingredient_19 as its first ingredient, dispenser_51 dispenses ingredient_466, shaker_245 is empty, shot_32 is clean, shot_108 is empty, shaker_245's zero fill level is at level_0, left_hand is empty, shot_32 is empty, shaker_245 is clean, right_hand is empty, dispenser_167 dispenses ingredient_376, cocktail_367 has ingredient_376 as its second ingredient, level_1 is the next level after level_0, dispenser_490 dispenses ingredient_19.\nMy goal is to have that shot_32 contains cocktail_367.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 9 </COUNT>  <PRECON> We can grasp shot_108 only if the shot_108 is on the table. We can grasp a shot_108 only left_hand is empty. </PRECON> grasp the shot_108 using left_hand <EFFECT> Once we grasp a shot_108, we are holding the shot_108 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_108 with an ingredient_19 only if one left_hand is holding the shot_108 and the other right_hand is empty to manipulate the dispenser_490 that contains the ingredient_19. We can fill a shot_108 with an ingredient_19 only if the shot_108 is empty and clean. </PRECON> fill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty <EFFECT> Once we fill a shot_108 with an ingredient_19, the shot_108 contains the ingredient_19 and we say that the shot_108 is used to store the ingredient_19. Once we fill a shot_108 with an ingredient_19, the shot_108 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_19 of a shot_108 into a clean shaker_245 only if we are holding the shot_108 and the shot_108 contains some ingredient_19. We can pour the ingredient_19 of a shot_108 into a clean shaker_245 only if the shaker_245 is clean and empty. </PRECON> pour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shot_108 does not contain any ingredient_19 and is empty. Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shaker_245 contains the ingredient_19 and thus the shaker_245 is no longer empty. Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shaker_245's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_108 only if the shot_108 is empty but is used to store some ingredient_19. We can clean a shot_108 only if we are holding the shot_108 and another right_hand is empty to manipulate the cleaning equipment. </PRECON> clean the shot_108 on left_hand used for ingredient_19 when right_hand is empty <EFFECT> Once we clean a shot_108, the shot_108 is clean and is considered not used to store any ingredient_19. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_108 with an ingredient_376 only if one left_hand is holding the shot_108 and the other right_hand is empty to manipulate the dispenser_167 that contains the ingredient_376. We can fill a shot_108 with an ingredient_376 only if the shot_108 is empty and clean. </PRECON> fill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty <EFFECT> Once we fill a shot_108 with an ingredient_376, the shot_108 contains the ingredient_376 and we say that the shot_108 is used to store the ingredient_376. Once we fill a shot_108 with an ingredient_376, the shot_108 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_376 of a shot_108 into a used shaker_245 only if the shaker_245 has not been shaken yet. We can pour the ingredient_376 of a shot_108 into a used shaker_245 only if we are holding the shot_108 and the shot_108 contains some ingredient_376. </PRECON> pour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shaker_245 contains the ingredient_376. Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shaker_245's fill level level_1 will increment one level level_2. Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shot_108 does not contain any ingredient_376 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_108 using left_hand <EFFECT> Once we leave a left_hand on the table, our shot_108 becomes empty. Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 2 </COUNT>  <PRECON> We can grasp shaker_245 only if the shaker_245 is on the table. We can grasp a shaker_245 only left_hand is empty. </PRECON> grasp the shaker_245 using left_hand <EFFECT> Once we grasp a shaker_245, we are holding the shaker_245 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_245 only if we are holding the shaker_245 and the shaker_245 contains two types ingredient_19 and ingredient_376. We can shake a shaker_245 only if the shaker_245 has not yet shaken. </PRECON> shake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty <EFFECT> Once we shake a shaker_245, the shaker_245 contains a cocktail_367 that is a mixture of the two ingredient_19 and ingredient_376. Once we shake a shaker_245, the shaker_245 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_367 of a shaker_245 into a shot_32 only if the shot_32 is empty and clean. We can pour the cocktail_367 of a shaker_245 into a shot_32 only if we are holding the shaker_245 and the shaker_245 contains a cocktail_367. </PRECON> pour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shaker_245's fill level level_2 will decrement one level level_1. Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shot_32 is not clean. Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shot_32 contains the cocktail_367 and the shot_32 is not empty. </EFFECT> \n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot108)", "(fill-shot shot108 ingredient19 left right dispenser490)", "(pour-shot-to-clean-shaker shot108 ingredient19 shaker245 left l0 l1)", "(clean-shot shot108 ingredient19 left right)", "(fill-shot shot108 ingredient376 left right dispenser167)", "(pour-shot-to-used-shaker shot108 ingredient376 shaker245 left l1 l2)", "(leave left shot108)", "(grasp left shaker245)", "(shake cocktail367 ingredient19 ingredient376 shaker245 left right)", "(pour-shaker-to-shot cocktail367 shot32 left shaker245 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_245 is on the table, dispenser_357 dispenses ingredient_125, level_2 is the next level after level_1, shaker_245's fill level is at level_0, shot_32 is on the table, shot_108 is clean, shot_108 is on the table, cocktail_367 has ingredient_19 as its first ingredient, dispenser_51 dispenses ingredient_466, shaker_245 is empty, shot_32 is clean, shot_108 is empty, shaker_245's zero fill level is at level_0, left_hand is empty, shot_32 is empty, shaker_245 is clean, right_hand is empty, dispenser_167 dispenses ingredient_376, cocktail_367 has ingredient_376 as its second ingredient, level_1 is the next level after level_0, dispenser_490 dispenses ingredient_19.My goal is to have that shot_32 contains cocktail_367.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 9 </COUNT>  <PRECON> We can grasp shot_108 only if the shot_108 is on the table. We can grasp a shot_108 only left_hand is empty. </PRECON> grasp the shot_108 using left_hand <EFFECT> Once we grasp a shot_108, we are holding the shot_108 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_108 with an ingredient_19 only if one left_hand is holding the shot_108 and the other right_hand is empty to manipulate the dispenser_490 that contains the ingredient_19. We can fill a shot_108 with an ingredient_19 only if the shot_108 is empty and clean. </PRECON> fill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty <EFFECT> Once we fill a shot_108 with an ingredient_19, the shot_108 contains the ingredient_19 and we say that the shot_108 is used to store the ingredient_19. Once we fill a shot_108 with an ingredient_19, the shot_108 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_19 of a shot_108 into a clean shaker_245 only if we are holding the shot_108 and the shot_108 contains some ingredient_19. We can pour the ingredient_19 of a shot_108 into a clean shaker_245 only if the shaker_245 is clean and empty. </PRECON> pour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shot_108 does not contain any ingredient_19 and is empty. Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shaker_245 contains the ingredient_19 and thus the shaker_245 is no longer empty. Once we pour the ingredient_19 of a shot_108 into a clean shaker_245, the shaker_245's fill level level_0 will increment one level level_1. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_108 only if the shot_108 is empty but is used to store some ingredient_19. We can clean a shot_108 only if we are holding the shot_108 and another right_hand is empty to manipulate the cleaning equipment. </PRECON> clean the shot_108 on left_hand used for ingredient_19 when right_hand is empty <EFFECT> Once we clean a shot_108, the shot_108 is clean and is considered not used to store any ingredient_19. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_108 with an ingredient_376 only if one left_hand is holding the shot_108 and the other right_hand is empty to manipulate the dispenser_167 that contains the ingredient_376. We can fill a shot_108 with an ingredient_376 only if the shot_108 is empty and clean. </PRECON> fill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty <EFFECT> Once we fill a shot_108 with an ingredient_376, the shot_108 contains the ingredient_376 and we say that the shot_108 is used to store the ingredient_376. Once we fill a shot_108 with an ingredient_376, the shot_108 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_376 of a shot_108 into a used shaker_245 only if the shaker_245 has not been shaken yet. We can pour the ingredient_376 of a shot_108 into a used shaker_245 only if we are holding the shot_108 and the shot_108 contains some ingredient_376. </PRECON> pour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shaker_245 contains the ingredient_376. Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shaker_245's fill level level_1 will increment one level level_2. Once we pour the ingredient_376 of a shot_108 into a used shaker_245, the shot_108 does not contain any ingredient_376 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_108 using left_hand <EFFECT> Once we leave a left_hand on the table, our shot_108 becomes empty. Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 2 </COUNT>  <PRECON> We can grasp shaker_245 only if the shaker_245 is on the table. We can grasp a shaker_245 only left_hand is empty. </PRECON> grasp the shaker_245 using left_hand <EFFECT> Once we grasp a shaker_245, we are holding the shaker_245 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_245 only if we are holding the shaker_245 and the shaker_245 contains two types ingredient_19 and ingredient_376. We can shake a shaker_245 only if the shaker_245 has not yet shaken. </PRECON> shake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty <EFFECT> Once we shake a shaker_245, the shaker_245 contains a cocktail_367 that is a mixture of the two ingredient_19 and ingredient_376. Once we shake a shaker_245, the shaker_245 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_367 of a shaker_245 into a shot_32 only if the shot_32 is empty and clean. We can pour the cocktail_367 of a shaker_245 into a shot_32 only if we are holding the shaker_245 and the shaker_245 contains a cocktail_367. </PRECON> pour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shaker_245's fill level level_2 will decrement one level level_1. Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shot_32 is not clean. Once we pour the cocktail_367 of a shaker_245 into a shot_32, the shot_32 contains the cocktail_367 and the shot_32 is not empty. </EFFECT> \n</PLAN>"}
{"domain": "barman", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, level_1 is the next level after level_0, shaker_55's zero fill level is at level_0, right_hand is empty, dispenser_441 dispenses ingredient_103, shot_123 is empty, shaker_55 is clean, left_hand is empty, cocktail_419 has ingredient_103 as its first ingredient, level_2 is the next level after level_1, dispenser_100 dispenses ingredient_256, shaker_55's fill level is at level_0, shot_135 is empty, shot_123 is on the table, shot_123 is clean, dispenser_491 dispenses ingredient_393, cocktail_419 has ingredient_256 as its second ingredient, shot_135 is clean, shot_135 is on the table, shaker_55 is on the table, shaker_55 is empty.\nMy goal is to have that shot_135 contains cocktail_419.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 9 </COUNT>  <PRECON> We can grasp a shot_123 only left_hand is empty. We can grasp shot_123 only if the shot_123 is on the table. </PRECON> grasp the shot_123 using left_hand <EFFECT> Once we grasp a shot_123, we are holding the shot_123 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_123 with an ingredient_103 only if the shot_123 is empty and clean. We can fill a shot_123 with an ingredient_103 only if one left_hand is holding the shot_123 and the other right_hand is empty to manipulate the dispenser_441 that contains the ingredient_103. </PRECON> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty <EFFECT> Once we fill a shot_123 with an ingredient_103, the shot_123 contains the ingredient_103 and we say that the shot_123 is used to store the ingredient_103. Once we fill a shot_123 with an ingredient_103, the shot_123 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_103 of a shot_123 into a clean shaker_55 only if we are holding the shot_123 and the shot_123 contains some ingredient_103. We can pour the ingredient_103 of a shot_123 into a clean shaker_55 only if the shaker_55 is clean and empty. </PRECON> pour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shaker_55's fill level level_0 will increment one level level_1. Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shaker_55 contains the ingredient_103 and thus the shaker_55 is no longer empty. Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shot_123 does not contain any ingredient_103 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_123 only if we are holding the shot_123 and another right_hand is empty to manipulate the cleaning equipment. We can clean a shot_123 only if the shot_123 is empty but is used to store some ingredient_103. </PRECON> clean the shot_123 on left_hand used for ingredient_103 when right_hand is empty <EFFECT> Once we clean a shot_123, the shot_123 is clean and is considered not used to store any ingredient_103. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_123 with an ingredient_256 only if the shot_123 is empty and clean. We can fill a shot_123 with an ingredient_256 only if one left_hand is holding the shot_123 and the other right_hand is empty to manipulate the dispenser_100 that contains the ingredient_256. </PRECON> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty <EFFECT> Once we fill a shot_123 with an ingredient_256, the shot_123 contains the ingredient_256 and we say that the shot_123 is used to store the ingredient_256. Once we fill a shot_123 with an ingredient_256, the shot_123 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_256 of a shot_123 into a used shaker_55 only if the shaker_55 has not been shaken yet. We can pour the ingredient_256 of a shot_123 into a used shaker_55 only if we are holding the shot_123 and the shot_123 contains some ingredient_256. </PRECON> pour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shot_123 does not contain any ingredient_256 and is empty. Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shaker_55 contains the ingredient_256. Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shaker_55's fill level level_1 will increment one level level_2. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_123 using left_hand <EFFECT> Once we leave a left_hand on the table, our shot_123 becomes empty. Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT>  <PRECON> We can grasp a shaker_55 only left_hand is empty. We can grasp shaker_55 only if the shaker_55 is on the table. </PRECON> grasp the shaker_55 using left_hand <EFFECT> Once we grasp a shaker_55, we are holding the shaker_55 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_55 only if the shaker_55 has not yet shaken. We can shake a shaker_55 only if we are holding the shaker_55 and the shaker_55 contains two types ingredient_103 and ingredient_256. </PRECON> shake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty <EFFECT> Once we shake a shaker_55, the shaker_55 contains a cocktail_419 that is a mixture of the two ingredient_103 and ingredient_256. Once we shake a shaker_55, the shaker_55 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_419 of a shaker_55 into a shot_135 only if we are holding the shaker_55 and the shaker_55 contains a cocktail_419. We can pour the cocktail_419 of a shaker_55 into a shot_135 only if the shot_135 is empty and clean. </PRECON> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shaker_55's fill level level_2 will decrement one level level_1. Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shot_135 contains the cocktail_419 and the shot_135 is not empty. Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shot_135 is not clean. </EFFECT> \n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot123)", "(fill-shot shot123 ingredient103 left right dispenser441)", "(pour-shot-to-clean-shaker shot123 ingredient103 shaker55 left l0 l1)", "(clean-shot shot123 ingredient103 left right)", "(fill-shot shot123 ingredient256 left right dispenser100)", "(pour-shot-to-used-shaker shot123 ingredient256 shaker55 left l1 l2)", "(leave left shot123)", "(grasp left shaker55)", "(shake cocktail419 ingredient103 ingredient256 shaker55 left right)", "(pour-shaker-to-shot cocktail419 shot135 left shaker55 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, level_1 is the next level after level_0, shaker_55's zero fill level is at level_0, right_hand is empty, dispenser_441 dispenses ingredient_103, shot_123 is empty, shaker_55 is clean, left_hand is empty, cocktail_419 has ingredient_103 as its first ingredient, level_2 is the next level after level_1, dispenser_100 dispenses ingredient_256, shaker_55's fill level is at level_0, shot_135 is empty, shot_123 is on the table, shot_123 is clean, dispenser_491 dispenses ingredient_393, cocktail_419 has ingredient_256 as its second ingredient, shot_135 is clean, shot_135 is on the table, shaker_55 is on the table, shaker_55 is empty.My goal is to have that shot_135 contains cocktail_419.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 9 </COUNT>  <PRECON> We can grasp a shot_123 only left_hand is empty. We can grasp shot_123 only if the shot_123 is on the table. </PRECON> grasp the shot_123 using left_hand <EFFECT> Once we grasp a shot_123, we are holding the shot_123 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT>  <PRECON> We can fill a shot_123 with an ingredient_103 only if the shot_123 is empty and clean. We can fill a shot_123 with an ingredient_103 only if one left_hand is holding the shot_123 and the other right_hand is empty to manipulate the dispenser_441 that contains the ingredient_103. </PRECON> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty <EFFECT> Once we fill a shot_123 with an ingredient_103, the shot_123 contains the ingredient_103 and we say that the shot_123 is used to store the ingredient_103. Once we fill a shot_123 with an ingredient_103, the shot_123 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 7 </COUNT>  <PRECON> We can pour the ingredient_103 of a shot_123 into a clean shaker_55 only if we are holding the shot_123 and the shot_123 contains some ingredient_103. We can pour the ingredient_103 of a shot_123 into a clean shaker_55 only if the shaker_55 is clean and empty. </PRECON> pour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shaker_55's fill level level_0 will increment one level level_1. Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shaker_55 contains the ingredient_103 and thus the shaker_55 is no longer empty. Once we pour the ingredient_103 of a shot_123 into a clean shaker_55, the shot_123 does not contain any ingredient_103 and is empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_123 only if we are holding the shot_123 and another right_hand is empty to manipulate the cleaning equipment. We can clean a shot_123 only if the shot_123 is empty but is used to store some ingredient_103. </PRECON> clean the shot_123 on left_hand used for ingredient_103 when right_hand is empty <EFFECT> Once we clean a shot_123, the shot_123 is clean and is considered not used to store any ingredient_103. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_123 with an ingredient_256 only if the shot_123 is empty and clean. We can fill a shot_123 with an ingredient_256 only if one left_hand is holding the shot_123 and the other right_hand is empty to manipulate the dispenser_100 that contains the ingredient_256. </PRECON> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty <EFFECT> Once we fill a shot_123 with an ingredient_256, the shot_123 contains the ingredient_256 and we say that the shot_123 is used to store the ingredient_256. Once we fill a shot_123 with an ingredient_256, the shot_123 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 4 </COUNT>  <PRECON> We can pour the ingredient_256 of a shot_123 into a used shaker_55 only if the shaker_55 has not been shaken yet. We can pour the ingredient_256 of a shot_123 into a used shaker_55 only if we are holding the shot_123 and the shot_123 contains some ingredient_256. </PRECON> pour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shot_123 does not contain any ingredient_256 and is empty. Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shaker_55 contains the ingredient_256. Once we pour the ingredient_256 of a shot_123 into a used shaker_55, the shaker_55's fill level level_1 will increment one level level_2. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 3 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shot_123 using left_hand <EFFECT> Once we leave a left_hand on the table, our shot_123 becomes empty. Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT>  <PRECON> We can grasp a shaker_55 only left_hand is empty. We can grasp shaker_55 only if the shaker_55 is on the table. </PRECON> grasp the shaker_55 using left_hand <EFFECT> Once we grasp a shaker_55, we are holding the shaker_55 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_55 only if the shaker_55 has not yet shaken. We can shake a shaker_55 only if we are holding the shaker_55 and the shaker_55 contains two types ingredient_103 and ingredient_256. </PRECON> shake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty <EFFECT> Once we shake a shaker_55, the shaker_55 contains a cocktail_419 that is a mixture of the two ingredient_103 and ingredient_256. Once we shake a shaker_55, the shaker_55 is considered shaken. </EFFECT> \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_419 of a shaker_55 into a shot_135 only if we are holding the shaker_55 and the shaker_55 contains a cocktail_419. We can pour the cocktail_419 of a shaker_55 into a shot_135 only if the shot_135 is empty and clean. </PRECON> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shaker_55's fill level level_2 will decrement one level level_1. Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shot_135 contains the cocktail_419 and the shot_135 is not empty. Once we pour the cocktail_419 of a shaker_55 into a shot_135, the shot_135 is not clean. </EFFECT> \n</PLAN>"}
{"domain": "barman", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shot_377 is empty, shaker_43 is on the table, left_hand is empty, level_2 is the next level after level_1, shot_377 is clean, shaker_43's zero fill level is at level_0, cocktail_488 has ingredient_350 as its first ingredient, shot_377 is on the table, cocktail_488 has ingredient_182 as its second ingredient, shot_53 is empty, dispenser_289 dispenses ingredient_350, dispenser_313 dispenses ingredient_182, shaker_43 is empty, shot_53 is on the table, shot_53 is clean, shaker_43 is clean, shaker_43's fill level is at level_0, right_hand is empty, level_1 is the next level after level_0.\nMy goal is to have that shot_377 contains cocktail_488.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 13 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 12 </COUNT>  <PRECON> We can grasp shot_53 only if the shot_53 is on the table. We can grasp a shot_53 only right_hand is empty. </PRECON> grasp the shot_53 using right_hand <EFFECT> Once we grasp a shot_53, we are holding the shot_53 and right_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_43 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_43 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT>  <PRECON> We can fill a shot_53 with an ingredient_182 only if the shot_53 is empty and clean. We can fill a shot_53 with an ingredient_182 only if one right_hand is holding the shot_53 and the other left_hand is empty to manipulate the dispenser_313 that contains the ingredient_182. </PRECON> fill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty <EFFECT> Once we fill a shot_53 with an ingredient_182, the shot_53 contains the ingredient_182 and we say that the shot_53 is used to store the ingredient_182. Once we fill a shot_53 with an ingredient_182, the shot_53 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 9 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 8 </COUNT>  <PRECON> We can pour the ingredient_182 of a shot_53 into a clean shaker_43 only if the shaker_43 is clean and empty. We can pour the ingredient_182 of a shot_53 into a clean shaker_43 only if we are holding the shot_53 and the shot_53 contains some ingredient_182. </PRECON> pour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shot_53 does not contain any ingredient_182 and is empty. Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shaker_43's fill level level_0 will increment one level level_1. Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shaker_43 contains the ingredient_182 and thus the shaker_43 is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_43 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_43 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_53 only if we are holding the shot_53 and another left_hand is empty to manipulate the cleaning equipment. We can clean a shot_53 only if the shot_53 is empty but is used to store some ingredient_182. </PRECON> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty <EFFECT> Once we clean a shot_53, the shot_53 is clean and is considered not used to store any ingredient_182. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_53 with an ingredient_350 only if the shot_53 is empty and clean. We can fill a shot_53 with an ingredient_350 only if one right_hand is holding the shot_53 and the other left_hand is empty to manipulate the dispenser_289 that contains the ingredient_350. </PRECON> fill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty <EFFECT> Once we fill a shot_53 with an ingredient_350, the shot_53 contains the ingredient_350 and we say that the shot_53 is used to store the ingredient_350. Once we fill a shot_53 with an ingredient_350, the shot_53 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 3 </COUNT>  <PRECON> We can pour the ingredient_350 of a shot_53 into a used shaker_43 only if the shaker_43 has not been shaken yet. We can pour the ingredient_350 of a shot_53 into a used shaker_43 only if we are holding the shot_53 and the shot_53 contains some ingredient_350. </PRECON> pour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shot_53 does not contain any ingredient_350 and is empty. Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shaker_43 contains the ingredient_350. Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shaker_43's fill level level_1 will increment one level level_2. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT>  <PRECON> We can leave a right_hand on the table only if we are holding the right_hand. </PRECON> leave the shot_53 using right_hand <EFFECT> Once we leave a right_hand on the table, the right_hand is on the table and we are no longer holding the right_hand. Once we leave a right_hand on the table, our shot_53 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_43 only if the shaker_43 has not yet shaken. We can shake a shaker_43 only if we are holding the shaker_43 and the shaker_43 contains two types ingredient_350 and ingredient_182. </PRECON> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty <EFFECT> Once we shake a shaker_43, the shaker_43 is considered shaken. Once we shake a shaker_43, the shaker_43 contains a cocktail_488 that is a mixture of the two ingredient_350 and ingredient_182. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_488 of a shaker_43 into a shot_377 only if we are holding the shaker_43 and the shaker_43 contains a cocktail_488. We can pour the cocktail_488 of a shaker_43 into a shot_377 only if the shot_377 is empty and clean. </PRECON> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shaker_43's fill level level_2 will decrement one level level_1. Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shot_377 is not clean. Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shot_377 contains the cocktail_488 and the shot_377 is not empty. </EFFECT> \n</PLAN>", "plan_length": 14, "raw_plan": ["(grasp left shaker43)", "(grasp right shot53)", "(leave left shaker43)", "(fill-shot shot53 ingredient182 right left dispenser313)", "(grasp left shaker43)", "(pour-shot-to-clean-shaker shot53 ingredient182 shaker43 right l0 l1)", "(leave left shaker43)", "(clean-shot shot53 ingredient182 right left)", "(fill-shot shot53 ingredient350 right left dispenser289)", "(grasp left shaker43)", "(pour-shot-to-used-shaker shot53 ingredient350 shaker43 right l1 l2)", "(leave right shot53)", "(shake cocktail488 ingredient350 ingredient182 shaker43 left right)", "(pour-shaker-to-shot cocktail488 shot377 left shaker43 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shot_377 is empty, shaker_43 is on the table, left_hand is empty, level_2 is the next level after level_1, shot_377 is clean, shaker_43's zero fill level is at level_0, cocktail_488 has ingredient_350 as its first ingredient, shot_377 is on the table, cocktail_488 has ingredient_182 as its second ingredient, shot_53 is empty, dispenser_289 dispenses ingredient_350, dispenser_313 dispenses ingredient_182, shaker_43 is empty, shot_53 is on the table, shot_53 is clean, shaker_43 is clean, shaker_43's fill level is at level_0, right_hand is empty, level_1 is the next level after level_0.My goal is to have that shot_377 contains cocktail_488.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 13 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 12 </COUNT>  <PRECON> We can grasp shot_53 only if the shot_53 is on the table. We can grasp a shot_53 only right_hand is empty. </PRECON> grasp the shot_53 using right_hand <EFFECT> Once we grasp a shot_53, we are holding the shot_53 and right_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_43 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_43 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT>  <PRECON> We can fill a shot_53 with an ingredient_182 only if the shot_53 is empty and clean. We can fill a shot_53 with an ingredient_182 only if one right_hand is holding the shot_53 and the other left_hand is empty to manipulate the dispenser_313 that contains the ingredient_182. </PRECON> fill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty <EFFECT> Once we fill a shot_53 with an ingredient_182, the shot_53 contains the ingredient_182 and we say that the shot_53 is used to store the ingredient_182. Once we fill a shot_53 with an ingredient_182, the shot_53 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 9 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 8 </COUNT>  <PRECON> We can pour the ingredient_182 of a shot_53 into a clean shaker_43 only if the shaker_43 is clean and empty. We can pour the ingredient_182 of a shot_53 into a clean shaker_43 only if we are holding the shot_53 and the shot_53 contains some ingredient_182. </PRECON> pour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1 <EFFECT> Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shot_53 does not contain any ingredient_182 and is empty. Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shaker_43's fill level level_0 will increment one level level_1. Once we pour the ingredient_182 of a shot_53 into a clean shaker_43, the shaker_43 contains the ingredient_182 and thus the shaker_43 is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT>  <PRECON> We can leave a left_hand on the table only if we are holding the left_hand. </PRECON> leave the shaker_43 using left_hand <EFFECT> Once we leave a left_hand on the table, the left_hand is on the table and we are no longer holding the left_hand. Once we leave a left_hand on the table, our shaker_43 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 6 </COUNT>  <PRECON> We can clean a shot_53 only if we are holding the shot_53 and another left_hand is empty to manipulate the cleaning equipment. We can clean a shot_53 only if the shot_53 is empty but is used to store some ingredient_182. </PRECON> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty <EFFECT> Once we clean a shot_53, the shot_53 is clean and is considered not used to store any ingredient_182. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 5 </COUNT>  <PRECON> We can fill a shot_53 with an ingredient_350 only if the shot_53 is empty and clean. We can fill a shot_53 with an ingredient_350 only if one right_hand is holding the shot_53 and the other left_hand is empty to manipulate the dispenser_289 that contains the ingredient_350. </PRECON> fill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty <EFFECT> Once we fill a shot_53 with an ingredient_350, the shot_53 contains the ingredient_350 and we say that the shot_53 is used to store the ingredient_350. Once we fill a shot_53 with an ingredient_350, the shot_53 is no longer empty and clean. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT>  <PRECON> We can grasp shaker_43 only if the shaker_43 is on the table. We can grasp a shaker_43 only left_hand is empty. </PRECON> grasp the shaker_43 using left_hand <EFFECT> Once we grasp a shaker_43, we are holding the shaker_43 and left_hand is no longer empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 3 </COUNT>  <PRECON> We can pour the ingredient_350 of a shot_53 into a used shaker_43 only if the shaker_43 has not been shaken yet. We can pour the ingredient_350 of a shot_53 into a used shaker_43 only if we are holding the shot_53 and the shot_53 contains some ingredient_350. </PRECON> pour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2 <EFFECT> Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shot_53 does not contain any ingredient_350 and is empty. Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shaker_43 contains the ingredient_350. Once we pour the ingredient_350 of a shot_53 into a used shaker_43, the shaker_43's fill level level_1 will increment one level level_2. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT>  <PRECON> We can leave a right_hand on the table only if we are holding the right_hand. </PRECON> leave the shot_53 using right_hand <EFFECT> Once we leave a right_hand on the table, the right_hand is on the table and we are no longer holding the right_hand. Once we leave a right_hand on the table, our shot_53 becomes empty. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 1 </COUNT>  <PRECON> We can shake a shaker_43 only if the shaker_43 has not yet shaken. We can shake a shaker_43 only if we are holding the shaker_43 and the shaker_43 contains two types ingredient_350 and ingredient_182. </PRECON> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty <EFFECT> Once we shake a shaker_43, the shaker_43 is considered shaken. Once we shake a shaker_43, the shaker_43 contains a cocktail_488 that is a mixture of the two ingredient_350 and ingredient_182. </EFFECT> \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT>  <PRECON> We can pour the cocktail_488 of a shaker_43 into a shot_377 only if we are holding the shaker_43 and the shaker_43 contains a cocktail_488. We can pour the cocktail_488 of a shaker_43 into a shot_377 only if the shot_377 is empty and clean. </PRECON> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1 <EFFECT> Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shaker_43's fill level level_2 will decrement one level level_1. Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shot_377 is not clean. Once we pour the cocktail_488 of a shaker_43 into a shot_377, the shot_377 contains the cocktail_488 and the shot_377 is not empty. </EFFECT> \n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the blue block is on the table, the hand is empty, the white block is on the table, the yellow block is on top of the blue block, the red block is on top of the white block, the orange block is clear, the yellow block is clear, the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 13 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another blue block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another blue block if the yellow block I am unstacking was really on top of the other blue block. </PRECON> unstack the yellow block from on top of the blue block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 12 </COUNT>  <PRECON> I can only stack a yellow block on top of another red block if I am holding the yellow block being stacked. I can only stack a yellow block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the yellow block on top of the red block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second red block, the second yellow block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 11 </COUNT>  <PRECON> I can only pick up or unstack blue block if my hand is empty. I can only pick up or unstack one block blue block at a time. I can only pick up a blue block if the blue block is on the table and the blue block is clear. A blue block is clear if the blue block has no other blocks on top of it and if the blue block is not picked up. </PRECON> pick up the blue block <EFFECT> Once I pick up a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 10 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. </PRECON> stack the blue block on top of the orange block <EFFECT> Once I stack a blue block, my hand becomes empty. Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 9 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another red block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another red block if the yellow block I am unstacking was really on top of the other red block. </PRECON> unstack the yellow block from on top of the red block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 8 </COUNT>  <PRECON> I can only put down a yellow block that I am holding. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. I can only pick up or unstack yellow block if my hand is empty. </PRECON> put down the yellow block <EFFECT> Once I put down a yellow block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 7 </COUNT>  <PRECON> I can only unstack a red block from on top of another white block if the red block I am unstacking is clear. I can only unstack a red block from on top of another white block if the red block I am unstacking was really on top of the other white block. </PRECON> unstack the red block from on top of the white block <EFFECT> Once unstack a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 6 </COUNT>  <PRECON> I can only put down a red block that I am holding. I can only pick up or unstack one block red block at a time. I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. I can only pick up or unstack red block if my hand is empty. </PRECON> put down the red block <EFFECT> Once I put down a red block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 5 </COUNT>  <PRECON> I can only pick up or unstack white block if my hand is empty. I can only pick up or unstack one block white block at a time. I can only pick up a white block if the white block is on the table and the white block is clear. A white block is clear if the white block has no other blocks on top of it and if the white block is not picked up. </PRECON> pick up the white block <EFFECT> Once I pick up a white block, I am holding the white block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 4 </COUNT>  <PRECON> I can only stack a white block on top of another blue block if I am holding the white block being stacked. I can only stack a white block on top of another blue block if the blue block onto which I am stacking is clear. </PRECON> stack the white block on top of the blue block <EFFECT> Once I stack a white block, my hand becomes empty. Once you stack a white block on top of a second blue block, the second white block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 3 </COUNT>  <PRECON> I can only pick up or unstack red block if my hand is empty. I can only pick up or unstack one block red block at a time. I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. </PRECON> pick up the red block <EFFECT> Once I pick up a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a red block on top of another white block if I am holding the red block being stacked. I can only stack a red block on top of another white block if the white block onto which I am stacking is clear. </PRECON> stack the red block on top of the white block <EFFECT> Once I stack a red block, my hand becomes empty. Once you stack a red block on top of a second white block, the second red block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack yellow block if my hand is empty. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. </PRECON> pick up the yellow block <EFFECT> Once I pick up a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a yellow block on top of another red block if I am holding the yellow block being stacked. I can only stack a yellow block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the yellow block on top of the red block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second red block, the second yellow block is no longer clear. </EFFECT> \n</PLAN>", "plan_length": 14, "raw_plan": ["(unstack d b)", "(stack d a)", "(pick-up b)", "(stack b c)", "(unstack d a)", "(put-down d)", "(unstack a e)", "(put-down a)", "(pick-up e)", "(stack e b)", "(pick-up a)", "(stack a e)", "(pick-up d)", "(stack d a)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the blue block is on the table, the hand is empty, the white block is on the table, the yellow block is on top of the blue block, the red block is on top of the white block, the orange block is clear, the yellow block is clear, the orange block is on the table.My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 13 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another blue block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another blue block if the yellow block I am unstacking was really on top of the other blue block. </PRECON> unstack the yellow block from on top of the blue block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 12 </COUNT>  <PRECON> I can only stack a yellow block on top of another red block if I am holding the yellow block being stacked. I can only stack a yellow block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the yellow block on top of the red block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second red block, the second yellow block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 11 </COUNT>  <PRECON> I can only pick up or unstack blue block if my hand is empty. I can only pick up or unstack one block blue block at a time. I can only pick up a blue block if the blue block is on the table and the blue block is clear. A blue block is clear if the blue block has no other blocks on top of it and if the blue block is not picked up. </PRECON> pick up the blue block <EFFECT> Once I pick up a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 10 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. </PRECON> stack the blue block on top of the orange block <EFFECT> Once I stack a blue block, my hand becomes empty. Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 9 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another red block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another red block if the yellow block I am unstacking was really on top of the other red block. </PRECON> unstack the yellow block from on top of the red block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 8 </COUNT>  <PRECON> I can only put down a yellow block that I am holding. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. I can only pick up or unstack yellow block if my hand is empty. </PRECON> put down the yellow block <EFFECT> Once I put down a yellow block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 7 </COUNT>  <PRECON> I can only unstack a red block from on top of another white block if the red block I am unstacking is clear. I can only unstack a red block from on top of another white block if the red block I am unstacking was really on top of the other white block. </PRECON> unstack the red block from on top of the white block <EFFECT> Once unstack a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 6 </COUNT>  <PRECON> I can only put down a red block that I am holding. I can only pick up or unstack one block red block at a time. I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. I can only pick up or unstack red block if my hand is empty. </PRECON> put down the red block <EFFECT> Once I put down a red block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 5 </COUNT>  <PRECON> I can only pick up or unstack white block if my hand is empty. I can only pick up or unstack one block white block at a time. I can only pick up a white block if the white block is on the table and the white block is clear. A white block is clear if the white block has no other blocks on top of it and if the white block is not picked up. </PRECON> pick up the white block <EFFECT> Once I pick up a white block, I am holding the white block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 4 </COUNT>  <PRECON> I can only stack a white block on top of another blue block if I am holding the white block being stacked. I can only stack a white block on top of another blue block if the blue block onto which I am stacking is clear. </PRECON> stack the white block on top of the blue block <EFFECT> Once I stack a white block, my hand becomes empty. Once you stack a white block on top of a second blue block, the second white block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 3 </COUNT>  <PRECON> I can only pick up or unstack red block if my hand is empty. I can only pick up or unstack one block red block at a time. I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. </PRECON> pick up the red block <EFFECT> Once I pick up a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a red block on top of another white block if I am holding the red block being stacked. I can only stack a red block on top of another white block if the white block onto which I am stacking is clear. </PRECON> stack the red block on top of the white block <EFFECT> Once I stack a red block, my hand becomes empty. Once you stack a red block on top of a second white block, the second red block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack yellow block if my hand is empty. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. </PRECON> pick up the yellow block <EFFECT> Once I pick up a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the red block is on top of the white block, the yellow block is on top of the red block, the white block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a yellow block on top of another red block if I am holding the yellow block being stacked. I can only stack a yellow block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the yellow block on top of the red block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second red block, the second yellow block is no longer clear. </EFFECT> \n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is on the table, the yellow block is clear, the yellow block is on the table, the hand is empty, the orange block is on the table, the red block is on the table, the blue block is clear, the orange block is clear, the blue block is on top of the red block, the white block is clear.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a blue block from on top of another red block if the blue block I am unstacking is clear. I can only unstack a blue block from on top of another red block if the blue block I am unstacking was really on top of the other red block. </PRECON> unstack the blue block from on top of the red block <EFFECT> Once unstack a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. </PRECON> stack the blue block on top of the orange block <EFFECT> Once I stack a blue block, my hand becomes empty. Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. I can only pick up or unstack yellow block if my hand is empty. </PRECON> pick up the yellow block <EFFECT> Once I pick up a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a yellow block on top of another blue block if the blue block onto which I am stacking is clear. I can only stack a yellow block on top of another blue block if I am holding the yellow block being stacked. </PRECON> stack the yellow block on top of the blue block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second blue block, the second yellow block is no longer clear. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack b a)", "(stack b c)", "(pick-up d)", "(stack d b)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is on the table, the yellow block is clear, the yellow block is on the table, the hand is empty, the orange block is on the table, the red block is on the table, the blue block is clear, the orange block is clear, the blue block is on top of the red block, the white block is clear.My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a blue block from on top of another red block if the blue block I am unstacking is clear. I can only unstack a blue block from on top of another red block if the blue block I am unstacking was really on top of the other red block. </PRECON> unstack the blue block from on top of the red block <EFFECT> Once unstack a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. </PRECON> stack the blue block on top of the orange block <EFFECT> Once I stack a blue block, my hand becomes empty. Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. I can only pick up or unstack yellow block if my hand is empty. </PRECON> pick up the yellow block <EFFECT> Once I pick up a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a yellow block on top of another blue block if the blue block onto which I am stacking is clear. I can only stack a yellow block on top of another blue block if I am holding the yellow block being stacked. </PRECON> stack the yellow block on top of the blue block <EFFECT> Once I stack a yellow block, my hand becomes empty. Once you stack a yellow block on top of a second blue block, the second yellow block is no longer clear. </EFFECT> \n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the yellow block is on the table, the orange block is on top of the blue block, the hand is empty, the white block is on the table, the yellow block is clear, the blue block is on top of the white block, the red block is on top of the orange block.\nMy goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a red block from on top of another orange block if the red block I am unstacking was really on top of the other orange block. I can only unstack a red block from on top of another orange block if the red block I am unstacking is clear. </PRECON> unstack the red block from on top of the orange block <EFFECT> Once unstack a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 2 </COUNT>  <PRECON> I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. I can only pick up or unstack one block red block at a time. I can only put down a red block that I am holding. I can only pick up or unstack red block if my hand is empty. </PRECON> put down the red block <EFFECT> Once I put down a red block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 1 </COUNT>  <PRECON> I can only unstack a orange block from on top of another blue block if the orange block I am unstacking was really on top of the other blue block. I can only unstack a orange block from on top of another blue block if the orange block I am unstacking is clear. </PRECON> unstack the orange block from on top of the blue block <EFFECT> Once unstack a orange block, I am holding the orange block. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a orange block on top of another yellow block if the yellow block onto which I am stacking is clear. I can only stack a orange block on top of another yellow block if I am holding the orange block being stacked. </PRECON> stack the orange block on top of the yellow block <EFFECT> Once you stack a orange block on top of a second yellow block, the second orange block is no longer clear. Once I stack a orange block, my hand becomes empty. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack a c)", "(put-down a)", "(unstack c b)", "(stack c d)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the yellow block is on the table, the orange block is on top of the blue block, the hand is empty, the white block is on the table, the yellow block is clear, the blue block is on top of the white block, the red block is on top of the orange block.My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a red block from on top of another orange block if the red block I am unstacking was really on top of the other orange block. I can only unstack a red block from on top of another orange block if the red block I am unstacking is clear. </PRECON> unstack the red block from on top of the orange block <EFFECT> Once unstack a red block, I am holding the red block. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 2 </COUNT>  <PRECON> I can only pick up a red block if the red block is on the table and the red block is clear. A red block is clear if the red block has no other blocks on top of it and if the red block is not picked up. I can only pick up or unstack one block red block at a time. I can only put down a red block that I am holding. I can only pick up or unstack red block if my hand is empty. </PRECON> put down the red block <EFFECT> Once I put down a red block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 1 </COUNT>  <PRECON> I can only unstack a orange block from on top of another blue block if the orange block I am unstacking was really on top of the other blue block. I can only unstack a orange block from on top of another blue block if the orange block I am unstacking is clear. </PRECON> unstack the orange block from on top of the blue block <EFFECT> Once unstack a orange block, I am holding the orange block. </EFFECT> \n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a orange block on top of another yellow block if the yellow block onto which I am stacking is clear. I can only stack a orange block on top of another yellow block if I am holding the orange block being stacked. </PRECON> stack the orange block on top of the yellow block <EFFECT> Once you stack a orange block on top of a second yellow block, the second orange block is no longer clear. Once I stack a orange block, my hand becomes empty. </EFFECT> \n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is on the table, the orange block is clear, the orange block is on top of the blue block, the red block is on top of the yellow block, the hand is empty, the yellow block is on top of the white block, the red block is clear, the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a orange block from on top of another blue block if the orange block I am unstacking is clear. I can only unstack a orange block from on top of another blue block if the orange block I am unstacking was really on top of the other blue block. </PRECON> unstack the orange block from on top of the blue block <EFFECT> Once unstack a orange block, I am holding the orange block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a orange block on top of another red block if I am holding the orange block being stacked. I can only stack a orange block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the orange block on top of the red block <EFFECT> Once you stack a orange block on top of a second red block, the second orange block is no longer clear. Once I stack a orange block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack blue block if my hand is empty. I can only pick up a blue block if the blue block is on the table and the blue block is clear. A blue block is clear if the blue block has no other blocks on top of it and if the blue block is not picked up. I can only pick up or unstack one block blue block at a time. </PRECON> pick up the blue block <EFFECT> Once I pick up a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. </PRECON> stack the blue block on top of the orange block <EFFECT> Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. Once I stack a blue block, my hand becomes empty. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack c b)", "(stack c a)", "(pick-up b)", "(stack b c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is on the table, the orange block is clear, the orange block is on top of the blue block, the red block is on top of the yellow block, the hand is empty, the yellow block is on top of the white block, the red block is clear, the blue block is on the table.My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a orange block from on top of another blue block if the orange block I am unstacking is clear. I can only unstack a orange block from on top of another blue block if the orange block I am unstacking was really on top of the other blue block. </PRECON> unstack the orange block from on top of the blue block <EFFECT> Once unstack a orange block, I am holding the orange block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 2 </COUNT>  <PRECON> I can only stack a orange block on top of another red block if I am holding the orange block being stacked. I can only stack a orange block on top of another red block if the red block onto which I am stacking is clear. </PRECON> stack the orange block on top of the red block <EFFECT> Once you stack a orange block on top of a second red block, the second orange block is no longer clear. Once I stack a orange block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack blue block if my hand is empty. I can only pick up a blue block if the blue block is on the table and the blue block is clear. A blue block is clear if the blue block has no other blocks on top of it and if the blue block is not picked up. I can only pick up or unstack one block blue block at a time. </PRECON> pick up the blue block <EFFECT> Once I pick up a blue block, I am holding the blue block. </EFFECT> \n <GOAL> My goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on top of the yellow block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a blue block on top of another orange block if I am holding the blue block being stacked. I can only stack a blue block on top of another orange block if the orange block onto which I am stacking is clear. </PRECON> stack the blue block on top of the orange block <EFFECT> Once you stack a blue block on top of a second orange block, the second blue block is no longer clear. Once I stack a blue block, my hand becomes empty. </EFFECT> \n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the yellow block is on top of the orange block, the red block is on the table, the hand is empty, the blue block is clear, the red block is clear, the orange block is on the table, the white block is on the table, the yellow block is clear, the white block is clear, the blue block is on the table.\nMy goal is to have that the white block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another orange block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another orange block if the yellow block I am unstacking was really on top of the other orange block. </PRECON> unstack the yellow block from on top of the orange block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 2 </COUNT>  <PRECON> I can only put down a yellow block that I am holding. I can only pick up or unstack yellow block if my hand is empty. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. </PRECON> put down the yellow block <EFFECT> Once I put down a yellow block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack one block white block at a time. I can only pick up or unstack white block if my hand is empty. I can only pick up a white block if the white block is on the table and the white block is clear. A white block is clear if the white block has no other blocks on top of it and if the white block is not picked up. </PRECON> pick up the white block <EFFECT> Once I pick up a white block, I am holding the white block. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a white block on top of another orange block if the orange block onto which I am stacking is clear. I can only stack a white block on top of another orange block if I am holding the white block being stacked. </PRECON> stack the white block on top of the orange block <EFFECT> Once you stack a white block on top of a second orange block, the second white block is no longer clear. Once I stack a white block, my hand becomes empty. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack d c)", "(put-down d)", "(pick-up e)", "(stack e c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the yellow block is on top of the orange block, the red block is on the table, the hand is empty, the blue block is clear, the red block is clear, the orange block is on the table, the white block is on the table, the yellow block is clear, the white block is clear, the blue block is on the table.My goal is to have that the white block is on top of the orange block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 3 </COUNT>  <PRECON> I can only unstack a yellow block from on top of another orange block if the yellow block I am unstacking is clear. I can only unstack a yellow block from on top of another orange block if the yellow block I am unstacking was really on top of the other orange block. </PRECON> unstack the yellow block from on top of the orange block <EFFECT> Once unstack a yellow block, I am holding the yellow block. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 2 </COUNT>  <PRECON> I can only put down a yellow block that I am holding. I can only pick up or unstack yellow block if my hand is empty. I can only pick up or unstack one block yellow block at a time. I can only pick up a yellow block if the yellow block is on the table and the yellow block is clear. A yellow block is clear if the yellow block has no other blocks on top of it and if the yellow block is not picked up. </PRECON> put down the yellow block <EFFECT> Once I put down a yellow block, my hand becomes empty. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 1 </COUNT>  <PRECON> I can only pick up or unstack one block white block at a time. I can only pick up or unstack white block if my hand is empty. I can only pick up a white block if the white block is on the table and the white block is clear. A white block is clear if the white block has no other blocks on top of it and if the white block is not picked up. </PRECON> pick up the white block <EFFECT> Once I pick up a white block, I am holding the white block. </EFFECT> \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT>  <PRECON> I can only stack a white block on top of another orange block if the orange block onto which I am stacking is clear. I can only stack a white block on top of another orange block if I am holding the white block being stacked. </PRECON> stack the white block on top of the orange block <EFFECT> Once you stack a white block on top of a second orange block, the second white block is no longer clear. Once I stack a white block, my hand becomes empty. </EFFECT> \n</PLAN>"}
{"domain": "childsnack", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_128 is at kitchen, child_394 is waiting for sandwich at table_383, sandwich_1 is not ready yet, child_394 is not allergic to gluten, tray_291 is at kitchen, content_331 is at kitchen, bread_94 is at kitchen, sandwich_2 is not ready yet, tray_484 is at kitchen.\nMy goal is to have that child_394 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_2 only if there is a bread_94 at kitchen. We can make a regular sandwich_2 only if there is a content_331 at kitchen. </PRECON> make a regular sandwich_2 using bread_94 and content_331 <EFFECT> Once we make a regular sandwich_2, the sandwich_2 is at kitchen. Once we make a regular sandwich_2, the bread_94 and content_331 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_2 on a tray_484 only if the sandwich_2 is at kitchen. We can put a sandwich_2 on a tray_484 only if the tray_484 is also at kitchen. </PRECON> put sandwich_2 on tray_484 <EFFECT> Once we put a sandwich_2 on a tray_484, the sandwich_2 is no longer at kitchen but is on the tray_484. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_484 from kitchen to table_383 only if the tray_484 is at kitchen. </PRECON> move tray_484 from kitchen to table_383 <EFFECT> Once we move a tray_484 from kitchen to table_383, the tray_484 is no longer at kitchen but is at table_383. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_2 to a child_394 only if the child_394 is not allergic to gluten. We can serve a regular sandwich_2 to a child_394 only if the sandwich_2 is on a tray_484 and the tray_484 is at the table_383 where the child_394 is waiting. We can serve a regular sandwich_2 to a child_394 only if the child is waiting for the sandwich_2 at the table_383. </PRECON> use tray_484 to serve regular sandwich_2 to child_394 at table_383 <EFFECT> Once we serve a regular sandwich_2 to a child_394, the sandwich_2 is no longer on the tray_484. Once we serve a regular sandwich_2 to a child_394, we say the child_394 has been served. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread94 content331)", "(put_on_tray sandw2 tray484)", "(move_tray tray484 kitchen table383)", "(serve_sandwich sandw2 child394 tray484 table383)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_128 is at kitchen, child_394 is waiting for sandwich at table_383, sandwich_1 is not ready yet, child_394 is not allergic to gluten, tray_291 is at kitchen, content_331 is at kitchen, bread_94 is at kitchen, sandwich_2 is not ready yet, tray_484 is at kitchen.My goal is to have that child_394 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_2 only if there is a bread_94 at kitchen. We can make a regular sandwich_2 only if there is a content_331 at kitchen. </PRECON> make a regular sandwich_2 using bread_94 and content_331 <EFFECT> Once we make a regular sandwich_2, the sandwich_2 is at kitchen. Once we make a regular sandwich_2, the bread_94 and content_331 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_2 on a tray_484 only if the sandwich_2 is at kitchen. We can put a sandwich_2 on a tray_484 only if the tray_484 is also at kitchen. </PRECON> put sandwich_2 on tray_484 <EFFECT> Once we put a sandwich_2 on a tray_484, the sandwich_2 is no longer at kitchen but is on the tray_484. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_484 from kitchen to table_383 only if the tray_484 is at kitchen. </PRECON> move tray_484 from kitchen to table_383 <EFFECT> Once we move a tray_484 from kitchen to table_383, the tray_484 is no longer at kitchen but is at table_383. </EFFECT> \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_2 to a child_394 only if the child_394 is not allergic to gluten. We can serve a regular sandwich_2 to a child_394 only if the sandwich_2 is on a tray_484 and the tray_484 is at the table_383 where the child_394 is waiting. We can serve a regular sandwich_2 to a child_394 only if the child is waiting for the sandwich_2 at the table_383. </PRECON> use tray_484 to serve regular sandwich_2 to child_394 at table_383 <EFFECT> Once we serve a regular sandwich_2 to a child_394, the sandwich_2 is no longer on the tray_484. Once we serve a regular sandwich_2 to a child_394, we say the child_394 has been served. </EFFECT> \n</PLAN>"}
{"domain": "childsnack", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, sandwich_4 is not ready yet, sandwich_3 is not ready yet, bread_445 is at kitchen, content_124 is at kitchen, child_128 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_128 is waiting for sandwich at table_228, content_39 is at kitchen, sandwich_6 is not ready yet, tray_108 is at kitchen, child_43 is waiting for sandwich at table_228, content_472 is at kitchen, sandwich_5 is not ready yet, bread_374 is at kitchen, child_263 is not allergic to gluten, bread_420 is at kitchen, child_43 is not allergic to gluten, child_263 is waiting for sandwich at table_108.\nMy goal is to have that child_43 has been served, child_128 has been served, child_263 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 14 </COUNT>  <PRECON> We can make a regular sandwich_6 only if there is a content_124 at kitchen. We can make a regular sandwich_6 only if there is a bread_374 at kitchen. </PRECON> make a regular sandwich_6 using bread_374 and content_124 <EFFECT> Once we make a regular sandwich_6, the sandwich_6 is at kitchen. Once we make a regular sandwich_6, the bread_374 and content_124 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 13 </COUNT>  <PRECON> We can put a sandwich_6 on a tray_108 only if the sandwich_6 is at kitchen. We can put a sandwich_6 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_6 on tray_108 <EFFECT> Once we put a sandwich_6 on a tray_108, the sandwich_6 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 12 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_108 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_108 <EFFECT> Once we move a tray_108 from kitchen to table_108, the tray_108 is no longer at kitchen but is at table_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 11 </COUNT>  <PRECON> We can serve a regular sandwich_6 to a child_263 only if the child_263 is not allergic to gluten. We can serve a regular sandwich_6 to a child_263 only if the sandwich_6 is on a tray_108 and the tray_108 is at the table_108 where the child_263 is waiting. We can serve a regular sandwich_6 to a child_263 only if the child is waiting for the sandwich_6 at the table_108. </PRECON> use tray_108 to serve regular sandwich_6 to child_263 at table_108 <EFFECT> Once we serve a regular sandwich_6 to a child_263, the sandwich_6 is no longer on the tray_108. Once we serve a regular sandwich_6 to a child_263, we say the child_263 has been served. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 10 </COUNT>  <PRECON> We can move a tray_108 from table_108 to table_228 only if the tray_108 is at table_108. </PRECON> move tray_108 from table_108 to table_228 <EFFECT> Once we move a tray_108 from table_108 to table_228, the tray_108 is no longer at table_108 but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 9 </COUNT>  <PRECON> We can make a regular sandwich_5 only if there is a content_39 at kitchen. We can make a regular sandwich_5 only if there is a bread_420 at kitchen. </PRECON> make a regular sandwich_5 using bread_420 and content_39 <EFFECT> Once we make a regular sandwich_5, the sandwich_5 is at kitchen. Once we make a regular sandwich_5, the bread_420 and content_39 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 8 </COUNT>  <PRECON> We can move a tray_108 from table_228 to kitchen only if the tray_108 is at table_228. </PRECON> move tray_108 from table_228 to kitchen <EFFECT> Once we move a tray_108 from table_228 to kitchen, the tray_108 is no longer at table_228 but is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 7 </COUNT>  <PRECON> We can put a sandwich_5 on a tray_108 only if the sandwich_5 is at kitchen. We can put a sandwich_5 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_5 on tray_108 <EFFECT> Once we put a sandwich_5 on a tray_108, the sandwich_5 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 6 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_228 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_228 <EFFECT> Once we move a tray_108 from kitchen to table_228, the tray_108 is no longer at kitchen but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 5 </COUNT>  <PRECON> We can serve a regular sandwich_5 to a child_128 only if the child_128 is not allergic to gluten. We can serve a regular sandwich_5 to a child_128 only if the sandwich_5 is on a tray_108 and the tray_108 is at the table_228 where the child_128 is waiting. We can serve a regular sandwich_5 to a child_128 only if the child is waiting for the sandwich_5 at the table_228. </PRECON> use tray_108 to serve regular sandwich_5 to child_128 at table_228 <EFFECT> Once we serve a regular sandwich_5 to a child_128, the sandwich_5 is no longer on the tray_108. Once we serve a regular sandwich_5 to a child_128, we say the child_128 has been served. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 4 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a content_472 at kitchen. We can make a regular sandwich_4 only if there is a bread_445 at kitchen. </PRECON> make a regular sandwich_4 using bread_445 and content_472 <EFFECT> Once we make a regular sandwich_4, the sandwich_4 is at kitchen. Once we make a regular sandwich_4, the bread_445 and content_472 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 3 </COUNT>  <PRECON> We can move a tray_108 from table_228 to kitchen only if the tray_108 is at table_228. </PRECON> move tray_108 from table_228 to kitchen <EFFECT> Once we move a tray_108 from table_228 to kitchen, the tray_108 is no longer at table_228 but is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_108 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_4 on tray_108 <EFFECT> Once we put a sandwich_4 on a tray_108, the sandwich_4 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_228 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_228 <EFFECT> Once we move a tray_108 from kitchen to table_228, the tray_108 is no longer at kitchen but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_43 only if the child_43 is not allergic to gluten. We can serve a regular sandwich_4 to a child_43 only if the sandwich_4 is on a tray_108 and the tray_108 is at the table_228 where the child_43 is waiting. We can serve a regular sandwich_4 to a child_43 only if the child is waiting for the sandwich_4 at the table_228. </PRECON> use tray_108 to serve regular sandwich_4 to child_43 at table_228 <EFFECT> Once we serve a regular sandwich_4 to a child_43, the sandwich_4 is no longer on the tray_108. Once we serve a regular sandwich_4 to a child_43, we say the child_43 has been served. </EFFECT> \n</PLAN>", "plan_length": 15, "raw_plan": ["(make_sandwich sandw6 bread374 content124)", "(put_on_tray sandw6 tray108)", "(move_tray tray108 kitchen table108)", "(serve_sandwich sandw6 child263 tray108 table108)", "(move_tray tray108 table108 table228)", "(make_sandwich sandw5 bread420 content39)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw5 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw5 child128 tray108 table228)", "(make_sandwich sandw4 bread445 content472)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw4 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw4 child43 tray108 table228)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, sandwich_4 is not ready yet, sandwich_3 is not ready yet, bread_445 is at kitchen, content_124 is at kitchen, child_128 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_128 is waiting for sandwich at table_228, content_39 is at kitchen, sandwich_6 is not ready yet, tray_108 is at kitchen, child_43 is waiting for sandwich at table_228, content_472 is at kitchen, sandwich_5 is not ready yet, bread_374 is at kitchen, child_263 is not allergic to gluten, bread_420 is at kitchen, child_43 is not allergic to gluten, child_263 is waiting for sandwich at table_108.My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 14 </COUNT>  <PRECON> We can make a regular sandwich_6 only if there is a content_124 at kitchen. We can make a regular sandwich_6 only if there is a bread_374 at kitchen. </PRECON> make a regular sandwich_6 using bread_374 and content_124 <EFFECT> Once we make a regular sandwich_6, the sandwich_6 is at kitchen. Once we make a regular sandwich_6, the bread_374 and content_124 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 13 </COUNT>  <PRECON> We can put a sandwich_6 on a tray_108 only if the sandwich_6 is at kitchen. We can put a sandwich_6 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_6 on tray_108 <EFFECT> Once we put a sandwich_6 on a tray_108, the sandwich_6 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 12 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_108 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_108 <EFFECT> Once we move a tray_108 from kitchen to table_108, the tray_108 is no longer at kitchen but is at table_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 11 </COUNT>  <PRECON> We can serve a regular sandwich_6 to a child_263 only if the child_263 is not allergic to gluten. We can serve a regular sandwich_6 to a child_263 only if the sandwich_6 is on a tray_108 and the tray_108 is at the table_108 where the child_263 is waiting. We can serve a regular sandwich_6 to a child_263 only if the child is waiting for the sandwich_6 at the table_108. </PRECON> use tray_108 to serve regular sandwich_6 to child_263 at table_108 <EFFECT> Once we serve a regular sandwich_6 to a child_263, the sandwich_6 is no longer on the tray_108. Once we serve a regular sandwich_6 to a child_263, we say the child_263 has been served. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 10 </COUNT>  <PRECON> We can move a tray_108 from table_108 to table_228 only if the tray_108 is at table_108. </PRECON> move tray_108 from table_108 to table_228 <EFFECT> Once we move a tray_108 from table_108 to table_228, the tray_108 is no longer at table_108 but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 9 </COUNT>  <PRECON> We can make a regular sandwich_5 only if there is a content_39 at kitchen. We can make a regular sandwich_5 only if there is a bread_420 at kitchen. </PRECON> make a regular sandwich_5 using bread_420 and content_39 <EFFECT> Once we make a regular sandwich_5, the sandwich_5 is at kitchen. Once we make a regular sandwich_5, the bread_420 and content_39 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 8 </COUNT>  <PRECON> We can move a tray_108 from table_228 to kitchen only if the tray_108 is at table_228. </PRECON> move tray_108 from table_228 to kitchen <EFFECT> Once we move a tray_108 from table_228 to kitchen, the tray_108 is no longer at table_228 but is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 7 </COUNT>  <PRECON> We can put a sandwich_5 on a tray_108 only if the sandwich_5 is at kitchen. We can put a sandwich_5 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_5 on tray_108 <EFFECT> Once we put a sandwich_5 on a tray_108, the sandwich_5 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 6 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_228 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_228 <EFFECT> Once we move a tray_108 from kitchen to table_228, the tray_108 is no longer at kitchen but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 5 </COUNT>  <PRECON> We can serve a regular sandwich_5 to a child_128 only if the child_128 is not allergic to gluten. We can serve a regular sandwich_5 to a child_128 only if the sandwich_5 is on a tray_108 and the tray_108 is at the table_228 where the child_128 is waiting. We can serve a regular sandwich_5 to a child_128 only if the child is waiting for the sandwich_5 at the table_228. </PRECON> use tray_108 to serve regular sandwich_5 to child_128 at table_228 <EFFECT> Once we serve a regular sandwich_5 to a child_128, the sandwich_5 is no longer on the tray_108. Once we serve a regular sandwich_5 to a child_128, we say the child_128 has been served. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 4 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a content_472 at kitchen. We can make a regular sandwich_4 only if there is a bread_445 at kitchen. </PRECON> make a regular sandwich_4 using bread_445 and content_472 <EFFECT> Once we make a regular sandwich_4, the sandwich_4 is at kitchen. Once we make a regular sandwich_4, the bread_445 and content_472 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 3 </COUNT>  <PRECON> We can move a tray_108 from table_228 to kitchen only if the tray_108 is at table_228. </PRECON> move tray_108 from table_228 to kitchen <EFFECT> Once we move a tray_108 from table_228 to kitchen, the tray_108 is no longer at table_228 but is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_108 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_108 only if the tray_108 is also at kitchen. </PRECON> put sandwich_4 on tray_108 <EFFECT> Once we put a sandwich_4 on a tray_108, the sandwich_4 is no longer at kitchen but is on the tray_108. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_108 from kitchen to table_228 only if the tray_108 is at kitchen. </PRECON> move tray_108 from kitchen to table_228 <EFFECT> Once we move a tray_108 from kitchen to table_228, the tray_108 is no longer at kitchen but is at table_228. </EFFECT> \n <GOAL> My goal is to have that child_43 has been served, child_128 has been served, child_263 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_43 only if the child_43 is not allergic to gluten. We can serve a regular sandwich_4 to a child_43 only if the sandwich_4 is on a tray_108 and the tray_108 is at the table_228 where the child_43 is waiting. We can serve a regular sandwich_4 to a child_43 only if the child is waiting for the sandwich_4 at the table_228. </PRECON> use tray_108 to serve regular sandwich_4 to child_43 at table_228 <EFFECT> Once we serve a regular sandwich_4 to a child_43, the sandwich_4 is no longer on the tray_108. Once we serve a regular sandwich_4 to a child_43, we say the child_43 has been served. </EFFECT> \n</PLAN>"}
{"domain": "childsnack", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, bread_274 is at kitchen, tray_474 is at kitchen, sandwich_2 is not ready yet, sandwich_1 is not ready yet, tray_456 is at kitchen, child_425 is not allergic to gluten, tray_403 is at kitchen, child_425 is waiting for sandwich at table_320, content_183 is at kitchen.\nMy goal is to have that child_425 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_2 only if there is a content_183 at kitchen. We can make a regular sandwich_2 only if there is a bread_274 at kitchen. </PRECON> make a regular sandwich_2 using bread_274 and content_183 <EFFECT> Once we make a regular sandwich_2, the sandwich_2 is at kitchen. Once we make a regular sandwich_2, the bread_274 and content_183 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_2 on a tray_474 only if the tray_474 is also at kitchen. We can put a sandwich_2 on a tray_474 only if the sandwich_2 is at kitchen. </PRECON> put sandwich_2 on tray_474 <EFFECT> Once we put a sandwich_2 on a tray_474, the sandwich_2 is no longer at kitchen but is on the tray_474. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_474 from kitchen to table_320 only if the tray_474 is at kitchen. </PRECON> move tray_474 from kitchen to table_320 <EFFECT> Once we move a tray_474 from kitchen to table_320, the tray_474 is no longer at kitchen but is at table_320. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_2 to a child_425 only if the sandwich_2 is on a tray_474 and the tray_474 is at the table_320 where the child_425 is waiting. We can serve a regular sandwich_2 to a child_425 only if the child_425 is not allergic to gluten. We can serve a regular sandwich_2 to a child_425 only if the child is waiting for the sandwich_2 at the table_320. </PRECON> use tray_474 to serve regular sandwich_2 to child_425 at table_320 <EFFECT> Once we serve a regular sandwich_2 to a child_425, we say the child_425 has been served. Once we serve a regular sandwich_2 to a child_425, the sandwich_2 is no longer on the tray_474. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread274 content183)", "(put_on_tray sandw2 tray474)", "(move_tray tray474 kitchen table320)", "(serve_sandwich sandw2 child425 tray474 table320)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, bread_274 is at kitchen, tray_474 is at kitchen, sandwich_2 is not ready yet, sandwich_1 is not ready yet, tray_456 is at kitchen, child_425 is not allergic to gluten, tray_403 is at kitchen, child_425 is waiting for sandwich at table_320, content_183 is at kitchen.My goal is to have that child_425 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_2 only if there is a content_183 at kitchen. We can make a regular sandwich_2 only if there is a bread_274 at kitchen. </PRECON> make a regular sandwich_2 using bread_274 and content_183 <EFFECT> Once we make a regular sandwich_2, the sandwich_2 is at kitchen. Once we make a regular sandwich_2, the bread_274 and content_183 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_2 on a tray_474 only if the tray_474 is also at kitchen. We can put a sandwich_2 on a tray_474 only if the sandwich_2 is at kitchen. </PRECON> put sandwich_2 on tray_474 <EFFECT> Once we put a sandwich_2 on a tray_474, the sandwich_2 is no longer at kitchen but is on the tray_474. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_474 from kitchen to table_320 only if the tray_474 is at kitchen. </PRECON> move tray_474 from kitchen to table_320 <EFFECT> Once we move a tray_474 from kitchen to table_320, the tray_474 is no longer at kitchen but is at table_320. </EFFECT> \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_2 to a child_425 only if the sandwich_2 is on a tray_474 and the tray_474 is at the table_320 where the child_425 is waiting. We can serve a regular sandwich_2 to a child_425 only if the child_425 is not allergic to gluten. We can serve a regular sandwich_2 to a child_425 only if the child is waiting for the sandwich_2 at the table_320. </PRECON> use tray_474 to serve regular sandwich_2 to child_425 at table_320 <EFFECT> Once we serve a regular sandwich_2 to a child_425, we say the child_425 has been served. Once we serve a regular sandwich_2 to a child_425, the sandwich_2 is no longer on the tray_474. </EFFECT> \n</PLAN>"}
{"domain": "childsnack", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, content_63 is at kitchen, bread_166 is at kitchen, child_441 is waiting for sandwich at table_46, child_441 is not allergic to gluten, bread_99 is at kitchen, content_217 is at kitchen, sandwich_3 is not ready yet, tray_213 is at kitchen, tray_438 is at kitchen, sandwich_2 is not ready yet, sandwich_4 is not ready yet, child_167 is waiting for sandwich at table_404, child_167 is not allergic to gluten, sandwich_1 is not ready yet, tray_62 is at kitchen.\nMy goal is to have that child_167 has been served, child_441 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 7 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a content_217 at kitchen. We can make a regular sandwich_4 only if there is a bread_166 at kitchen. </PRECON> make a regular sandwich_4 using bread_166 and content_217 <EFFECT> Once we make a regular sandwich_4, the sandwich_4 is at kitchen. Once we make a regular sandwich_4, the bread_166 and content_217 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 6 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_62 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_62 only if the tray_62 is also at kitchen. </PRECON> put sandwich_4 on tray_62 <EFFECT> Once we put a sandwich_4 on a tray_62, the sandwich_4 is no longer at kitchen but is on the tray_62. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 5 </COUNT>  <PRECON> We can move a tray_62 from kitchen to table_404 only if the tray_62 is at kitchen. </PRECON> move tray_62 from kitchen to table_404 <EFFECT> Once we move a tray_62 from kitchen to table_404, the tray_62 is no longer at kitchen but is at table_404. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 4 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_167 only if the child is waiting for the sandwich_4 at the table_404. We can serve a regular sandwich_4 to a child_167 only if the child_167 is not allergic to gluten. We can serve a regular sandwich_4 to a child_167 only if the sandwich_4 is on a tray_62 and the tray_62 is at the table_404 where the child_167 is waiting. </PRECON> use tray_62 to serve regular sandwich_4 to child_167 at table_404 <EFFECT> Once we serve a regular sandwich_4 to a child_167, we say the child_167 has been served. Once we serve a regular sandwich_4 to a child_167, the sandwich_4 is no longer on the tray_62. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_3 only if there is a content_63 at kitchen. We can make a regular sandwich_3 only if there is a bread_99 at kitchen. </PRECON> make a regular sandwich_3 using bread_99 and content_63 <EFFECT> Once we make a regular sandwich_3, the sandwich_3 is at kitchen. Once we make a regular sandwich_3, the bread_99 and content_63 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_3 on a tray_438 only if the sandwich_3 is at kitchen. We can put a sandwich_3 on a tray_438 only if the tray_438 is also at kitchen. </PRECON> put sandwich_3 on tray_438 <EFFECT> Once we put a sandwich_3 on a tray_438, the sandwich_3 is no longer at kitchen but is on the tray_438. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_438 from kitchen to table_46 only if the tray_438 is at kitchen. </PRECON> move tray_438 from kitchen to table_46 <EFFECT> Once we move a tray_438 from kitchen to table_46, the tray_438 is no longer at kitchen but is at table_46. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_3 to a child_441 only if the child is waiting for the sandwich_3 at the table_46. We can serve a regular sandwich_3 to a child_441 only if the child_441 is not allergic to gluten. We can serve a regular sandwich_3 to a child_441 only if the sandwich_3 is on a tray_438 and the tray_438 is at the table_46 where the child_441 is waiting. </PRECON> use tray_438 to serve regular sandwich_3 to child_441 at table_46 <EFFECT> Once we serve a regular sandwich_3 to a child_441, we say the child_441 has been served. Once we serve a regular sandwich_3 to a child_441, the sandwich_3 is no longer on the tray_438. </EFFECT> \n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread166 content217)", "(put_on_tray sandw4 tray62)", "(move_tray tray62 kitchen table404)", "(serve_sandwich sandw4 child167 tray62 table404)", "(make_sandwich sandw3 bread99 content63)", "(put_on_tray sandw3 tray438)", "(move_tray tray438 kitchen table46)", "(serve_sandwich sandw3 child441 tray438 table46)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, content_63 is at kitchen, bread_166 is at kitchen, child_441 is waiting for sandwich at table_46, child_441 is not allergic to gluten, bread_99 is at kitchen, content_217 is at kitchen, sandwich_3 is not ready yet, tray_213 is at kitchen, tray_438 is at kitchen, sandwich_2 is not ready yet, sandwich_4 is not ready yet, child_167 is waiting for sandwich at table_404, child_167 is not allergic to gluten, sandwich_1 is not ready yet, tray_62 is at kitchen.My goal is to have that child_167 has been served, child_441 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 7 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a content_217 at kitchen. We can make a regular sandwich_4 only if there is a bread_166 at kitchen. </PRECON> make a regular sandwich_4 using bread_166 and content_217 <EFFECT> Once we make a regular sandwich_4, the sandwich_4 is at kitchen. Once we make a regular sandwich_4, the bread_166 and content_217 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 6 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_62 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_62 only if the tray_62 is also at kitchen. </PRECON> put sandwich_4 on tray_62 <EFFECT> Once we put a sandwich_4 on a tray_62, the sandwich_4 is no longer at kitchen but is on the tray_62. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 5 </COUNT>  <PRECON> We can move a tray_62 from kitchen to table_404 only if the tray_62 is at kitchen. </PRECON> move tray_62 from kitchen to table_404 <EFFECT> Once we move a tray_62 from kitchen to table_404, the tray_62 is no longer at kitchen but is at table_404. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 4 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_167 only if the child is waiting for the sandwich_4 at the table_404. We can serve a regular sandwich_4 to a child_167 only if the child_167 is not allergic to gluten. We can serve a regular sandwich_4 to a child_167 only if the sandwich_4 is on a tray_62 and the tray_62 is at the table_404 where the child_167 is waiting. </PRECON> use tray_62 to serve regular sandwich_4 to child_167 at table_404 <EFFECT> Once we serve a regular sandwich_4 to a child_167, we say the child_167 has been served. Once we serve a regular sandwich_4 to a child_167, the sandwich_4 is no longer on the tray_62. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_3 only if there is a content_63 at kitchen. We can make a regular sandwich_3 only if there is a bread_99 at kitchen. </PRECON> make a regular sandwich_3 using bread_99 and content_63 <EFFECT> Once we make a regular sandwich_3, the sandwich_3 is at kitchen. Once we make a regular sandwich_3, the bread_99 and content_63 are no longer at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_3 on a tray_438 only if the sandwich_3 is at kitchen. We can put a sandwich_3 on a tray_438 only if the tray_438 is also at kitchen. </PRECON> put sandwich_3 on tray_438 <EFFECT> Once we put a sandwich_3 on a tray_438, the sandwich_3 is no longer at kitchen but is on the tray_438. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_438 from kitchen to table_46 only if the tray_438 is at kitchen. </PRECON> move tray_438 from kitchen to table_46 <EFFECT> Once we move a tray_438 from kitchen to table_46, the tray_438 is no longer at kitchen but is at table_46. </EFFECT> \n <GOAL> My goal is to have that child_167 has been served, child_441 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_3 to a child_441 only if the child is waiting for the sandwich_3 at the table_46. We can serve a regular sandwich_3 to a child_441 only if the child_441 is not allergic to gluten. We can serve a regular sandwich_3 to a child_441 only if the sandwich_3 is on a tray_438 and the tray_438 is at the table_46 where the child_441 is waiting. </PRECON> use tray_438 to serve regular sandwich_3 to child_441 at table_46 <EFFECT> Once we serve a regular sandwich_3 to a child_441, we say the child_441 has been served. Once we serve a regular sandwich_3 to a child_441, the sandwich_3 is no longer on the tray_438. </EFFECT> \n</PLAN>"}
{"domain": "childsnack", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_416 is not allergic to gluten, bread_269 is at kitchen, content_157 is at kitchen, tray_365 is at kitchen, child_416 is waiting for sandwich at table_232, child_463 is waiting for sandwich at table_31, tray_235 is at kitchen, child_463 is not allergic to gluten, sandwich_2 is not ready yet, sandwich_1 is not ready yet, tray_31 is at kitchen, content_338 is at kitchen, sandwich_4 is not ready yet, bread_393 is at kitchen, sandwich_3 is not ready yet.\nMy goal is to have that child_463 has been served, child_416 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 7 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a bread_269 at kitchen. We can make a regular sandwich_4 only if there is a content_157 at kitchen. </PRECON> make a regular sandwich_4 using bread_269 and content_157 <EFFECT> Once we make a regular sandwich_4, the bread_269 and content_157 are no longer at kitchen. Once we make a regular sandwich_4, the sandwich_4 is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 6 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_365 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_365 only if the tray_365 is also at kitchen. </PRECON> put sandwich_4 on tray_365 <EFFECT> Once we put a sandwich_4 on a tray_365, the sandwich_4 is no longer at kitchen but is on the tray_365. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 5 </COUNT>  <PRECON> We can move a tray_365 from kitchen to table_232 only if the tray_365 is at kitchen. </PRECON> move tray_365 from kitchen to table_232 <EFFECT> Once we move a tray_365 from kitchen to table_232, the tray_365 is no longer at kitchen but is at table_232. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 4 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_416 only if the sandwich_4 is on a tray_365 and the tray_365 is at the table_232 where the child_416 is waiting. We can serve a regular sandwich_4 to a child_416 only if the child_416 is not allergic to gluten. We can serve a regular sandwich_4 to a child_416 only if the child is waiting for the sandwich_4 at the table_232. </PRECON> use tray_365 to serve regular sandwich_4 to child_416 at table_232 <EFFECT> Once we serve a regular sandwich_4 to a child_416, the sandwich_4 is no longer on the tray_365. Once we serve a regular sandwich_4 to a child_416, we say the child_416 has been served. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_3 only if there is a bread_393 at kitchen. We can make a regular sandwich_3 only if there is a content_338 at kitchen. </PRECON> make a regular sandwich_3 using bread_393 and content_338 <EFFECT> Once we make a regular sandwich_3, the bread_393 and content_338 are no longer at kitchen. Once we make a regular sandwich_3, the sandwich_3 is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_3 on a tray_31 only if the sandwich_3 is at kitchen. We can put a sandwich_3 on a tray_31 only if the tray_31 is also at kitchen. </PRECON> put sandwich_3 on tray_31 <EFFECT> Once we put a sandwich_3 on a tray_31, the sandwich_3 is no longer at kitchen but is on the tray_31. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_31 from kitchen to table_31 only if the tray_31 is at kitchen. </PRECON> move tray_31 from kitchen to table_31 <EFFECT> Once we move a tray_31 from kitchen to table_31, the tray_31 is no longer at kitchen but is at table_31. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_3 to a child_463 only if the sandwich_3 is on a tray_31 and the tray_31 is at the table_31 where the child_463 is waiting. We can serve a regular sandwich_3 to a child_463 only if the child_463 is not allergic to gluten. We can serve a regular sandwich_3 to a child_463 only if the child is waiting for the sandwich_3 at the table_31. </PRECON> use tray_31 to serve regular sandwich_3 to child_463 at table_31 <EFFECT> Once we serve a regular sandwich_3 to a child_463, the sandwich_3 is no longer on the tray_31. Once we serve a regular sandwich_3 to a child_463, we say the child_463 has been served. </EFFECT> \n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread269 content157)", "(put_on_tray sandw4 tray365)", "(move_tray tray365 kitchen table232)", "(serve_sandwich sandw4 child416 tray365 table232)", "(make_sandwich sandw3 bread393 content338)", "(put_on_tray sandw3 tray31)", "(move_tray tray31 kitchen table31)", "(serve_sandwich sandw3 child463 tray31 table31)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_416 is not allergic to gluten, bread_269 is at kitchen, content_157 is at kitchen, tray_365 is at kitchen, child_416 is waiting for sandwich at table_232, child_463 is waiting for sandwich at table_31, tray_235 is at kitchen, child_463 is not allergic to gluten, sandwich_2 is not ready yet, sandwich_1 is not ready yet, tray_31 is at kitchen, content_338 is at kitchen, sandwich_4 is not ready yet, bread_393 is at kitchen, sandwich_3 is not ready yet.My goal is to have that child_463 has been served, child_416 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 7 </COUNT>  <PRECON> We can make a regular sandwich_4 only if there is a bread_269 at kitchen. We can make a regular sandwich_4 only if there is a content_157 at kitchen. </PRECON> make a regular sandwich_4 using bread_269 and content_157 <EFFECT> Once we make a regular sandwich_4, the bread_269 and content_157 are no longer at kitchen. Once we make a regular sandwich_4, the sandwich_4 is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 6 </COUNT>  <PRECON> We can put a sandwich_4 on a tray_365 only if the sandwich_4 is at kitchen. We can put a sandwich_4 on a tray_365 only if the tray_365 is also at kitchen. </PRECON> put sandwich_4 on tray_365 <EFFECT> Once we put a sandwich_4 on a tray_365, the sandwich_4 is no longer at kitchen but is on the tray_365. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 5 </COUNT>  <PRECON> We can move a tray_365 from kitchen to table_232 only if the tray_365 is at kitchen. </PRECON> move tray_365 from kitchen to table_232 <EFFECT> Once we move a tray_365 from kitchen to table_232, the tray_365 is no longer at kitchen but is at table_232. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 4 </COUNT>  <PRECON> We can serve a regular sandwich_4 to a child_416 only if the sandwich_4 is on a tray_365 and the tray_365 is at the table_232 where the child_416 is waiting. We can serve a regular sandwich_4 to a child_416 only if the child_416 is not allergic to gluten. We can serve a regular sandwich_4 to a child_416 only if the child is waiting for the sandwich_4 at the table_232. </PRECON> use tray_365 to serve regular sandwich_4 to child_416 at table_232 <EFFECT> Once we serve a regular sandwich_4 to a child_416, the sandwich_4 is no longer on the tray_365. Once we serve a regular sandwich_4 to a child_416, we say the child_416 has been served. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 3 </COUNT>  <PRECON> We can make a regular sandwich_3 only if there is a bread_393 at kitchen. We can make a regular sandwich_3 only if there is a content_338 at kitchen. </PRECON> make a regular sandwich_3 using bread_393 and content_338 <EFFECT> Once we make a regular sandwich_3, the bread_393 and content_338 are no longer at kitchen. Once we make a regular sandwich_3, the sandwich_3 is at kitchen. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 2 </COUNT>  <PRECON> We can put a sandwich_3 on a tray_31 only if the sandwich_3 is at kitchen. We can put a sandwich_3 on a tray_31 only if the tray_31 is also at kitchen. </PRECON> put sandwich_3 on tray_31 <EFFECT> Once we put a sandwich_3 on a tray_31, the sandwich_3 is no longer at kitchen but is on the tray_31. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 1 </COUNT>  <PRECON> We can move a tray_31 from kitchen to table_31 only if the tray_31 is at kitchen. </PRECON> move tray_31 from kitchen to table_31 <EFFECT> Once we move a tray_31 from kitchen to table_31, the tray_31 is no longer at kitchen but is at table_31. </EFFECT> \n <GOAL> My goal is to have that child_463 has been served, child_416 has been served. <COUNT> 0 </COUNT>  <PRECON> We can serve a regular sandwich_3 to a child_463 only if the sandwich_3 is on a tray_31 and the tray_31 is at the table_31 where the child_463 is waiting. We can serve a regular sandwich_3 to a child_463 only if the child_463 is not allergic to gluten. We can serve a regular sandwich_3 to a child_463 only if the child is waiting for the sandwich_3 at the table_31. </PRECON> use tray_31 to serve regular sandwich_3 to child_463 at table_31 <EFFECT> Once we serve a regular sandwich_3 to a child_463, the sandwich_3 is no longer on the tray_31. Once we serve a regular sandwich_3 to a child_463, we say the child_463 has been served. </EFFECT> \n</PLAN>"}
{"domain": "depots", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, pallet_1 is at depot_1, crate_0 is clear, crate_1 is on pallet_5, crate_1 is clear, pallet_0 is at depot_0, hoist_0 is at depot_0, hoist_0 is available, hoist_1 is available, pallet_0 is clear, truck_1 is at depot_3, truck_2 is at distributor_0, hoist_4 is available, crate_0 is at distributor_0, pallet_3 is clear, hoist_3 is available, pallet_2 is clear, crate_1 is at distributor_1, crate_0 is on pallet_4, hoist_2 is at depot_2, truck_0 is at depot_0, pallet_4 is at distributor_0, pallet_1 is clear, pallet_5 is at distributor_1, hoist_5 is at distributor_1, hoist_4 is at distributor_0, pallet_3 is at depot_3, hoist_1 is at depot_1, hoist_3 is at depot_3, hoist_5 is available, hoist_2 is available, pallet_2 is at depot_2.\nMy goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 13 </COUNT>  <PRECON> A truck_2 can be driven from distributor_0 to depot_1 only if the truck_2 is at the distributor_0. </PRECON> drive truck_2 from distributor_0 to depot_1 <EFFECT> Once a truck_2 has been driven from distributor_0 to depot_1, it is not at the origin distributor_0 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 12 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_4 only if the hoist_4 is at the same place distributor_0 as the crate_0, the hoist_4 is available, and the crate_0 is clear. </PRECON> Use hoist_4 to lift crate_0 from pallet_4 at distributor_0 <EFFECT> Once a crate_0 has been lifted by a hoist_4 from a pallet_4 at a place distributor_0, the crate_0 is not at the place distributor_0, the hoist_4 is lifting the crate_0, the hoist_4 is not available, the pallet_4 is clear, and the crate_0 is not on the pallet_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 11 </COUNT>  <PRECON> A truck_0 can be driven from depot_0 to depot_2 only if the truck_0 is at the depot_0. </PRECON> drive truck_0 from depot_0 to depot_2 <EFFECT> Once a truck_0 has been driven from depot_0 to depot_2, it is not at the origin depot_0 and is at the destination depot_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 10 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_5 only if the hoist_5 is at the same place distributor_1 as the crate_1, the hoist_5 is available, and the crate_1 is clear. </PRECON> Use hoist_5 to lift crate_1 from pallet_5 at distributor_1 <EFFECT> Once a crate_1 has been lifted by a hoist_5 from a pallet_5 at a place distributor_1, the crate_1 is not at the place distributor_1, the hoist_5 is lifting the crate_1, the hoist_5 is not available, the pallet_5 is clear, and the crate_1 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 9 </COUNT>  <PRECON> A truck_2 can be driven from depot_1 to distributor_1 only if the truck_2 is at the depot_1. </PRECON> drive truck_2 from depot_1 to distributor_1 <EFFECT> Once a truck_2 has been driven from depot_1 to distributor_1, it is not at the origin depot_1 and is at the destination distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 8 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_5 onto a truck_2 at a place distributor_1 only if the hoist_5 is at the same place distributor_1, the truck_2 is at the same place distributor_1, and the hoist_5 is lifting the crate_1. </PRECON> Use hoist_5 to load crate_1 into truck_2 at distributor_1 <EFFECT> Once a crate_1 has been loaded by a hoist_5 onto a truck_2 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 7 </COUNT>  <PRECON> A truck_2 can be driven from distributor_1 to depot_1 only if the truck_2 is at the distributor_1. </PRECON> drive truck_2 from distributor_1 to depot_1 <EFFECT> Once a truck_2 has been driven from distributor_1 to depot_1, it is not at the origin distributor_1 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_1 from a truck_2 at a place depot_1 only if the hoist_1 is at the same place depot_1 as the truck_2, the hoist_1 is available, and the crate_1 is in the truck_2. </PRECON> Use hoist_1 to unload crate_1 from truck_2 at depot_1 <EFFECT> Once a crate_1 has been unloaded by a hoist_1 from a truck_2 at a place depot_1, the crate_1 is not in the truck_2, the hoist_1 is not available, and the hoist_1 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 5 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_1 to a pallet_1 only if the hoist_1 and pallet_1 are both at the place depot_1, the pallet_1 is clear, and the hoist_1 is lifting the crate_1. </PRECON> Use hoist_1 to drop crate_1 to pallet_1 at depot_1 <EFFECT> Once a crate_1 has been dropped by a hoist_1 to a pallet_1 at a place depot_1, the hoist_1 is available, the hoist_1 is not lifting the crate_1, the crate_1 is at the place depot_1, the pallet_1 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from depot_2 to distributor_0 only if the truck_0 is at the depot_2. </PRECON> drive truck_0 from depot_2 to distributor_0 <EFFECT> Once a truck_0 has been driven from depot_2 to distributor_0, it is not at the origin depot_2 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_4 onto a truck_0 at a place distributor_0 only if the hoist_4 is at the same place distributor_0, the truck_0 is at the same place distributor_0, and the hoist_4 is lifting the crate_0. </PRECON> Use hoist_4 to load crate_0 into truck_0 at distributor_0 <EFFECT> Once a crate_0 has been loaded by a hoist_4 onto a truck_0 at a place distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 2 </COUNT>  <PRECON> A truck_0 can be driven from distributor_0 to depot_2 only if the truck_0 is at the distributor_0. </PRECON> drive truck_0 from distributor_0 to depot_2 <EFFECT> Once a truck_0 has been driven from distributor_0 to depot_2, it is not at the origin distributor_0 and is at the destination depot_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_2 from a truck_0 at a place depot_2 only if the hoist_2 is at the same place depot_2 as the truck_0, the hoist_2 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_2 to unload crate_0 from truck_0 at depot_2 <EFFECT> Once a crate_0 has been unloaded by a hoist_2 from a truck_0 at a place depot_2, the crate_0 is not in the truck_0, the hoist_2 is not available, and the hoist_2 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_2 to a pallet_2 only if the hoist_2 and pallet_2 are both at the place depot_2, the pallet_2 is clear, and the hoist_2 is lifting the crate_0. </PRECON> Use hoist_2 to drop crate_0 to pallet_2 at depot_2 <EFFECT> Once a crate_0 has been dropped by a hoist_2 to a pallet_2 at a place depot_2, the hoist_2 is available, the hoist_2 is not lifting the crate_0, the crate_0 is at the place depot_2, the pallet_2 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_2. </EFFECT> \n</PLAN>", "plan_length": 14, "raw_plan": ["(drive truck2 distributor0 depot1)", "(lift hoist4 crate0 pallet4 distributor0)", "(drive truck0 depot0 depot2)", "(lift hoist5 crate1 pallet5 distributor1)", "(drive truck2 depot1 distributor1)", "(load hoist5 crate1 truck2 distributor1)", "(drive truck2 distributor1 depot1)", "(unload hoist1 crate1 truck2 depot1)", "(drop hoist1 crate1 pallet1 depot1)", "(drive truck0 depot2 distributor0)", "(load hoist4 crate0 truck0 distributor0)", "(drive truck0 distributor0 depot2)", "(unload hoist2 crate0 truck0 depot2)", "(drop hoist2 crate0 pallet2 depot2)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, pallet_1 is at depot_1, crate_0 is clear, crate_1 is on pallet_5, crate_1 is clear, pallet_0 is at depot_0, hoist_0 is at depot_0, hoist_0 is available, hoist_1 is available, pallet_0 is clear, truck_1 is at depot_3, truck_2 is at distributor_0, hoist_4 is available, crate_0 is at distributor_0, pallet_3 is clear, hoist_3 is available, pallet_2 is clear, crate_1 is at distributor_1, crate_0 is on pallet_4, hoist_2 is at depot_2, truck_0 is at depot_0, pallet_4 is at distributor_0, pallet_1 is clear, pallet_5 is at distributor_1, hoist_5 is at distributor_1, hoist_4 is at distributor_0, pallet_3 is at depot_3, hoist_1 is at depot_1, hoist_3 is at depot_3, hoist_5 is available, hoist_2 is available, pallet_2 is at depot_2.My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 13 </COUNT>  <PRECON> A truck_2 can be driven from distributor_0 to depot_1 only if the truck_2 is at the distributor_0. </PRECON> drive truck_2 from distributor_0 to depot_1 <EFFECT> Once a truck_2 has been driven from distributor_0 to depot_1, it is not at the origin distributor_0 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 12 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_4 only if the hoist_4 is at the same place distributor_0 as the crate_0, the hoist_4 is available, and the crate_0 is clear. </PRECON> Use hoist_4 to lift crate_0 from pallet_4 at distributor_0 <EFFECT> Once a crate_0 has been lifted by a hoist_4 from a pallet_4 at a place distributor_0, the crate_0 is not at the place distributor_0, the hoist_4 is lifting the crate_0, the hoist_4 is not available, the pallet_4 is clear, and the crate_0 is not on the pallet_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 11 </COUNT>  <PRECON> A truck_0 can be driven from depot_0 to depot_2 only if the truck_0 is at the depot_0. </PRECON> drive truck_0 from depot_0 to depot_2 <EFFECT> Once a truck_0 has been driven from depot_0 to depot_2, it is not at the origin depot_0 and is at the destination depot_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 10 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_5 only if the hoist_5 is at the same place distributor_1 as the crate_1, the hoist_5 is available, and the crate_1 is clear. </PRECON> Use hoist_5 to lift crate_1 from pallet_5 at distributor_1 <EFFECT> Once a crate_1 has been lifted by a hoist_5 from a pallet_5 at a place distributor_1, the crate_1 is not at the place distributor_1, the hoist_5 is lifting the crate_1, the hoist_5 is not available, the pallet_5 is clear, and the crate_1 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 9 </COUNT>  <PRECON> A truck_2 can be driven from depot_1 to distributor_1 only if the truck_2 is at the depot_1. </PRECON> drive truck_2 from depot_1 to distributor_1 <EFFECT> Once a truck_2 has been driven from depot_1 to distributor_1, it is not at the origin depot_1 and is at the destination distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 8 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_5 onto a truck_2 at a place distributor_1 only if the hoist_5 is at the same place distributor_1, the truck_2 is at the same place distributor_1, and the hoist_5 is lifting the crate_1. </PRECON> Use hoist_5 to load crate_1 into truck_2 at distributor_1 <EFFECT> Once a crate_1 has been loaded by a hoist_5 onto a truck_2 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 7 </COUNT>  <PRECON> A truck_2 can be driven from distributor_1 to depot_1 only if the truck_2 is at the distributor_1. </PRECON> drive truck_2 from distributor_1 to depot_1 <EFFECT> Once a truck_2 has been driven from distributor_1 to depot_1, it is not at the origin distributor_1 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_1 from a truck_2 at a place depot_1 only if the hoist_1 is at the same place depot_1 as the truck_2, the hoist_1 is available, and the crate_1 is in the truck_2. </PRECON> Use hoist_1 to unload crate_1 from truck_2 at depot_1 <EFFECT> Once a crate_1 has been unloaded by a hoist_1 from a truck_2 at a place depot_1, the crate_1 is not in the truck_2, the hoist_1 is not available, and the hoist_1 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 5 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_1 to a pallet_1 only if the hoist_1 and pallet_1 are both at the place depot_1, the pallet_1 is clear, and the hoist_1 is lifting the crate_1. </PRECON> Use hoist_1 to drop crate_1 to pallet_1 at depot_1 <EFFECT> Once a crate_1 has been dropped by a hoist_1 to a pallet_1 at a place depot_1, the hoist_1 is available, the hoist_1 is not lifting the crate_1, the crate_1 is at the place depot_1, the pallet_1 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from depot_2 to distributor_0 only if the truck_0 is at the depot_2. </PRECON> drive truck_0 from depot_2 to distributor_0 <EFFECT> Once a truck_0 has been driven from depot_2 to distributor_0, it is not at the origin depot_2 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_4 onto a truck_0 at a place distributor_0 only if the hoist_4 is at the same place distributor_0, the truck_0 is at the same place distributor_0, and the hoist_4 is lifting the crate_0. </PRECON> Use hoist_4 to load crate_0 into truck_0 at distributor_0 <EFFECT> Once a crate_0 has been loaded by a hoist_4 onto a truck_0 at a place distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 2 </COUNT>  <PRECON> A truck_0 can be driven from distributor_0 to depot_2 only if the truck_0 is at the distributor_0. </PRECON> drive truck_0 from distributor_0 to depot_2 <EFFECT> Once a truck_0 has been driven from distributor_0 to depot_2, it is not at the origin distributor_0 and is at the destination depot_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_2 from a truck_0 at a place depot_2 only if the hoist_2 is at the same place depot_2 as the truck_0, the hoist_2 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_2 to unload crate_0 from truck_0 at depot_2 <EFFECT> Once a crate_0 has been unloaded by a hoist_2 from a truck_0 at a place depot_2, the crate_0 is not in the truck_0, the hoist_2 is not available, and the hoist_2 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_1, crate_0 is on pallet_2. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_2 to a pallet_2 only if the hoist_2 and pallet_2 are both at the place depot_2, the pallet_2 is clear, and the hoist_2 is lifting the crate_0. </PRECON> Use hoist_2 to drop crate_0 to pallet_2 at depot_2 <EFFECT> Once a crate_0 has been dropped by a hoist_2 to a pallet_2 at a place depot_2, the hoist_2 is available, the hoist_2 is not lifting the crate_0, the crate_0 is at the place depot_2, the pallet_2 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_2. </EFFECT> \n</PLAN>"}
{"domain": "depots", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is clear, hoist_7 is at distributor_2, pallet_4 is clear, hoist_1 is at depot_1, hoist_8 is available, pallet_4 is at depot_4, crate_0 is at depot_0, hoist_2 is at depot_2, pallet_5 is at distributor_0, pallet_6 is clear, truck_0 is at depot_0, hoist_1 is available, hoist_7 is available, pallet_3 is at depot_3, pallet_2 is clear, hoist_6 is at distributor_1, pallet_1 is at depot_1, hoist_0 is available, pallet_0 is at depot_0, pallet_7 is at distributor_2, pallet_6 is at distributor_1, hoist_4 is at depot_4, hoist_4 is available, crate_1 is on pallet_1, truck_1 is at depot_0, hoist_3 is available, crate_1 is clear, crate_1 is at depot_1, hoist_5 is at distributor_0, crate_0 is on pallet_0, hoist_8 is at distributor_2, hoist_0 is at depot_0, hoist_5 is available, pallet_3 is clear, hoist_3 is at depot_3, pallet_5 is clear, pallet_2 is at depot_2, hoist_6 is available, hoist_2 is available, pallet_7 is clear, truck_2 is at distributor_0.\nMy goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 4 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_0 only if the hoist_0 is at the same place depot_0 as the crate_0, the hoist_0 is available, and the crate_0 is clear. </PRECON> Use hoist_0 to lift crate_0 from pallet_0 at depot_0 <EFFECT> Once a crate_0 has been lifted by a hoist_0 from a pallet_0 at a place depot_0, the crate_0 is not at the place depot_0, the hoist_0 is lifting the crate_0, the hoist_0 is not available, the pallet_0 is clear, and the crate_0 is not on the pallet_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_0 onto a truck_1 at a place depot_0 only if the hoist_0 is at the same place depot_0, the truck_1 is at the same place depot_0, and the hoist_0 is lifting the crate_0. </PRECON> Use hoist_0 to load crate_0 into truck_1 at depot_0 <EFFECT> Once a crate_0 has been loaded by a hoist_0 onto a truck_1 at a place depot_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 2 </COUNT>  <PRECON> A truck_1 can be driven from depot_0 to distributor_0 only if the truck_1 is at the depot_0. </PRECON> drive truck_1 from depot_0 to distributor_0 <EFFECT> Once a truck_1 has been driven from depot_0 to distributor_0, it is not at the origin depot_0 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_5 from a truck_1 at a place distributor_0 only if the hoist_5 is at the same place distributor_0 as the truck_1, the hoist_5 is available, and the crate_0 is in the truck_1. </PRECON> Use hoist_5 to unload crate_0 from truck_1 at distributor_0 <EFFECT> Once a crate_0 has been unloaded by a hoist_5 from a truck_1 at a place distributor_0, the crate_0 is not in the truck_1, the hoist_5 is not available, and the hoist_5 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_5 to a pallet_5 only if the hoist_5 and pallet_5 are both at the place distributor_0, the pallet_5 is clear, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0 <EFFECT> Once a crate_0 has been dropped by a hoist_5 to a pallet_5 at a place distributor_0, the hoist_5 is available, the hoist_5 is not lifting the crate_0, the crate_0 is at the place distributor_0, the pallet_5 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_5. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(lift hoist0 crate0 pallet0 depot0)", "(load hoist0 crate0 truck1 depot0)", "(drive truck1 depot0 distributor0)", "(unload hoist5 crate0 truck1 distributor0)", "(drop hoist5 crate0 pallet5 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is clear, hoist_7 is at distributor_2, pallet_4 is clear, hoist_1 is at depot_1, hoist_8 is available, pallet_4 is at depot_4, crate_0 is at depot_0, hoist_2 is at depot_2, pallet_5 is at distributor_0, pallet_6 is clear, truck_0 is at depot_0, hoist_1 is available, hoist_7 is available, pallet_3 is at depot_3, pallet_2 is clear, hoist_6 is at distributor_1, pallet_1 is at depot_1, hoist_0 is available, pallet_0 is at depot_0, pallet_7 is at distributor_2, pallet_6 is at distributor_1, hoist_4 is at depot_4, hoist_4 is available, crate_1 is on pallet_1, truck_1 is at depot_0, hoist_3 is available, crate_1 is clear, crate_1 is at depot_1, hoist_5 is at distributor_0, crate_0 is on pallet_0, hoist_8 is at distributor_2, hoist_0 is at depot_0, hoist_5 is available, pallet_3 is clear, hoist_3 is at depot_3, pallet_5 is clear, pallet_2 is at depot_2, hoist_6 is available, hoist_2 is available, pallet_7 is clear, truck_2 is at distributor_0.My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 4 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_0 only if the hoist_0 is at the same place depot_0 as the crate_0, the hoist_0 is available, and the crate_0 is clear. </PRECON> Use hoist_0 to lift crate_0 from pallet_0 at depot_0 <EFFECT> Once a crate_0 has been lifted by a hoist_0 from a pallet_0 at a place depot_0, the crate_0 is not at the place depot_0, the hoist_0 is lifting the crate_0, the hoist_0 is not available, the pallet_0 is clear, and the crate_0 is not on the pallet_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_0 onto a truck_1 at a place depot_0 only if the hoist_0 is at the same place depot_0, the truck_1 is at the same place depot_0, and the hoist_0 is lifting the crate_0. </PRECON> Use hoist_0 to load crate_0 into truck_1 at depot_0 <EFFECT> Once a crate_0 has been loaded by a hoist_0 onto a truck_1 at a place depot_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 2 </COUNT>  <PRECON> A truck_1 can be driven from depot_0 to distributor_0 only if the truck_1 is at the depot_0. </PRECON> drive truck_1 from depot_0 to distributor_0 <EFFECT> Once a truck_1 has been driven from depot_0 to distributor_0, it is not at the origin depot_0 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_5 from a truck_1 at a place distributor_0 only if the hoist_5 is at the same place distributor_0 as the truck_1, the hoist_5 is available, and the crate_0 is in the truck_1. </PRECON> Use hoist_5 to unload crate_0 from truck_1 at distributor_0 <EFFECT> Once a crate_0 has been unloaded by a hoist_5 from a truck_1 at a place distributor_0, the crate_0 is not in the truck_1, the hoist_5 is not available, and the hoist_5 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_5 to a pallet_5 only if the hoist_5 and pallet_5 are both at the place distributor_0, the pallet_5 is clear, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0 <EFFECT> Once a crate_0 has been dropped by a hoist_5 to a pallet_5 at a place distributor_0, the hoist_5 is available, the hoist_5 is not lifting the crate_0, the crate_0 is at the place distributor_0, the pallet_5 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_5. </EFFECT> \n</PLAN>"}
{"domain": "depots", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, truck_3 is at depot_0, pallet_0 is at depot_0, hoist_7 is available, pallet_0 is clear, crate_1 is on pallet_1, hoist_7 is at distributor_5, pallet_7 is clear, crate_0 is on pallet_3, hoist_3 is available, hoist_1 is at depot_1, hoist_6 is at distributor_4, truck_0 is at distributor_5, pallet_1 is at depot_1, pallet_5 is clear, pallet_6 is clear, truck_2 is at depot_1, truck_1 is at distributor_1, pallet_4 is clear, hoist_4 is at distributor_2, hoist_0 is at depot_0, hoist_5 is at distributor_3, hoist_6 is available, hoist_8 is available, pallet_4 is at distributor_2, crate_0 is clear, hoist_2 is at distributor_0, pallet_6 is at distributor_4, pallet_5 is at distributor_3, hoist_3 is at distributor_1, hoist_1 is available, pallet_2 is clear, hoist_8 is at depot_1, crate_1 is clear, hoist_0 is available, hoist_2 is available, pallet_3 is at distributor_1, hoist_4 is available, crate_1 is at depot_1, crate_0 is at distributor_1, hoist_5 is available, pallet_2 is at distributor_0, pallet_7 is at distributor_5.\nMy goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 9 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_3 only if the hoist_3 is at the same place distributor_1 as the crate_0, the hoist_3 is available, and the crate_0 is clear. </PRECON> Use hoist_3 to lift crate_0 from pallet_3 at distributor_1 <EFFECT> Once a crate_0 has been lifted by a hoist_3 from a pallet_3 at a place distributor_1, the crate_0 is not at the place distributor_1, the hoist_3 is lifting the crate_0, the hoist_3 is not available, the pallet_3 is clear, and the crate_0 is not on the pallet_3. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 8 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_3 onto a truck_1 at a place distributor_1 only if the hoist_3 is at the same place distributor_1, the truck_1 is at the same place distributor_1, and the hoist_3 is lifting the crate_0. </PRECON> Use hoist_3 to load crate_0 into truck_1 at distributor_1 <EFFECT> Once a crate_0 has been loaded by a hoist_3 onto a truck_1 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 7 </COUNT>  <PRECON> A truck_1 can be driven from distributor_1 to distributor_3 only if the truck_1 is at the distributor_1. </PRECON> drive truck_1 from distributor_1 to distributor_3 <EFFECT> Once a truck_1 has been driven from distributor_1 to distributor_3, it is not at the origin distributor_1 and is at the destination distributor_3. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 6 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_5 from a truck_1 at a place distributor_3 only if the hoist_5 is at the same place distributor_3 as the truck_1, the hoist_5 is available, and the crate_0 is in the truck_1. </PRECON> Use hoist_5 to unload crate_0 from truck_1 at distributor_3 <EFFECT> Once a crate_0 has been unloaded by a hoist_5 from a truck_1 at a place distributor_3, the crate_0 is not in the truck_1, the hoist_5 is not available, and the hoist_5 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 5 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_5 to a pallet_5 only if the hoist_5 and pallet_5 are both at the place distributor_3, the pallet_5 is clear, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to drop crate_0 to pallet_5 at distributor_3 <EFFECT> Once a crate_0 has been dropped by a hoist_5 to a pallet_5 at a place distributor_3, the hoist_5 is available, the hoist_5 is not lifting the crate_0, the crate_0 is at the place distributor_3, the pallet_5 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 4 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_1 only if the hoist_1 is at the same place depot_1 as the crate_1, the hoist_1 is available, and the crate_1 is clear. </PRECON> Use hoist_1 to lift crate_1 from pallet_1 at depot_1 <EFFECT> Once a crate_1 has been lifted by a hoist_1 from a pallet_1 at a place depot_1, the crate_1 is not at the place depot_1, the hoist_1 is lifting the crate_1, the hoist_1 is not available, the pallet_1 is clear, and the crate_1 is not on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 3 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_1 onto a truck_2 at a place depot_1 only if the hoist_1 is at the same place depot_1, the truck_2 is at the same place depot_1, and the hoist_1 is lifting the crate_1. </PRECON> Use hoist_1 to load crate_1 into truck_2 at depot_1 <EFFECT> Once a crate_1 has been loaded by a hoist_1 onto a truck_2 at a place depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 2 </COUNT>  <PRECON> A truck_2 can be driven from depot_1 to distributor_0 only if the truck_2 is at the depot_1. </PRECON> drive truck_2 from depot_1 to distributor_0 <EFFECT> Once a truck_2 has been driven from depot_1 to distributor_0, it is not at the origin depot_1 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 1 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_2 from a truck_2 at a place distributor_0 only if the hoist_2 is at the same place distributor_0 as the truck_2, the hoist_2 is available, and the crate_1 is in the truck_2. </PRECON> Use hoist_2 to unload crate_1 from truck_2 at distributor_0 <EFFECT> Once a crate_1 has been unloaded by a hoist_2 from a truck_2 at a place distributor_0, the crate_1 is not in the truck_2, the hoist_2 is not available, and the hoist_2 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 0 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_2 to a pallet_2 only if the hoist_2 and pallet_2 are both at the place distributor_0, the pallet_2 is clear, and the hoist_2 is lifting the crate_1. </PRECON> Use hoist_2 to drop crate_1 to pallet_2 at distributor_0 <EFFECT> Once a crate_1 has been dropped by a hoist_2 to a pallet_2 at a place distributor_0, the hoist_2 is available, the hoist_2 is not lifting the crate_1, the crate_1 is at the place distributor_0, the pallet_2 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_2. </EFFECT> \n</PLAN>", "plan_length": 10, "raw_plan": ["(lift hoist3 crate0 pallet3 distributor1)", "(load hoist3 crate0 truck1 distributor1)", "(drive truck1 distributor1 distributor3)", "(unload hoist5 crate0 truck1 distributor3)", "(drop hoist5 crate0 pallet5 distributor3)", "(lift hoist1 crate1 pallet1 depot1)", "(load hoist1 crate1 truck2 depot1)", "(drive truck2 depot1 distributor0)", "(unload hoist2 crate1 truck2 distributor0)", "(drop hoist2 crate1 pallet2 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, truck_3 is at depot_0, pallet_0 is at depot_0, hoist_7 is available, pallet_0 is clear, crate_1 is on pallet_1, hoist_7 is at distributor_5, pallet_7 is clear, crate_0 is on pallet_3, hoist_3 is available, hoist_1 is at depot_1, hoist_6 is at distributor_4, truck_0 is at distributor_5, pallet_1 is at depot_1, pallet_5 is clear, pallet_6 is clear, truck_2 is at depot_1, truck_1 is at distributor_1, pallet_4 is clear, hoist_4 is at distributor_2, hoist_0 is at depot_0, hoist_5 is at distributor_3, hoist_6 is available, hoist_8 is available, pallet_4 is at distributor_2, crate_0 is clear, hoist_2 is at distributor_0, pallet_6 is at distributor_4, pallet_5 is at distributor_3, hoist_3 is at distributor_1, hoist_1 is available, pallet_2 is clear, hoist_8 is at depot_1, crate_1 is clear, hoist_0 is available, hoist_2 is available, pallet_3 is at distributor_1, hoist_4 is available, crate_1 is at depot_1, crate_0 is at distributor_1, hoist_5 is available, pallet_2 is at distributor_0, pallet_7 is at distributor_5.My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 9 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_3 only if the hoist_3 is at the same place distributor_1 as the crate_0, the hoist_3 is available, and the crate_0 is clear. </PRECON> Use hoist_3 to lift crate_0 from pallet_3 at distributor_1 <EFFECT> Once a crate_0 has been lifted by a hoist_3 from a pallet_3 at a place distributor_1, the crate_0 is not at the place distributor_1, the hoist_3 is lifting the crate_0, the hoist_3 is not available, the pallet_3 is clear, and the crate_0 is not on the pallet_3. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 8 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_3 onto a truck_1 at a place distributor_1 only if the hoist_3 is at the same place distributor_1, the truck_1 is at the same place distributor_1, and the hoist_3 is lifting the crate_0. </PRECON> Use hoist_3 to load crate_0 into truck_1 at distributor_1 <EFFECT> Once a crate_0 has been loaded by a hoist_3 onto a truck_1 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 7 </COUNT>  <PRECON> A truck_1 can be driven from distributor_1 to distributor_3 only if the truck_1 is at the distributor_1. </PRECON> drive truck_1 from distributor_1 to distributor_3 <EFFECT> Once a truck_1 has been driven from distributor_1 to distributor_3, it is not at the origin distributor_1 and is at the destination distributor_3. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 6 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_5 from a truck_1 at a place distributor_3 only if the hoist_5 is at the same place distributor_3 as the truck_1, the hoist_5 is available, and the crate_0 is in the truck_1. </PRECON> Use hoist_5 to unload crate_0 from truck_1 at distributor_3 <EFFECT> Once a crate_0 has been unloaded by a hoist_5 from a truck_1 at a place distributor_3, the crate_0 is not in the truck_1, the hoist_5 is not available, and the hoist_5 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 5 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_5 to a pallet_5 only if the hoist_5 and pallet_5 are both at the place distributor_3, the pallet_5 is clear, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to drop crate_0 to pallet_5 at distributor_3 <EFFECT> Once a crate_0 has been dropped by a hoist_5 to a pallet_5 at a place distributor_3, the hoist_5 is available, the hoist_5 is not lifting the crate_0, the crate_0 is at the place distributor_3, the pallet_5 is not clear, the crate_0 is clear, and the crate_0 is on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 4 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_1 only if the hoist_1 is at the same place depot_1 as the crate_1, the hoist_1 is available, and the crate_1 is clear. </PRECON> Use hoist_1 to lift crate_1 from pallet_1 at depot_1 <EFFECT> Once a crate_1 has been lifted by a hoist_1 from a pallet_1 at a place depot_1, the crate_1 is not at the place depot_1, the hoist_1 is lifting the crate_1, the hoist_1 is not available, the pallet_1 is clear, and the crate_1 is not on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 3 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_1 onto a truck_2 at a place depot_1 only if the hoist_1 is at the same place depot_1, the truck_2 is at the same place depot_1, and the hoist_1 is lifting the crate_1. </PRECON> Use hoist_1 to load crate_1 into truck_2 at depot_1 <EFFECT> Once a crate_1 has been loaded by a hoist_1 onto a truck_2 at a place depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 2 </COUNT>  <PRECON> A truck_2 can be driven from depot_1 to distributor_0 only if the truck_2 is at the depot_1. </PRECON> drive truck_2 from depot_1 to distributor_0 <EFFECT> Once a truck_2 has been driven from depot_1 to distributor_0, it is not at the origin depot_1 and is at the destination distributor_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 1 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_2 from a truck_2 at a place distributor_0 only if the hoist_2 is at the same place distributor_0 as the truck_2, the hoist_2 is available, and the crate_1 is in the truck_2. </PRECON> Use hoist_2 to unload crate_1 from truck_2 at distributor_0 <EFFECT> Once a crate_1 has been unloaded by a hoist_2 from a truck_2 at a place distributor_0, the crate_1 is not in the truck_2, the hoist_2 is not available, and the hoist_2 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2. <COUNT> 0 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_2 to a pallet_2 only if the hoist_2 and pallet_2 are both at the place distributor_0, the pallet_2 is clear, and the hoist_2 is lifting the crate_1. </PRECON> Use hoist_2 to drop crate_1 to pallet_2 at distributor_0 <EFFECT> Once a crate_1 has been dropped by a hoist_2 to a pallet_2 at a place distributor_0, the hoist_2 is available, the hoist_2 is not lifting the crate_1, the crate_1 is at the place distributor_0, the pallet_2 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_2. </EFFECT> \n</PLAN>"}
{"domain": "depots", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, truck_0 is at distributor_1, hoist_4 is available, hoist_5 is at distributor_4, hoist_6 is at depot_0, crate_1 is at distributor_1, pallet_4 is clear, crate_1 is clear, crate_0 is clear, crate_1 is on pallet_2, crate_0 is at distributor_4, hoist_1 is available, hoist_3 is at distributor_2, hoist_0 is available, hoist_0 is at depot_0, pallet_4 is at distributor_3, crate_0 is on pallet_5, hoist_1 is at distributor_0, hoist_4 is at distributor_3, truck_1 is at depot_0, pallet_5 is at distributor_4, pallet_2 is at distributor_1, hoist_2 is available, hoist_2 is at distributor_1, pallet_0 is clear, pallet_0 is at depot_0, pallet_1 is at distributor_0, pallet_3 is clear, pallet_3 is at distributor_2, hoist_5 is available, hoist_3 is available, pallet_1 is clear, hoist_6 is available.\nMy goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 10 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_5 only if the hoist_5 is at the same place distributor_4 as the crate_0, the hoist_5 is available, and the crate_0 is clear. </PRECON> Use hoist_5 to lift crate_0 from pallet_5 at distributor_4 <EFFECT> Once a crate_0 has been lifted by a hoist_5 from a pallet_5 at a place distributor_4, the crate_0 is not at the place distributor_4, the hoist_5 is lifting the crate_0, the hoist_5 is not available, the pallet_5 is clear, and the crate_0 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 9 </COUNT>  <PRECON> A truck_0 can be driven from distributor_1 to distributor_4 only if the truck_0 is at the distributor_1. </PRECON> drive truck_0 from distributor_1 to distributor_4 <EFFECT> Once a truck_0 has been driven from distributor_1 to distributor_4, it is not at the origin distributor_1 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 8 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_5 onto a truck_0 at a place distributor_4 only if the hoist_5 is at the same place distributor_4, the truck_0 is at the same place distributor_4, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to load crate_0 into truck_0 at distributor_4 <EFFECT> Once a crate_0 has been loaded by a hoist_5 onto a truck_0 at a place distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT>  <PRECON> A truck_0 can be driven from distributor_4 to distributor_1 only if the truck_0 is at the distributor_4. </PRECON> drive truck_0 from distributor_4 to distributor_1 <EFFECT> Once a truck_0 has been driven from distributor_4 to distributor_1, it is not at the origin distributor_4 and is at the destination distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_2 only if the hoist_2 is at the same place distributor_1 as the crate_1, the hoist_2 is available, and the crate_1 is clear. </PRECON> Use hoist_2 to lift crate_1 from pallet_2 at distributor_1 <EFFECT> Once a crate_1 has been lifted by a hoist_2 from a pallet_2 at a place distributor_1, the crate_1 is not at the place distributor_1, the hoist_2 is lifting the crate_1, the hoist_2 is not available, the pallet_2 is clear, and the crate_1 is not on the pallet_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 5 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_2 onto a truck_0 at a place distributor_1 only if the hoist_2 is at the same place distributor_1, the truck_0 is at the same place distributor_1, and the hoist_2 is lifting the crate_1. </PRECON> Use hoist_2 to load crate_1 into truck_0 at distributor_1 <EFFECT> Once a crate_1 has been loaded by a hoist_2 onto a truck_0 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from distributor_1 to depot_0 only if the truck_0 is at the distributor_1. </PRECON> drive truck_0 from distributor_1 to depot_0 <EFFECT> Once a truck_0 has been driven from distributor_1 to depot_0, it is not at the origin distributor_1 and is at the destination depot_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_0 from a truck_0 at a place depot_0 only if the hoist_0 is at the same place depot_0 as the truck_0, the hoist_0 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_0 to unload crate_0 from truck_0 at depot_0 <EFFECT> Once a crate_0 has been unloaded by a hoist_0 from a truck_0 at a place depot_0, the crate_0 is not in the truck_0, the hoist_0 is not available, and the hoist_0 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_6 from a truck_0 at a place depot_0 only if the hoist_6 is at the same place depot_0 as the truck_0, the hoist_6 is available, and the crate_1 is in the truck_0. </PRECON> Use hoist_6 to unload crate_1 from truck_0 at depot_0 <EFFECT> Once a crate_1 has been unloaded by a hoist_6 from a truck_0 at a place depot_0, the crate_1 is not in the truck_0, the hoist_6 is not available, and the hoist_6 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_6 to a pallet_0 only if the hoist_6 and pallet_0 are both at the place depot_0, the pallet_0 is clear, and the hoist_6 is lifting the crate_1. </PRECON> Use hoist_6 to drop crate_1 to pallet_0 at depot_0 <EFFECT> Once a crate_1 has been dropped by a hoist_6 to a pallet_0 at a place depot_0, the hoist_6 is available, the hoist_6 is not lifting the crate_1, the crate_1 is at the place depot_0, the pallet_0 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_0 to a crate_1 only if the hoist_0 and crate_1 are both at the place depot_0, the crate_1 is clear, and the hoist_0 is lifting the crate_0. </PRECON> Use hoist_0 to drop crate_0 to crate_1 at depot_0 <EFFECT> Once a crate_0 has been dropped by a hoist_0 to a crate_1 at a place depot_0, the hoist_0 is available, the hoist_0 is not lifting the crate_0, the crate_0 is at the place depot_0, the crate_1 is not clear, the crate_0 is clear, and the crate_0 is on the crate_1. </EFFECT> \n</PLAN>", "plan_length": 11, "raw_plan": ["(lift hoist5 crate0 pallet5 distributor4)", "(drive truck0 distributor1 distributor4)", "(load hoist5 crate0 truck0 distributor4)", "(drive truck0 distributor4 distributor1)", "(lift hoist2 crate1 pallet2 distributor1)", "(load hoist2 crate1 truck0 distributor1)", "(drive truck0 distributor1 depot0)", "(unload hoist0 crate0 truck0 depot0)", "(unload hoist6 crate1 truck0 depot0)", "(drop hoist6 crate1 pallet0 depot0)", "(drop hoist0 crate0 crate1 depot0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, truck_0 is at distributor_1, hoist_4 is available, hoist_5 is at distributor_4, hoist_6 is at depot_0, crate_1 is at distributor_1, pallet_4 is clear, crate_1 is clear, crate_0 is clear, crate_1 is on pallet_2, crate_0 is at distributor_4, hoist_1 is available, hoist_3 is at distributor_2, hoist_0 is available, hoist_0 is at depot_0, pallet_4 is at distributor_3, crate_0 is on pallet_5, hoist_1 is at distributor_0, hoist_4 is at distributor_3, truck_1 is at depot_0, pallet_5 is at distributor_4, pallet_2 is at distributor_1, hoist_2 is available, hoist_2 is at distributor_1, pallet_0 is clear, pallet_0 is at depot_0, pallet_1 is at distributor_0, pallet_3 is clear, pallet_3 is at distributor_2, hoist_5 is available, hoist_3 is available, pallet_1 is clear, hoist_6 is available.My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 10 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_5 only if the hoist_5 is at the same place distributor_4 as the crate_0, the hoist_5 is available, and the crate_0 is clear. </PRECON> Use hoist_5 to lift crate_0 from pallet_5 at distributor_4 <EFFECT> Once a crate_0 has been lifted by a hoist_5 from a pallet_5 at a place distributor_4, the crate_0 is not at the place distributor_4, the hoist_5 is lifting the crate_0, the hoist_5 is not available, the pallet_5 is clear, and the crate_0 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 9 </COUNT>  <PRECON> A truck_0 can be driven from distributor_1 to distributor_4 only if the truck_0 is at the distributor_1. </PRECON> drive truck_0 from distributor_1 to distributor_4 <EFFECT> Once a truck_0 has been driven from distributor_1 to distributor_4, it is not at the origin distributor_1 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 8 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_5 onto a truck_0 at a place distributor_4 only if the hoist_5 is at the same place distributor_4, the truck_0 is at the same place distributor_4, and the hoist_5 is lifting the crate_0. </PRECON> Use hoist_5 to load crate_0 into truck_0 at distributor_4 <EFFECT> Once a crate_0 has been loaded by a hoist_5 onto a truck_0 at a place distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT>  <PRECON> A truck_0 can be driven from distributor_4 to distributor_1 only if the truck_0 is at the distributor_4. </PRECON> drive truck_0 from distributor_4 to distributor_1 <EFFECT> Once a truck_0 has been driven from distributor_4 to distributor_1, it is not at the origin distributor_4 and is at the destination distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_2 only if the hoist_2 is at the same place distributor_1 as the crate_1, the hoist_2 is available, and the crate_1 is clear. </PRECON> Use hoist_2 to lift crate_1 from pallet_2 at distributor_1 <EFFECT> Once a crate_1 has been lifted by a hoist_2 from a pallet_2 at a place distributor_1, the crate_1 is not at the place distributor_1, the hoist_2 is lifting the crate_1, the hoist_2 is not available, the pallet_2 is clear, and the crate_1 is not on the pallet_2. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 5 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_2 onto a truck_0 at a place distributor_1 only if the hoist_2 is at the same place distributor_1, the truck_0 is at the same place distributor_1, and the hoist_2 is lifting the crate_1. </PRECON> Use hoist_2 to load crate_1 into truck_0 at distributor_1 <EFFECT> Once a crate_1 has been loaded by a hoist_2 onto a truck_0 at a place distributor_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from distributor_1 to depot_0 only if the truck_0 is at the distributor_1. </PRECON> drive truck_0 from distributor_1 to depot_0 <EFFECT> Once a truck_0 has been driven from distributor_1 to depot_0, it is not at the origin distributor_1 and is at the destination depot_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_0 from a truck_0 at a place depot_0 only if the hoist_0 is at the same place depot_0 as the truck_0, the hoist_0 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_0 to unload crate_0 from truck_0 at depot_0 <EFFECT> Once a crate_0 has been unloaded by a hoist_0 from a truck_0 at a place depot_0, the crate_0 is not in the truck_0, the hoist_0 is not available, and the hoist_0 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_6 from a truck_0 at a place depot_0 only if the hoist_6 is at the same place depot_0 as the truck_0, the hoist_6 is available, and the crate_1 is in the truck_0. </PRECON> Use hoist_6 to unload crate_1 from truck_0 at depot_0 <EFFECT> Once a crate_1 has been unloaded by a hoist_6 from a truck_0 at a place depot_0, the crate_1 is not in the truck_0, the hoist_6 is not available, and the hoist_6 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_6 to a pallet_0 only if the hoist_6 and pallet_0 are both at the place depot_0, the pallet_0 is clear, and the hoist_6 is lifting the crate_1. </PRECON> Use hoist_6 to drop crate_1 to pallet_0 at depot_0 <EFFECT> Once a crate_1 has been dropped by a hoist_6 to a pallet_0 at a place depot_0, the hoist_6 is available, the hoist_6 is not lifting the crate_1, the crate_1 is at the place depot_0, the pallet_0 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_0. </EFFECT> \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_0 to a crate_1 only if the hoist_0 and crate_1 are both at the place depot_0, the crate_1 is clear, and the hoist_0 is lifting the crate_0. </PRECON> Use hoist_0 to drop crate_0 to crate_1 at depot_0 <EFFECT> Once a crate_0 has been dropped by a hoist_0 to a crate_1 at a place depot_0, the hoist_0 is available, the hoist_0 is not lifting the crate_0, the crate_0 is at the place depot_0, the crate_1 is not clear, the crate_0 is clear, and the crate_0 is on the crate_1. </EFFECT> \n</PLAN>"}
{"domain": "depots", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, hoist_7 is at distributor_1, hoist_9 is at distributor_3, pallet_7 is at distributor_1, hoist_0 is at depot_0, pallet_6 is clear, hoist_9 is available, hoist_3 is available, crate_0 is at depot_1, crate_0 is clear, crate_1 is on pallet_5, pallet_2 is at depot_2, hoist_7 is available, pallet_2 is clear, truck_1 is at depot_5, pallet_10 is at distributor_4, pallet_5 is at depot_5, hoist_6 is at distributor_0, pallet_0 is clear, hoist_5 is at depot_5, pallet_4 is clear, hoist_5 is available, hoist_1 is at depot_1, hoist_4 is available, truck_0 is at depot_5, hoist_10 is at distributor_4, pallet_3 is at depot_3, hoist_2 is at depot_2, pallet_3 is clear, hoist_6 is available, pallet_7 is clear, pallet_6 is at distributor_0, pallet_8 is clear, pallet_9 is at distributor_3, pallet_10 is clear, hoist_0 is available, crate_1 is clear, pallet_0 is at depot_0, pallet_4 is at depot_4, hoist_8 is available, crate_1 is at depot_5, pallet_8 is at distributor_2, hoist_1 is available, hoist_8 is at distributor_2, hoist_3 is at depot_3, crate_0 is on pallet_1, hoist_4 is at depot_4, pallet_9 is clear, hoist_10 is available, hoist_2 is available, pallet_1 is at depot_1.\nMy goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 11 </COUNT>  <PRECON> A truck_1 can be driven from depot_5 to distributor_4 only if the truck_1 is at the depot_5. </PRECON> drive truck_1 from depot_5 to distributor_4 <EFFECT> Once a truck_1 has been driven from depot_5 to distributor_4, it is not at the origin depot_5 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 10 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_5 only if the hoist_5 is at the same place depot_5 as the crate_1, the hoist_5 is available, and the crate_1 is clear. </PRECON> Use hoist_5 to lift crate_1 from pallet_5 at depot_5 <EFFECT> Once a crate_1 has been lifted by a hoist_5 from a pallet_5 at a place depot_5, the crate_1 is not at the place depot_5, the hoist_5 is lifting the crate_1, the hoist_5 is not available, the pallet_5 is clear, and the crate_1 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 9 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_5 onto a truck_0 at a place depot_5 only if the hoist_5 is at the same place depot_5, the truck_0 is at the same place depot_5, and the hoist_5 is lifting the crate_1. </PRECON> Use hoist_5 to load crate_1 into truck_0 at depot_5 <EFFECT> Once a crate_1 has been loaded by a hoist_5 onto a truck_0 at a place depot_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 8 </COUNT>  <PRECON> A truck_0 can be driven from depot_5 to distributor_4 only if the truck_0 is at the depot_5. </PRECON> drive truck_0 from depot_5 to distributor_4 <EFFECT> Once a truck_0 has been driven from depot_5 to distributor_4, it is not at the origin depot_5 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 7 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_10 from a truck_0 at a place distributor_4 only if the hoist_10 is at the same place distributor_4 as the truck_0, the hoist_10 is available, and the crate_1 is in the truck_0. </PRECON> Use hoist_10 to unload crate_1 from truck_0 at distributor_4 <EFFECT> Once a crate_1 has been unloaded by a hoist_10 from a truck_0 at a place distributor_4, the crate_1 is not in the truck_0, the hoist_10 is not available, and the hoist_10 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_10 to a pallet_10 only if the hoist_10 and pallet_10 are both at the place distributor_4, the pallet_10 is clear, and the hoist_10 is lifting the crate_1. </PRECON> Use hoist_10 to drop crate_1 to pallet_10 at distributor_4 <EFFECT> Once a crate_1 has been dropped by a hoist_10 to a pallet_10 at a place distributor_4, the hoist_10 is available, the hoist_10 is not lifting the crate_1, the crate_1 is at the place distributor_4, the pallet_10 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_10. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 5 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_1 only if the hoist_1 is at the same place depot_1 as the crate_0, the hoist_1 is available, and the crate_0 is clear. </PRECON> Use hoist_1 to lift crate_0 from pallet_1 at depot_1 <EFFECT> Once a crate_0 has been lifted by a hoist_1 from a pallet_1 at a place depot_1, the crate_0 is not at the place depot_1, the hoist_1 is lifting the crate_0, the hoist_1 is not available, the pallet_1 is clear, and the crate_0 is not on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from distributor_4 to depot_1 only if the truck_0 is at the distributor_4. </PRECON> drive truck_0 from distributor_4 to depot_1 <EFFECT> Once a truck_0 has been driven from distributor_4 to depot_1, it is not at the origin distributor_4 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_1 onto a truck_0 at a place depot_1 only if the hoist_1 is at the same place depot_1, the truck_0 is at the same place depot_1, and the hoist_1 is lifting the crate_0. </PRECON> Use hoist_1 to load crate_0 into truck_0 at depot_1 <EFFECT> Once a crate_0 has been loaded by a hoist_1 onto a truck_0 at a place depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT>  <PRECON> A truck_0 can be driven from depot_1 to distributor_4 only if the truck_0 is at the depot_1. </PRECON> drive truck_0 from depot_1 to distributor_4 <EFFECT> Once a truck_0 has been driven from depot_1 to distributor_4, it is not at the origin depot_1 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_10 from a truck_0 at a place distributor_4 only if the hoist_10 is at the same place distributor_4 as the truck_0, the hoist_10 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_10 to unload crate_0 from truck_0 at distributor_4 <EFFECT> Once a crate_0 has been unloaded by a hoist_10 from a truck_0 at a place distributor_4, the crate_0 is not in the truck_0, the hoist_10 is not available, and the hoist_10 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_10 to a crate_1 only if the hoist_10 and crate_1 are both at the place distributor_4, the crate_1 is clear, and the hoist_10 is lifting the crate_0. </PRECON> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 <EFFECT> Once a crate_0 has been dropped by a hoist_10 to a crate_1 at a place distributor_4, the hoist_10 is available, the hoist_10 is not lifting the crate_0, the crate_0 is at the place distributor_4, the crate_1 is not clear, the crate_0 is clear, and the crate_0 is on the crate_1. </EFFECT> \n</PLAN>", "plan_length": 12, "raw_plan": ["(drive truck1 depot5 distributor4)", "(lift hoist5 crate1 pallet5 depot5)", "(load hoist5 crate1 truck0 depot5)", "(drive truck0 depot5 distributor4)", "(unload hoist10 crate1 truck0 distributor4)", "(drop hoist10 crate1 pallet10 distributor4)", "(lift hoist1 crate0 pallet1 depot1)", "(drive truck0 distributor4 depot1)", "(load hoist1 crate0 truck0 depot1)", "(drive truck0 depot1 distributor4)", "(unload hoist10 crate0 truck0 distributor4)", "(drop hoist10 crate0 crate1 distributor4)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, hoist_7 is at distributor_1, hoist_9 is at distributor_3, pallet_7 is at distributor_1, hoist_0 is at depot_0, pallet_6 is clear, hoist_9 is available, hoist_3 is available, crate_0 is at depot_1, crate_0 is clear, crate_1 is on pallet_5, pallet_2 is at depot_2, hoist_7 is available, pallet_2 is clear, truck_1 is at depot_5, pallet_10 is at distributor_4, pallet_5 is at depot_5, hoist_6 is at distributor_0, pallet_0 is clear, hoist_5 is at depot_5, pallet_4 is clear, hoist_5 is available, hoist_1 is at depot_1, hoist_4 is available, truck_0 is at depot_5, hoist_10 is at distributor_4, pallet_3 is at depot_3, hoist_2 is at depot_2, pallet_3 is clear, hoist_6 is available, pallet_7 is clear, pallet_6 is at distributor_0, pallet_8 is clear, pallet_9 is at distributor_3, pallet_10 is clear, hoist_0 is available, crate_1 is clear, pallet_0 is at depot_0, pallet_4 is at depot_4, hoist_8 is available, crate_1 is at depot_5, pallet_8 is at distributor_2, hoist_1 is available, hoist_8 is at distributor_2, hoist_3 is at depot_3, crate_0 is on pallet_1, hoist_4 is at depot_4, pallet_9 is clear, hoist_10 is available, hoist_2 is available, pallet_1 is at depot_1.My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 11 </COUNT>  <PRECON> A truck_1 can be driven from depot_5 to distributor_4 only if the truck_1 is at the depot_5. </PRECON> drive truck_1 from depot_5 to distributor_4 <EFFECT> Once a truck_1 has been driven from depot_5 to distributor_4, it is not at the origin depot_5 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 10 </COUNT>  <PRECON> A crate_1 can be lifted by a hoist_5 only if the hoist_5 is at the same place depot_5 as the crate_1, the hoist_5 is available, and the crate_1 is clear. </PRECON> Use hoist_5 to lift crate_1 from pallet_5 at depot_5 <EFFECT> Once a crate_1 has been lifted by a hoist_5 from a pallet_5 at a place depot_5, the crate_1 is not at the place depot_5, the hoist_5 is lifting the crate_1, the hoist_5 is not available, the pallet_5 is clear, and the crate_1 is not on the pallet_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 9 </COUNT>  <PRECON> A crate_1 can be loaded by a hoist_5 onto a truck_0 at a place depot_5 only if the hoist_5 is at the same place depot_5, the truck_0 is at the same place depot_5, and the hoist_5 is lifting the crate_1. </PRECON> Use hoist_5 to load crate_1 into truck_0 at depot_5 <EFFECT> Once a crate_1 has been loaded by a hoist_5 onto a truck_0 at a place depot_5. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 8 </COUNT>  <PRECON> A truck_0 can be driven from depot_5 to distributor_4 only if the truck_0 is at the depot_5. </PRECON> drive truck_0 from depot_5 to distributor_4 <EFFECT> Once a truck_0 has been driven from depot_5 to distributor_4, it is not at the origin depot_5 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 7 </COUNT>  <PRECON> A crate_1 can be unloaded by a hoist_10 from a truck_0 at a place distributor_4 only if the hoist_10 is at the same place distributor_4 as the truck_0, the hoist_10 is available, and the crate_1 is in the truck_0. </PRECON> Use hoist_10 to unload crate_1 from truck_0 at distributor_4 <EFFECT> Once a crate_1 has been unloaded by a hoist_10 from a truck_0 at a place distributor_4, the crate_1 is not in the truck_0, the hoist_10 is not available, and the hoist_10 is lifting the crate_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 6 </COUNT>  <PRECON> A crate_1 can be dropped by a hoist_10 to a pallet_10 only if the hoist_10 and pallet_10 are both at the place distributor_4, the pallet_10 is clear, and the hoist_10 is lifting the crate_1. </PRECON> Use hoist_10 to drop crate_1 to pallet_10 at distributor_4 <EFFECT> Once a crate_1 has been dropped by a hoist_10 to a pallet_10 at a place distributor_4, the hoist_10 is available, the hoist_10 is not lifting the crate_1, the crate_1 is at the place distributor_4, the pallet_10 is not clear, the crate_1 is clear, and the crate_1 is on the pallet_10. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 5 </COUNT>  <PRECON> A crate_0 can be lifted by a hoist_1 only if the hoist_1 is at the same place depot_1 as the crate_0, the hoist_1 is available, and the crate_0 is clear. </PRECON> Use hoist_1 to lift crate_0 from pallet_1 at depot_1 <EFFECT> Once a crate_0 has been lifted by a hoist_1 from a pallet_1 at a place depot_1, the crate_0 is not at the place depot_1, the hoist_1 is lifting the crate_0, the hoist_1 is not available, the pallet_1 is clear, and the crate_0 is not on the pallet_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from distributor_4 to depot_1 only if the truck_0 is at the distributor_4. </PRECON> drive truck_0 from distributor_4 to depot_1 <EFFECT> Once a truck_0 has been driven from distributor_4 to depot_1, it is not at the origin distributor_4 and is at the destination depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT>  <PRECON> A crate_0 can be loaded by a hoist_1 onto a truck_0 at a place depot_1 only if the hoist_1 is at the same place depot_1, the truck_0 is at the same place depot_1, and the hoist_1 is lifting the crate_0. </PRECON> Use hoist_1 to load crate_0 into truck_0 at depot_1 <EFFECT> Once a crate_0 has been loaded by a hoist_1 onto a truck_0 at a place depot_1. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT>  <PRECON> A truck_0 can be driven from depot_1 to distributor_4 only if the truck_0 is at the depot_1. </PRECON> drive truck_0 from depot_1 to distributor_4 <EFFECT> Once a truck_0 has been driven from depot_1 to distributor_4, it is not at the origin depot_1 and is at the destination distributor_4. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT>  <PRECON> A crate_0 can be unloaded by a hoist_10 from a truck_0 at a place distributor_4 only if the hoist_10 is at the same place distributor_4 as the truck_0, the hoist_10 is available, and the crate_0 is in the truck_0. </PRECON> Use hoist_10 to unload crate_0 from truck_0 at distributor_4 <EFFECT> Once a crate_0 has been unloaded by a hoist_10 from a truck_0 at a place distributor_4, the crate_0 is not in the truck_0, the hoist_10 is not available, and the hoist_10 is lifting the crate_0. </EFFECT> \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT>  <PRECON> A crate_0 can be dropped by a hoist_10 to a crate_1 only if the hoist_10 and crate_1 are both at the place distributor_4, the crate_1 is clear, and the hoist_10 is lifting the crate_0. </PRECON> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 <EFFECT> Once a crate_0 has been dropped by a hoist_10 to a crate_1 at a place distributor_4, the hoist_10 is available, the hoist_10 is not lifting the crate_0, the crate_0 is at the place distributor_4, the crate_1 is not clear, the crate_0 is clear, and the crate_0 is on the crate_1. </EFFECT> \n</PLAN>"}
{"domain": "driverlog", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, place_3 and place_0 are linked, path_2-1 and place_2 are connected, driver_1 is at place_1, driver_3 is at place_0, place_0 and place_2 are linked, place_2 and path_2-0 are connected, place_2 and place_0 are linked, place_0 and path_2-0 are connected, place_3 and place_2 are linked, truck_3 is empty, path_2-3 and place_2 are connected, truck_1 is empty, path_2-0 and place_2 are connected, place_1 and path_2-1 are connected, truck_2 is empty, driver_2 is at place_3, place_2 and path_2-1 are connected, place_1 and place_3 are linked, place_1 and path_0-1 are connected, truck_1 is at place_3, place_0 and path_0-1 are connected, path_2-1 and place_1 are connected, place_2 and path_2-3 are connected, place_0 and place_3 are linked, path_0-1 and place_0 are connected, truck_3 is at place_1, place_2 and place_3 are linked, place_0 and place_1 are linked, path_2-3 and place_3 are connected, path_2-0 and place_0 are connected, place_3 and path_2-3 are connected, path_0-1 and place_1 are connected, package_1 is at place_1, place_1 and place_2 are linked, truck_2 is at place_0, place_1 and place_0 are linked, place_3 and place_1 are linked, place_2 and place_1 are linked.\nMy goal is to have that package_1 is at place_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 3 </COUNT>  <PRECON> A driver_1 can board a truck_3 only if the truck_3 is empty. A driver_1 can board a truck_3 only if the driver_1 is at the same place_1 as the truck_3. </PRECON> driver_1 boards truck_3 at place_1 <EFFECT> Once a driver_1 boards a truck_3, the driver_1 is no longer at the place_1. Once a driver_1 boards a truck_3, the truck_3 is no longer empty. Once a driver_1 boards a truck_3, we say the driver_1 is driving the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 2 </COUNT>  <PRECON> An package_1 can be loaded into a truck_3 only if the package_1 is at the same place_1 as the truck_3. </PRECON> load package_1 into truck_3 at place_1 <EFFECT> Once an package_1 is loaded into a truck_3, the package_1 is not at the place_1 but is in the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 1 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_3 from place_1 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_1. </PRECON> driver_1 drives truck_3 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_1 to place_0, the truck_3 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 0 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_3 only if the package_1 is in the truck_3. </PRECON> unload package_1 from truck_3 at place_0 <EFFECT> Once an package_1 is unloaded from a truck_3, the package_1 is not in the truck_3 but is at the place_0 of the truck_3. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(board-truck driver1 truck3 s1)", "(load-truck package1 truck3 s1)", "(drive-truck truck3 s1 s0 driver1)", "(unload-truck package1 truck3 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, place_3 and place_0 are linked, path_2-1 and place_2 are connected, driver_1 is at place_1, driver_3 is at place_0, place_0 and place_2 are linked, place_2 and path_2-0 are connected, place_2 and place_0 are linked, place_0 and path_2-0 are connected, place_3 and place_2 are linked, truck_3 is empty, path_2-3 and place_2 are connected, truck_1 is empty, path_2-0 and place_2 are connected, place_1 and path_2-1 are connected, truck_2 is empty, driver_2 is at place_3, place_2 and path_2-1 are connected, place_1 and place_3 are linked, place_1 and path_0-1 are connected, truck_1 is at place_3, place_0 and path_0-1 are connected, path_2-1 and place_1 are connected, place_2 and path_2-3 are connected, place_0 and place_3 are linked, path_0-1 and place_0 are connected, truck_3 is at place_1, place_2 and place_3 are linked, place_0 and place_1 are linked, path_2-3 and place_3 are connected, path_2-0 and place_0 are connected, place_3 and path_2-3 are connected, path_0-1 and place_1 are connected, package_1 is at place_1, place_1 and place_2 are linked, truck_2 is at place_0, place_1 and place_0 are linked, place_3 and place_1 are linked, place_2 and place_1 are linked.My goal is to have that package_1 is at place_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 3 </COUNT>  <PRECON> A driver_1 can board a truck_3 only if the truck_3 is empty. A driver_1 can board a truck_3 only if the driver_1 is at the same place_1 as the truck_3. </PRECON> driver_1 boards truck_3 at place_1 <EFFECT> Once a driver_1 boards a truck_3, the driver_1 is no longer at the place_1. Once a driver_1 boards a truck_3, the truck_3 is no longer empty. Once a driver_1 boards a truck_3, we say the driver_1 is driving the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 2 </COUNT>  <PRECON> An package_1 can be loaded into a truck_3 only if the package_1 is at the same place_1 as the truck_3. </PRECON> load package_1 into truck_3 at place_1 <EFFECT> Once an package_1 is loaded into a truck_3, the package_1 is not at the place_1 but is in the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 1 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_3 from place_1 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_1. </PRECON> driver_1 drives truck_3 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_1 to place_0, the truck_3 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 0 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_3 only if the package_1 is in the truck_3. </PRECON> unload package_1 from truck_3 at place_0 <EFFECT> Once an package_1 is unloaded from a truck_3, the package_1 is not in the truck_3 but is at the place_0 of the truck_3. </EFFECT> \n</PLAN>"}
{"domain": "driverlog", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, driver_1 is at place_1, place_0 and place_1 are linked, package_1 is at place_0, driver_3 is at place_0, truck_2 is empty, path_0-1 and place_0 are connected, driver_2 is at place_1, place_1 and path_0-1 are connected, place_1 and place_0 are linked, truck_1 is at place_0, truck_2 is at place_0, truck_1 is empty, place_0 and path_0-1 are connected, path_0-1 and place_1 are connected.\nMy goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 4 </COUNT>  <PRECON> A driver_3 can board a truck_2 only if the driver_3 is at the same place_0 as the truck_2. A driver_3 can board a truck_2 only if the truck_2 is empty. </PRECON> driver_3 boards truck_2 at place_0 <EFFECT> Once a driver_3 boards a truck_2, we say the driver_3 is driving the truck_2. Once a driver_3 boards a truck_2, the truck_2 is no longer empty. Once a driver_3 boards a truck_2, the driver_3 is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 3 </COUNT>  <PRECON> A driver_3 can drive a truck_2 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_3 can drive a truck_2 from place_0 to place_1 only if the driver_3 is driving the truck_2 and the truck_2 is at the place_0. </PRECON> driver_3 drives truck_2 from place_0 to place_1 <EFFECT> Once a driver_3 drives a truck_2 from place_0 to place_1, the truck_2 is at the place_1 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 2 </COUNT>  <PRECON> A driver_3 can disembark from a truck_2 only if the driver_3 is driving the truck_2. </PRECON> driver_3 disembarks from truck_2 at place_1 <EFFECT> Once a driver_3 disembarks from a truck_2, the driver_3 is at the place_1 of the truck_2. Once a driver_3 disembarks from a truck_2, the truck_2 is empty. Once a driver_3 disembarks from a truck_2, we say the driver_3 is no longer driving the truck_2. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 1 </COUNT>  <PRECON> A driver_3 can walk from place_1 to path_0-1 only if the driver_3 is at the place_1 and the place_1 and path_0-1 are linked. </PRECON> driver_3 walks from place_1 to path_0-1 <EFFECT> Once a driver_3 walks from place_1 to path_0-1, the driver_3 is at the path_0-1 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 0 </COUNT>  <PRECON> A driver_3 can walk from path_0-1 to place_0 only if the driver_3 is at the path_0-1 and the path_0-1 and place_0 are linked. </PRECON> driver_3 walks from path_0-1 to place_0 <EFFECT> Once a driver_3 walks from path_0-1 to place_0, the driver_3 is at the place_0 and is no longer at the path_0-1. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(board-truck driver3 truck2 s0)", "(drive-truck truck2 s0 s1 driver3)", "(disembark-truck driver3 truck2 s1)", "(walk driver3 s1 p0-1)", "(walk driver3 p0-1 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, driver_1 is at place_1, place_0 and place_1 are linked, package_1 is at place_0, driver_3 is at place_0, truck_2 is empty, path_0-1 and place_0 are connected, driver_2 is at place_1, place_1 and path_0-1 are connected, place_1 and place_0 are linked, truck_1 is at place_0, truck_2 is at place_0, truck_1 is empty, place_0 and path_0-1 are connected, path_0-1 and place_1 are connected.My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 4 </COUNT>  <PRECON> A driver_3 can board a truck_2 only if the driver_3 is at the same place_0 as the truck_2. A driver_3 can board a truck_2 only if the truck_2 is empty. </PRECON> driver_3 boards truck_2 at place_0 <EFFECT> Once a driver_3 boards a truck_2, we say the driver_3 is driving the truck_2. Once a driver_3 boards a truck_2, the truck_2 is no longer empty. Once a driver_3 boards a truck_2, the driver_3 is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 3 </COUNT>  <PRECON> A driver_3 can drive a truck_2 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_3 can drive a truck_2 from place_0 to place_1 only if the driver_3 is driving the truck_2 and the truck_2 is at the place_0. </PRECON> driver_3 drives truck_2 from place_0 to place_1 <EFFECT> Once a driver_3 drives a truck_2 from place_0 to place_1, the truck_2 is at the place_1 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 2 </COUNT>  <PRECON> A driver_3 can disembark from a truck_2 only if the driver_3 is driving the truck_2. </PRECON> driver_3 disembarks from truck_2 at place_1 <EFFECT> Once a driver_3 disembarks from a truck_2, the driver_3 is at the place_1 of the truck_2. Once a driver_3 disembarks from a truck_2, the truck_2 is empty. Once a driver_3 disembarks from a truck_2, we say the driver_3 is no longer driving the truck_2. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 1 </COUNT>  <PRECON> A driver_3 can walk from place_1 to path_0-1 only if the driver_3 is at the place_1 and the place_1 and path_0-1 are linked. </PRECON> driver_3 walks from place_1 to path_0-1 <EFFECT> Once a driver_3 walks from place_1 to path_0-1, the driver_3 is at the path_0-1 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, truck_2 is at place_1, driver_2 is at place_1, driver_3 is at place_0. <COUNT> 0 </COUNT>  <PRECON> A driver_3 can walk from path_0-1 to place_0 only if the driver_3 is at the path_0-1 and the path_0-1 and place_0 are linked. </PRECON> driver_3 walks from path_0-1 to place_0 <EFFECT> Once a driver_3 walks from path_0-1 to place_0, the driver_3 is at the place_0 and is no longer at the path_0-1. </EFFECT> \n</PLAN>"}
{"domain": "driverlog", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, package_3 is at place_2, place_1 and place_3 are linked, place_1 and path_0-1 are connected, truck_3 is at place_3, truck_1 is empty, truck_1 is at place_1, truck_3 is empty, path_0-1 and place_0 are connected, place_0 and place_1 are linked, truck_2 is empty, place_1 and place_2 are linked, path_3-2 and place_2 are connected, place_2 and path_3-2 are connected, truck_2 is at place_1, place_2 and place_0 are linked, path_0-1 and place_1 are connected, path_3-0 and place_0 are connected, place_0 and place_3 are linked, path_3-0 and place_3 are connected, place_0 and path_0-1 are connected, place_0 and path_3-0 are connected, place_2 and place_1 are linked, path_3-2 and place_3 are connected, place_2 and place_3 are linked, path_1-3 and place_1 are connected, place_3 and place_2 are linked, place_1 and path_1-3 are connected, place_1 and place_0 are linked, place_3 and path_3-2 are connected, path_1-3 and place_3 are connected, driver_1 is at place_3, package_1 is at place_1, place_0 and place_2 are linked, place_3 and path_3-0 are connected, package_2 is at place_0, place_3 and place_1 are linked, place_3 and path_1-3 are connected, place_3 and place_0 are linked.\nMy goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT>  <PRECON> A driver_1 can board a truck_3 only if the truck_3 is empty. A driver_1 can board a truck_3 only if the driver_1 is at the same place_3 as the truck_3. </PRECON> driver_1 boards truck_3 at place_3 <EFFECT> Once a driver_1 boards a truck_3, we say the driver_1 is driving the truck_3. Once a driver_1 boards a truck_3, the truck_3 is no longer empty. Once a driver_1 boards a truck_3, the driver_1 is no longer at the place_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_3 to place_1 only if the place_3 and place_1 are linked. A driver_1 can drive a truck_3 from place_3 to place_1 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_3. </PRECON> driver_1 drives truck_3 from place_3 to place_1 <EFFECT> Once a driver_1 drives a truck_3 from place_3 to place_1, the truck_3 is at the place_1 and is no longer at the place_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> An package_1 can be loaded into a truck_3 only if the package_1 is at the same place_1 as the truck_3. </PRECON> load package_1 into truck_3 at place_1 <EFFECT> Once an package_1 is loaded into a truck_3, the package_1 is not at the place_1 but is in the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_3 from place_1 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_1. </PRECON> driver_1 drives truck_3 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_1 to place_0, the truck_3 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_0 to place_3 only if the place_0 and place_3 are linked. A driver_1 can drive a truck_3 from place_0 to place_3 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_0. </PRECON> driver_1 drives truck_3 from place_0 to place_3 <EFFECT> Once a driver_1 drives a truck_3 from place_0 to place_3, the truck_3 is at the place_3 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_3 only if the package_1 is in the truck_3. </PRECON> unload package_1 from truck_3 at place_3 <EFFECT> Once an package_1 is unloaded from a truck_3, the package_1 is not in the truck_3 but is at the place_3 of the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_3 to place_0 only if the place_3 and place_0 are linked. A driver_1 can drive a truck_3 from place_3 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_3. </PRECON> driver_1 drives truck_3 from place_3 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_3 to place_0, the truck_3 is at the place_0 and is no longer at the place_3. </EFFECT> \n</PLAN>", "plan_length": 7, "raw_plan": ["(board-truck driver1 truck3 s3)", "(drive-truck truck3 s3 s1 driver1)", "(load-truck package1 truck3 s1)", "(drive-truck truck3 s1 s0 driver1)", "(drive-truck truck3 s0 s3 driver1)", "(unload-truck package1 truck3 s3)", "(drive-truck truck3 s3 s0 driver1)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, package_3 is at place_2, place_1 and place_3 are linked, place_1 and path_0-1 are connected, truck_3 is at place_3, truck_1 is empty, truck_1 is at place_1, truck_3 is empty, path_0-1 and place_0 are connected, place_0 and place_1 are linked, truck_2 is empty, place_1 and place_2 are linked, path_3-2 and place_2 are connected, place_2 and path_3-2 are connected, truck_2 is at place_1, place_2 and place_0 are linked, path_0-1 and place_1 are connected, path_3-0 and place_0 are connected, place_0 and place_3 are linked, path_3-0 and place_3 are connected, place_0 and path_0-1 are connected, place_0 and path_3-0 are connected, place_2 and place_1 are linked, path_3-2 and place_3 are connected, place_2 and place_3 are linked, path_1-3 and place_1 are connected, place_3 and place_2 are linked, place_1 and path_1-3 are connected, place_1 and place_0 are linked, place_3 and path_3-2 are connected, path_1-3 and place_3 are connected, driver_1 is at place_3, package_1 is at place_1, place_0 and place_2 are linked, place_3 and path_3-0 are connected, package_2 is at place_0, place_3 and place_1 are linked, place_3 and path_1-3 are connected, place_3 and place_0 are linked.My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT>  <PRECON> A driver_1 can board a truck_3 only if the truck_3 is empty. A driver_1 can board a truck_3 only if the driver_1 is at the same place_3 as the truck_3. </PRECON> driver_1 boards truck_3 at place_3 <EFFECT> Once a driver_1 boards a truck_3, we say the driver_1 is driving the truck_3. Once a driver_1 boards a truck_3, the truck_3 is no longer empty. Once a driver_1 boards a truck_3, the driver_1 is no longer at the place_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_3 to place_1 only if the place_3 and place_1 are linked. A driver_1 can drive a truck_3 from place_3 to place_1 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_3. </PRECON> driver_1 drives truck_3 from place_3 to place_1 <EFFECT> Once a driver_1 drives a truck_3 from place_3 to place_1, the truck_3 is at the place_1 and is no longer at the place_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> An package_1 can be loaded into a truck_3 only if the package_1 is at the same place_1 as the truck_3. </PRECON> load package_1 into truck_3 at place_1 <EFFECT> Once an package_1 is loaded into a truck_3, the package_1 is not at the place_1 but is in the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_3 from place_1 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_1. </PRECON> driver_1 drives truck_3 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_1 to place_0, the truck_3 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_0 to place_3 only if the place_0 and place_3 are linked. A driver_1 can drive a truck_3 from place_0 to place_3 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_0. </PRECON> driver_1 drives truck_3 from place_0 to place_3 <EFFECT> Once a driver_1 drives a truck_3 from place_0 to place_3, the truck_3 is at the place_3 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_3 only if the package_1 is in the truck_3. </PRECON> unload package_1 from truck_3 at place_3 <EFFECT> Once an package_1 is unloaded from a truck_3, the package_1 is not in the truck_3 but is at the place_3 of the truck_3. </EFFECT> \n <GOAL> My goal is to have that package_2 is at place_0, package_3 is at place_2, package_1 is at place_3, truck_3 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_1 can drive a truck_3 from place_3 to place_0 only if the place_3 and place_0 are linked. A driver_1 can drive a truck_3 from place_3 to place_0 only if the driver_1 is driving the truck_3 and the truck_3 is at the place_3. </PRECON> driver_1 drives truck_3 from place_3 to place_0 <EFFECT> Once a driver_1 drives a truck_3 from place_3 to place_0, the truck_3 is at the place_0 and is no longer at the place_3. </EFFECT> \n</PLAN>"}
{"domain": "driverlog", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, path_1-0 and place_0 are connected, driver_1 is at place_1, truck_1 is empty, place_1 and place_0 are linked, place_0 and path_1-0 are connected, package_1 is at place_1, truck_1 is at place_1, place_1 and path_1-0 are connected, path_1-0 and place_1 are connected, driver_2 is at place_1, place_0 and place_1 are linked.\nMy goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT>  <PRECON> A driver_1 can board a truck_1 only if the truck_1 is empty. A driver_1 can board a truck_1 only if the driver_1 is at the same place_1 as the truck_1. </PRECON> driver_1 boards truck_1 at place_1 <EFFECT> Once a driver_1 boards a truck_1, the truck_1 is no longer empty. Once a driver_1 boards a truck_1, we say the driver_1 is driving the truck_1. Once a driver_1 boards a truck_1, the driver_1 is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> An package_1 can be loaded into a truck_1 only if the package_1 is at the same place_1 as the truck_1. </PRECON> load package_1 into truck_1 at place_1 <EFFECT> Once an package_1 is loaded into a truck_1, the package_1 is not at the place_1 but is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> A driver_2 can walk from place_1 to path_1-0 only if the driver_2 is at the place_1 and the place_1 and path_1-0 are linked. </PRECON> driver_2 walks from place_1 to path_1-0 <EFFECT> Once a driver_2 walks from place_1 to path_1-0, the driver_2 is at the path_1-0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_2 can walk from path_1-0 to place_0 only if the driver_2 is at the path_1-0 and the path_1-0 and place_0 are linked. </PRECON> driver_2 walks from path_1-0 to place_0 <EFFECT> Once a driver_2 walks from path_1-0 to place_0, the driver_2 is at the place_0 and is no longer at the path_1-0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> A driver_1 can drive a truck_1 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_1 from place_1 to place_0 only if the driver_1 is driving the truck_1 and the truck_1 is at the place_1. </PRECON> driver_1 drives truck_1 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_1 from place_1 to place_0, the truck_1 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_1 only if the package_1 is in the truck_1. </PRECON> unload package_1 from truck_1 at place_0 <EFFECT> Once an package_1 is unloaded from a truck_1, the package_1 is not in the truck_1 but is at the place_0 of the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_1 can drive a truck_1 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_1 can drive a truck_1 from place_0 to place_1 only if the driver_1 is driving the truck_1 and the truck_1 is at the place_0. </PRECON> driver_1 drives truck_1 from place_0 to place_1 <EFFECT> Once a driver_1 drives a truck_1 from place_0 to place_1, the truck_1 is at the place_1 and is no longer at the place_0. </EFFECT> \n</PLAN>", "plan_length": 7, "raw_plan": ["(board-truck driver1 truck1 s1)", "(load-truck package1 truck1 s1)", "(walk driver2 s1 p1-0)", "(walk driver2 p1-0 s0)", "(drive-truck truck1 s1 s0 driver1)", "(unload-truck package1 truck1 s0)", "(drive-truck truck1 s0 s1 driver1)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, path_1-0 and place_0 are connected, driver_1 is at place_1, truck_1 is empty, place_1 and place_0 are linked, place_0 and path_1-0 are connected, package_1 is at place_1, truck_1 is at place_1, place_1 and path_1-0 are connected, path_1-0 and place_1 are connected, driver_2 is at place_1, place_0 and place_1 are linked.My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT>  <PRECON> A driver_1 can board a truck_1 only if the truck_1 is empty. A driver_1 can board a truck_1 only if the driver_1 is at the same place_1 as the truck_1. </PRECON> driver_1 boards truck_1 at place_1 <EFFECT> Once a driver_1 boards a truck_1, the truck_1 is no longer empty. Once a driver_1 boards a truck_1, we say the driver_1 is driving the truck_1. Once a driver_1 boards a truck_1, the driver_1 is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> An package_1 can be loaded into a truck_1 only if the package_1 is at the same place_1 as the truck_1. </PRECON> load package_1 into truck_1 at place_1 <EFFECT> Once an package_1 is loaded into a truck_1, the package_1 is not at the place_1 but is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> A driver_2 can walk from place_1 to path_1-0 only if the driver_2 is at the place_1 and the place_1 and path_1-0 are linked. </PRECON> driver_2 walks from place_1 to path_1-0 <EFFECT> Once a driver_2 walks from place_1 to path_1-0, the driver_2 is at the path_1-0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_2 can walk from path_1-0 to place_0 only if the driver_2 is at the path_1-0 and the path_1-0 and place_0 are linked. </PRECON> driver_2 walks from path_1-0 to place_0 <EFFECT> Once a driver_2 walks from path_1-0 to place_0, the driver_2 is at the place_0 and is no longer at the path_1-0. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> A driver_1 can drive a truck_1 from place_1 to place_0 only if the place_1 and place_0 are linked. A driver_1 can drive a truck_1 from place_1 to place_0 only if the driver_1 is driving the truck_1 and the truck_1 is at the place_1. </PRECON> driver_1 drives truck_1 from place_1 to place_0 <EFFECT> Once a driver_1 drives a truck_1 from place_1 to place_0, the truck_1 is at the place_0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_1 only if the package_1 is in the truck_1. </PRECON> unload package_1 from truck_1 at place_0 <EFFECT> Once an package_1 is unloaded from a truck_1, the package_1 is not in the truck_1 but is at the place_0 of the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_1 is at place_0, driver_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_1 can drive a truck_1 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_1 can drive a truck_1 from place_0 to place_1 only if the driver_1 is driving the truck_1 and the truck_1 is at the place_0. </PRECON> driver_1 drives truck_1 from place_0 to place_1 <EFFECT> Once a driver_1 drives a truck_1 from place_0 to place_1, the truck_1 is at the place_1 and is no longer at the place_0. </EFFECT> \n</PLAN>"}
{"domain": "driverlog", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, place_0 and path_1-0 are connected, driver_2 is at place_1, truck_1 is empty, path_1-0 and place_1 are connected, place_0 and place_1 are linked, truck_1 is at place_0, driver_1 is at place_1, path_1-0 and place_0 are connected, package_1 is at place_0, place_1 and place_0 are linked, driver_4 is at place_0, place_1 and path_1-0 are connected, driver_3 is at place_1.\nMy goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> A driver_4 can board a truck_1 only if the truck_1 is empty. A driver_4 can board a truck_1 only if the driver_4 is at the same place_0 as the truck_1. </PRECON> driver_4 boards truck_1 at place_0 <EFFECT> Once a driver_4 boards a truck_1, the driver_4 is no longer at the place_0. Once a driver_4 boards a truck_1, the truck_1 is no longer empty. Once a driver_4 boards a truck_1, we say the driver_4 is driving the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> An package_1 can be loaded into a truck_1 only if the package_1 is at the same place_0 as the truck_1. </PRECON> load package_1 into truck_1 at place_0 <EFFECT> Once an package_1 is loaded into a truck_1, the package_1 is not at the place_0 but is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_4 can drive a truck_1 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_4 can drive a truck_1 from place_0 to place_1 only if the driver_4 is driving the truck_1 and the truck_1 is at the place_0. </PRECON> driver_4 drives truck_1 from place_0 to place_1 <EFFECT> Once a driver_4 drives a truck_1 from place_0 to place_1, the truck_1 is at the place_1 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_1 only if the package_1 is in the truck_1. </PRECON> unload package_1 from truck_1 at place_1 <EFFECT> Once an package_1 is unloaded from a truck_1, the package_1 is not in the truck_1 but is at the place_1 of the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> A driver_3 can walk from place_1 to path_1-0 only if the driver_3 is at the place_1 and the place_1 and path_1-0 are linked. </PRECON> driver_3 walks from place_1 to path_1-0 <EFFECT> Once a driver_3 walks from place_1 to path_1-0, the driver_3 is at the path_1-0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_3 can walk from path_1-0 to place_0 only if the driver_3 is at the path_1-0 and the path_1-0 and place_0 are linked. </PRECON> driver_3 walks from path_1-0 to place_0 <EFFECT> Once a driver_3 walks from path_1-0 to place_0, the driver_3 is at the place_0 and is no longer at the path_1-0. </EFFECT> \n</PLAN>", "plan_length": 6, "raw_plan": ["(board-truck driver4 truck1 s0)", "(load-truck package1 truck1 s0)", "(drive-truck truck1 s0 s1 driver4)", "(unload-truck package1 truck1 s1)", "(walk driver3 s1 p1-0)", "(walk driver3 p1-0 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, place_0 and path_1-0 are connected, driver_2 is at place_1, truck_1 is empty, path_1-0 and place_1 are connected, place_0 and place_1 are linked, truck_1 is at place_0, driver_1 is at place_1, path_1-0 and place_0 are connected, package_1 is at place_0, place_1 and place_0 are linked, driver_4 is at place_0, place_1 and path_1-0 are connected, driver_3 is at place_1.My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 5 </COUNT>  <PRECON> A driver_4 can board a truck_1 only if the truck_1 is empty. A driver_4 can board a truck_1 only if the driver_4 is at the same place_0 as the truck_1. </PRECON> driver_4 boards truck_1 at place_0 <EFFECT> Once a driver_4 boards a truck_1, the driver_4 is no longer at the place_0. Once a driver_4 boards a truck_1, the truck_1 is no longer empty. Once a driver_4 boards a truck_1, we say the driver_4 is driving the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 4 </COUNT>  <PRECON> An package_1 can be loaded into a truck_1 only if the package_1 is at the same place_0 as the truck_1. </PRECON> load package_1 into truck_1 at place_0 <EFFECT> Once an package_1 is loaded into a truck_1, the package_1 is not at the place_0 but is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 3 </COUNT>  <PRECON> A driver_4 can drive a truck_1 from place_0 to place_1 only if the place_0 and place_1 are linked. A driver_4 can drive a truck_1 from place_0 to place_1 only if the driver_4 is driving the truck_1 and the truck_1 is at the place_0. </PRECON> driver_4 drives truck_1 from place_0 to place_1 <EFFECT> Once a driver_4 drives a truck_1 from place_0 to place_1, the truck_1 is at the place_1 and is no longer at the place_0. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 2 </COUNT>  <PRECON> An package_1 can be unloaded from a truck_1 only if the package_1 is in the truck_1. </PRECON> unload package_1 from truck_1 at place_1 <EFFECT> Once an package_1 is unloaded from a truck_1, the package_1 is not in the truck_1 but is at the place_1 of the truck_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 1 </COUNT>  <PRECON> A driver_3 can walk from place_1 to path_1-0 only if the driver_3 is at the place_1 and the place_1 and path_1-0 are linked. </PRECON> driver_3 walks from place_1 to path_1-0 <EFFECT> Once a driver_3 walks from place_1 to path_1-0, the driver_3 is at the path_1-0 and is no longer at the place_1. </EFFECT> \n <GOAL> My goal is to have that driver_3 is at place_0, package_1 is at place_1, driver_1 is at place_1. <COUNT> 0 </COUNT>  <PRECON> A driver_3 can walk from path_1-0 to place_0 only if the driver_3 is at the path_1-0 and the path_1-0 and place_0 are linked. </PRECON> driver_3 walks from path_1-0 to place_0 <EFFECT> Once a driver_3 walks from path_1-0 to place_0, the driver_3 is at the place_0 and is no longer at the path_1-0. </EFFECT> \n</PLAN>"}
{"domain": "grippers", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, ball_5 is at room_5, ball_2 is at room_3, robot_5 is at room_1, robot_4's right_gripper_4 is free, robot_5's left_gripper_5 is free, robot_4 is at room_5, robot_1 is at room_1, robot_3's left_gripper_3 is free, robot_2's left_gripper_2 is free, robot_4's left_gripper_4 is free, robot_3 is at room_2, ball_6 is at room_1, robot_2 is at room_2, ball_4 is at room_1, robot_3's right_gripper_3 is free, robot_1's right_gripper_1 is free, robot_5's right_gripper_5 is free, robot_1's left_gripper_1 is free, ball_3 is at room_5, ball_1 is at room_2, robot_2's right_gripper_2 is free.\nMy goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 9 </COUNT>  <PRECON> A robot_5 can pick up an ball_6 from a room_1 only if the robot_5's left_gripper_5 is free. A robot_5 can pick up an ball_6 from a room_1 only if the robot_5 is in the room_1 and the ball_6 is also in the same room_1. </PRECON> robot_5 picks ball_6 at room_1 with left_gripper_5 <EFFECT> Once the robot_5 has picked up an ball_6 from a room_1, the robot_5's left_gripper_5 is no longer free. Once the robot_5 has picked up an ball_6 from a room_1, the ball_6 is no longer in the room_1 and is carried by the robot_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 8 </COUNT>  <PRECON> A robot_5 can move from room_1 to room_4 only if the robot_5 is in the room_1. </PRECON> move robot_5 from room_1 to room_4 <EFFECT> Once the robot_5 has moved from room_1 to room_4, the robot_5 is no longer in the room_1 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 7 </COUNT>  <PRECON> A robot_5 can drop an ball_6 in a room_4 only if the robot_5 is in the room_4 and the robot_5 is carrying the ball_6. </PRECON> robot_5 drops ball_6 at room_4 with left_gripper_5 <EFFECT> Once the robot_5 has dropped an ball_6 in a room_4, the robot_5's left_gripper_5 is free. Once the robot_5 has dropped an ball_6 in a room_4, the ball_6 is in the room_4 and is no longer carried by the robot_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 6 </COUNT>  <PRECON> A robot_4 can pick up an ball_3 from a room_5 only if the robot_4's left_gripper_4 is free. A robot_4 can pick up an ball_3 from a room_5 only if the robot_4 is in the room_5 and the ball_3 is also in the same room_5. </PRECON> robot_4 picks ball_3 at room_5 with left_gripper_4 <EFFECT> Once the robot_4 has picked up an ball_3 from a room_5, the robot_4's left_gripper_4 is no longer free. Once the robot_4 has picked up an ball_3 from a room_5, the ball_3 is no longer in the room_5 and is carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 5 </COUNT>  <PRECON> A robot_4 can move from room_5 to room_4 only if the robot_4 is in the room_5. </PRECON> move robot_4 from room_5 to room_4 <EFFECT> Once the robot_4 has moved from room_5 to room_4, the robot_4 is no longer in the room_5 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 4 </COUNT>  <PRECON> A robot_4 can drop an ball_3 in a room_4 only if the robot_4 is in the room_4 and the robot_4 is carrying the ball_3. </PRECON> robot_4 drops ball_3 at room_4 with left_gripper_4 <EFFECT> Once the robot_4 has dropped an ball_3 in a room_4, the robot_4's left_gripper_4 is free. Once the robot_4 has dropped an ball_3 in a room_4, the ball_3 is in the room_4 and is no longer carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 3 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_5 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_5 <EFFECT> Once the robot_2 has moved from room_2 to room_5, the robot_2 is no longer in the room_2 and is in the room_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 2 </COUNT>  <PRECON> A robot_2 can pick up an ball_5 from a room_5 only if the robot_2's left_gripper_2 is free. A robot_2 can pick up an ball_5 from a room_5 only if the robot_2 is in the room_5 and the ball_5 is also in the same room_5. </PRECON> robot_2 picks ball_5 at room_5 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_5 from a room_5, the robot_2's left_gripper_2 is no longer free. Once the robot_2 has picked up an ball_5 from a room_5, the ball_5 is no longer in the room_5 and is carried by the robot_2. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 1 </COUNT>  <PRECON> A robot_2 can move from room_5 to room_2 only if the robot_2 is in the room_5. </PRECON> move robot_2 from room_5 to room_2 <EFFECT> Once the robot_2 has moved from room_5 to room_2, the robot_2 is no longer in the room_5 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 0 </COUNT>  <PRECON> A robot_2 can drop an ball_5 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_5. </PRECON> robot_2 drops ball_5 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_5 in a room_2, the robot_2's left_gripper_2 is free. Once the robot_2 has dropped an ball_5 in a room_2, the ball_5 is in the room_2 and is no longer carried by the robot_2. </EFFECT> \n</PLAN>", "plan_length": 10, "raw_plan": ["(pick robot5 ball6 room1 lgripper5)", "(move robot5 room1 room4)", "(drop robot5 ball6 room4 lgripper5)", "(pick robot4 ball3 room5 lgripper4)", "(move robot4 room5 room4)", "(drop robot4 ball3 room4 lgripper4)", "(move robot2 room2 room5)", "(pick robot2 ball5 room5 lgripper2)", "(move robot2 room5 room2)", "(drop robot2 ball5 room2 lgripper2)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, ball_5 is at room_5, ball_2 is at room_3, robot_5 is at room_1, robot_4's right_gripper_4 is free, robot_5's left_gripper_5 is free, robot_4 is at room_5, robot_1 is at room_1, robot_3's left_gripper_3 is free, robot_2's left_gripper_2 is free, robot_4's left_gripper_4 is free, robot_3 is at room_2, ball_6 is at room_1, robot_2 is at room_2, ball_4 is at room_1, robot_3's right_gripper_3 is free, robot_1's right_gripper_1 is free, robot_5's right_gripper_5 is free, robot_1's left_gripper_1 is free, ball_3 is at room_5, ball_1 is at room_2, robot_2's right_gripper_2 is free.My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 9 </COUNT>  <PRECON> A robot_5 can pick up an ball_6 from a room_1 only if the robot_5's left_gripper_5 is free. A robot_5 can pick up an ball_6 from a room_1 only if the robot_5 is in the room_1 and the ball_6 is also in the same room_1. </PRECON> robot_5 picks ball_6 at room_1 with left_gripper_5 <EFFECT> Once the robot_5 has picked up an ball_6 from a room_1, the robot_5's left_gripper_5 is no longer free. Once the robot_5 has picked up an ball_6 from a room_1, the ball_6 is no longer in the room_1 and is carried by the robot_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 8 </COUNT>  <PRECON> A robot_5 can move from room_1 to room_4 only if the robot_5 is in the room_1. </PRECON> move robot_5 from room_1 to room_4 <EFFECT> Once the robot_5 has moved from room_1 to room_4, the robot_5 is no longer in the room_1 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 7 </COUNT>  <PRECON> A robot_5 can drop an ball_6 in a room_4 only if the robot_5 is in the room_4 and the robot_5 is carrying the ball_6. </PRECON> robot_5 drops ball_6 at room_4 with left_gripper_5 <EFFECT> Once the robot_5 has dropped an ball_6 in a room_4, the robot_5's left_gripper_5 is free. Once the robot_5 has dropped an ball_6 in a room_4, the ball_6 is in the room_4 and is no longer carried by the robot_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 6 </COUNT>  <PRECON> A robot_4 can pick up an ball_3 from a room_5 only if the robot_4's left_gripper_4 is free. A robot_4 can pick up an ball_3 from a room_5 only if the robot_4 is in the room_5 and the ball_3 is also in the same room_5. </PRECON> robot_4 picks ball_3 at room_5 with left_gripper_4 <EFFECT> Once the robot_4 has picked up an ball_3 from a room_5, the robot_4's left_gripper_4 is no longer free. Once the robot_4 has picked up an ball_3 from a room_5, the ball_3 is no longer in the room_5 and is carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 5 </COUNT>  <PRECON> A robot_4 can move from room_5 to room_4 only if the robot_4 is in the room_5. </PRECON> move robot_4 from room_5 to room_4 <EFFECT> Once the robot_4 has moved from room_5 to room_4, the robot_4 is no longer in the room_5 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 4 </COUNT>  <PRECON> A robot_4 can drop an ball_3 in a room_4 only if the robot_4 is in the room_4 and the robot_4 is carrying the ball_3. </PRECON> robot_4 drops ball_3 at room_4 with left_gripper_4 <EFFECT> Once the robot_4 has dropped an ball_3 in a room_4, the robot_4's left_gripper_4 is free. Once the robot_4 has dropped an ball_3 in a room_4, the ball_3 is in the room_4 and is no longer carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 3 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_5 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_5 <EFFECT> Once the robot_2 has moved from room_2 to room_5, the robot_2 is no longer in the room_2 and is in the room_5. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 2 </COUNT>  <PRECON> A robot_2 can pick up an ball_5 from a room_5 only if the robot_2's left_gripper_2 is free. A robot_2 can pick up an ball_5 from a room_5 only if the robot_2 is in the room_5 and the ball_5 is also in the same room_5. </PRECON> robot_2 picks ball_5 at room_5 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_5 from a room_5, the robot_2's left_gripper_2 is no longer free. Once the robot_2 has picked up an ball_5 from a room_5, the ball_5 is no longer in the room_5 and is carried by the robot_2. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 1 </COUNT>  <PRECON> A robot_2 can move from room_5 to room_2 only if the robot_2 is in the room_5. </PRECON> move robot_2 from room_5 to room_2 <EFFECT> Once the robot_2 has moved from room_5 to room_2, the robot_2 is no longer in the room_5 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_4 is at room_1, ball_2 is at room_3, ball_5 is at room_2, ball_3 is at room_4, ball_1 is at room_2, ball_6 is at room_4. <COUNT> 0 </COUNT>  <PRECON> A robot_2 can drop an ball_5 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_5. </PRECON> robot_2 drops ball_5 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_5 in a room_2, the robot_2's left_gripper_2 is free. Once the robot_2 has dropped an ball_5 in a room_2, the ball_5 is in the room_2 and is no longer carried by the robot_2. </EFFECT> \n</PLAN>"}
{"domain": "grippers", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, ball_4 is at room_1, robot_2's right_gripper_2 is free, ball_1 is at room_4, robot_1's left_gripper_1 is free, ball_3 is at room_5, ball_2 is at room_3, robot_1 is at room_3, robot_2 is at room_1, robot_2's left_gripper_2 is free, robot_1's right_gripper_1 is free.\nMy goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 10 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 9 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_4 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_4 <EFFECT> Once the robot_1 has moved from room_3 to room_4, the robot_1 is no longer in the room_3 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 8 </COUNT>  <PRECON> A robot_1 can pick up an ball_1 from a room_4 only if the robot_1's left_gripper_1 is free. A robot_1 can pick up an ball_1 from a room_4 only if the robot_1 is in the room_4 and the ball_1 is also in the same room_4. </PRECON> robot_1 picks ball_1 at room_4 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_1 from a room_4, the robot_1's left_gripper_1 is no longer free. Once the robot_1 has picked up an ball_1 from a room_4, the ball_1 is no longer in the room_4 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 7 </COUNT>  <PRECON> A robot_1 can move from room_4 to room_1 only if the robot_1 is in the room_4. </PRECON> move robot_1 from room_4 to room_1 <EFFECT> Once the robot_1 has moved from room_4 to room_1, the robot_1 is no longer in the room_4 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 6 </COUNT>  <PRECON> A robot_1 can drop an ball_1 in a room_1 only if the robot_1 is in the room_1 and the robot_1 is carrying the ball_1. </PRECON> robot_1 drops ball_1 at room_1 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_1 in a room_1, the robot_1's left_gripper_1 is free. Once the robot_1 has dropped an ball_1 in a room_1, the ball_1 is in the room_1 and is no longer carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 5 </COUNT>  <PRECON> A robot_1 can pick up an ball_4 from a room_1 only if the robot_1's left_gripper_1 is free. A robot_1 can pick up an ball_4 from a room_1 only if the robot_1 is in the room_1 and the ball_4 is also in the same room_1. </PRECON> robot_1 picks ball_4 at room_1 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_4 from a room_1, the robot_1's left_gripper_1 is no longer free. Once the robot_1 has picked up an ball_4 from a room_1, the ball_4 is no longer in the room_1 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 4 </COUNT>  <PRECON> A robot_1 can move from room_1 to room_3 only if the robot_1 is in the room_1. </PRECON> move robot_1 from room_1 to room_3 <EFFECT> Once the robot_1 has moved from room_1 to room_3, the robot_1 is no longer in the room_1 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 3 </COUNT>  <PRECON> A robot_1 can pick up an ball_2 from a room_3 only if the robot_1's right_gripper_1 is free. A robot_1 can pick up an ball_2 from a room_3 only if the robot_1 is in the room_3 and the ball_2 is also in the same room_3. </PRECON> robot_1 picks ball_2 at room_3 with right_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_2 from a room_3, the robot_1's right_gripper_1 is no longer free. Once the robot_1 has picked up an ball_2 from a room_3, the ball_2 is no longer in the room_3 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 2 </COUNT>  <PRECON> A robot_1 can drop an ball_4 in a room_3 only if the robot_1 is in the room_3 and the robot_1 is carrying the ball_4. </PRECON> robot_1 drops ball_4 at room_3 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_4 in a room_3, the robot_1's left_gripper_1 is free. Once the robot_1 has dropped an ball_4 in a room_3, the ball_4 is in the room_3 and is no longer carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 1 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_1 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_1 <EFFECT> Once the robot_1 has moved from room_3 to room_1, the robot_1 is no longer in the room_3 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 0 </COUNT>  <PRECON> A robot_1 can drop an ball_2 in a room_1 only if the robot_1 is in the room_1 and the robot_1 is carrying the ball_2. </PRECON> robot_1 drops ball_2 at room_1 with right_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_2 in a room_1, the robot_1's right_gripper_1 is free. Once the robot_1 has dropped an ball_2 in a room_1, the ball_2 is in the room_1 and is no longer carried by the robot_1. </EFFECT> \n</PLAN>", "plan_length": 11, "raw_plan": ["(move robot2 room1 room2)", "(move robot1 room3 room4)", "(pick robot1 ball1 room4 lgripper1)", "(move robot1 room4 room1)", "(drop robot1 ball1 room1 lgripper1)", "(pick robot1 ball4 room1 lgripper1)", "(move robot1 room1 room3)", "(pick robot1 ball2 room3 rgripper1)", "(drop robot1 ball4 room3 lgripper1)", "(move robot1 room3 room1)", "(drop robot1 ball2 room1 rgripper1)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, ball_4 is at room_1, robot_2's right_gripper_2 is free, ball_1 is at room_4, robot_1's left_gripper_1 is free, ball_3 is at room_5, ball_2 is at room_3, robot_1 is at room_3, robot_2 is at room_1, robot_2's left_gripper_2 is free, robot_1's right_gripper_1 is free.My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 10 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 9 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_4 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_4 <EFFECT> Once the robot_1 has moved from room_3 to room_4, the robot_1 is no longer in the room_3 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 8 </COUNT>  <PRECON> A robot_1 can pick up an ball_1 from a room_4 only if the robot_1's left_gripper_1 is free. A robot_1 can pick up an ball_1 from a room_4 only if the robot_1 is in the room_4 and the ball_1 is also in the same room_4. </PRECON> robot_1 picks ball_1 at room_4 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_1 from a room_4, the robot_1's left_gripper_1 is no longer free. Once the robot_1 has picked up an ball_1 from a room_4, the ball_1 is no longer in the room_4 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 7 </COUNT>  <PRECON> A robot_1 can move from room_4 to room_1 only if the robot_1 is in the room_4. </PRECON> move robot_1 from room_4 to room_1 <EFFECT> Once the robot_1 has moved from room_4 to room_1, the robot_1 is no longer in the room_4 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 6 </COUNT>  <PRECON> A robot_1 can drop an ball_1 in a room_1 only if the robot_1 is in the room_1 and the robot_1 is carrying the ball_1. </PRECON> robot_1 drops ball_1 at room_1 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_1 in a room_1, the robot_1's left_gripper_1 is free. Once the robot_1 has dropped an ball_1 in a room_1, the ball_1 is in the room_1 and is no longer carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 5 </COUNT>  <PRECON> A robot_1 can pick up an ball_4 from a room_1 only if the robot_1's left_gripper_1 is free. A robot_1 can pick up an ball_4 from a room_1 only if the robot_1 is in the room_1 and the ball_4 is also in the same room_1. </PRECON> robot_1 picks ball_4 at room_1 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_4 from a room_1, the robot_1's left_gripper_1 is no longer free. Once the robot_1 has picked up an ball_4 from a room_1, the ball_4 is no longer in the room_1 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 4 </COUNT>  <PRECON> A robot_1 can move from room_1 to room_3 only if the robot_1 is in the room_1. </PRECON> move robot_1 from room_1 to room_3 <EFFECT> Once the robot_1 has moved from room_1 to room_3, the robot_1 is no longer in the room_1 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 3 </COUNT>  <PRECON> A robot_1 can pick up an ball_2 from a room_3 only if the robot_1's right_gripper_1 is free. A robot_1 can pick up an ball_2 from a room_3 only if the robot_1 is in the room_3 and the ball_2 is also in the same room_3. </PRECON> robot_1 picks ball_2 at room_3 with right_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_2 from a room_3, the robot_1's right_gripper_1 is no longer free. Once the robot_1 has picked up an ball_2 from a room_3, the ball_2 is no longer in the room_3 and is carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 2 </COUNT>  <PRECON> A robot_1 can drop an ball_4 in a room_3 only if the robot_1 is in the room_3 and the robot_1 is carrying the ball_4. </PRECON> robot_1 drops ball_4 at room_3 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_4 in a room_3, the robot_1's left_gripper_1 is free. Once the robot_1 has dropped an ball_4 in a room_3, the ball_4 is in the room_3 and is no longer carried by the robot_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 1 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_1 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_1 <EFFECT> Once the robot_1 has moved from room_3 to room_1, the robot_1 is no longer in the room_3 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_2 is at room_1, ball_4 is at room_3, ball_3 is at room_5. <COUNT> 0 </COUNT>  <PRECON> A robot_1 can drop an ball_2 in a room_1 only if the robot_1 is in the room_1 and the robot_1 is carrying the ball_2. </PRECON> robot_1 drops ball_2 at room_1 with right_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_2 in a room_1, the robot_1's right_gripper_1 is free. Once the robot_1 has dropped an ball_2 in a room_1, the ball_2 is in the room_1 and is no longer carried by the robot_1. </EFFECT> \n</PLAN>"}
{"domain": "grippers", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, ball_6 is at room_3, ball_3 is at room_2, robot_2's right_gripper_2 is free, robot_1's left_gripper_1 is free, ball_4 is at room_2, robot_2 is at room_3, ball_2 is at room_3, robot_1's right_gripper_1 is free, robot_1 is at room_2, robot_2's left_gripper_2 is free, ball_5 is at room_1, ball_1 is at room_1.\nMy goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 6 </COUNT>  <PRECON> A robot_2 can move from room_3 to room_1 only if the robot_2 is in the room_3. </PRECON> move robot_2 from room_3 to room_1 <EFFECT> Once the robot_2 has moved from room_3 to room_1, the robot_2 is no longer in the room_3 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 5 </COUNT>  <PRECON> A robot_2 can pick up an ball_5 from a room_1 only if the robot_2's left_gripper_2 is free. A robot_2 can pick up an ball_5 from a room_1 only if the robot_2 is in the room_1 and the ball_5 is also in the same room_1. </PRECON> robot_2 picks ball_5 at room_1 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_5 from a room_1, the ball_5 is no longer in the room_1 and is carried by the robot_2. Once the robot_2 has picked up an ball_5 from a room_1, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 4 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 3 </COUNT>  <PRECON> A robot_2 can pick up an ball_4 from a room_2 only if the robot_2's right_gripper_2 is free. A robot_2 can pick up an ball_4 from a room_2 only if the robot_2 is in the room_2 and the ball_4 is also in the same room_2. </PRECON> robot_2 picks ball_4 at room_2 with right_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_4 from a room_2, the ball_4 is no longer in the room_2 and is carried by the robot_2. Once the robot_2 has picked up an ball_4 from a room_2, the robot_2's right_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 2 </COUNT>  <PRECON> A robot_2 can drop an ball_5 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_5. </PRECON> robot_2 drops ball_5 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_5 in a room_2, the ball_5 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_5 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 1 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_3 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_3 <EFFECT> Once the robot_2 has moved from room_2 to room_3, the robot_2 is no longer in the room_2 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 0 </COUNT>  <PRECON> A robot_2 can drop an ball_4 in a room_3 only if the robot_2 is in the room_3 and the robot_2 is carrying the ball_4. </PRECON> robot_2 drops ball_4 at room_3 with right_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_4 in a room_3, the ball_4 is in the room_3 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_4 in a room_3, the robot_2's right_gripper_2 is free. </EFFECT> \n</PLAN>", "plan_length": 7, "raw_plan": ["(move robot2 room3 room1)", "(pick robot2 ball5 room1 lgripper2)", "(move robot2 room1 room2)", "(pick robot2 ball4 room2 rgripper2)", "(drop robot2 ball5 room2 lgripper2)", "(move robot2 room2 room3)", "(drop robot2 ball4 room3 rgripper2)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, ball_6 is at room_3, ball_3 is at room_2, robot_2's right_gripper_2 is free, robot_1's left_gripper_1 is free, ball_4 is at room_2, robot_2 is at room_3, ball_2 is at room_3, robot_1's right_gripper_1 is free, robot_1 is at room_2, robot_2's left_gripper_2 is free, ball_5 is at room_1, ball_1 is at room_1.My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 6 </COUNT>  <PRECON> A robot_2 can move from room_3 to room_1 only if the robot_2 is in the room_3. </PRECON> move robot_2 from room_3 to room_1 <EFFECT> Once the robot_2 has moved from room_3 to room_1, the robot_2 is no longer in the room_3 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 5 </COUNT>  <PRECON> A robot_2 can pick up an ball_5 from a room_1 only if the robot_2's left_gripper_2 is free. A robot_2 can pick up an ball_5 from a room_1 only if the robot_2 is in the room_1 and the ball_5 is also in the same room_1. </PRECON> robot_2 picks ball_5 at room_1 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_5 from a room_1, the ball_5 is no longer in the room_1 and is carried by the robot_2. Once the robot_2 has picked up an ball_5 from a room_1, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 4 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 3 </COUNT>  <PRECON> A robot_2 can pick up an ball_4 from a room_2 only if the robot_2's right_gripper_2 is free. A robot_2 can pick up an ball_4 from a room_2 only if the robot_2 is in the room_2 and the ball_4 is also in the same room_2. </PRECON> robot_2 picks ball_4 at room_2 with right_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_4 from a room_2, the ball_4 is no longer in the room_2 and is carried by the robot_2. Once the robot_2 has picked up an ball_4 from a room_2, the robot_2's right_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 2 </COUNT>  <PRECON> A robot_2 can drop an ball_5 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_5. </PRECON> robot_2 drops ball_5 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_5 in a room_2, the ball_5 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_5 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 1 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_3 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_3 <EFFECT> Once the robot_2 has moved from room_2 to room_3, the robot_2 is no longer in the room_2 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_5 is at room_2, ball_6 is at room_3, ball_3 is at room_2, ball_2 is at room_3, ball_4 is at room_3. <COUNT> 0 </COUNT>  <PRECON> A robot_2 can drop an ball_4 in a room_3 only if the robot_2 is in the room_3 and the robot_2 is carrying the ball_4. </PRECON> robot_2 drops ball_4 at room_3 with right_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_4 in a room_3, the ball_4 is in the room_3 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_4 in a room_3, the robot_2's right_gripper_2 is free. </EFFECT> \n</PLAN>"}
{"domain": "grippers", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, ball_7 is at room_1, robot_4 is at room_1, ball_3 is at room_2, ball_6 is at room_1, ball_1 is at room_1, robot_1 is at room_1, robot_3's right_gripper_3 is free, robot_3 is at room_2, robot_1's right_gripper_1 is free, ball_10 is at room_1, ball_8 is at room_1, robot_2's right_gripper_2 is free, robot_2's left_gripper_2 is free, robot_4's left_gripper_4 is free, robot_1's left_gripper_1 is free, robot_3's left_gripper_3 is free, ball_2 is at room_1, ball_9 is at room_2, robot_4's right_gripper_4 is free, ball_4 is at room_1, robot_2 is at room_1, ball_5 is at room_2.\nMy goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 10 </COUNT>  <PRECON> A robot_4 can pick up an ball_10 from a room_1 only if the robot_4 is in the room_1 and the ball_10 is also in the same room_1. A robot_4 can pick up an ball_10 from a room_1 only if the robot_4's left_gripper_4 is free. </PRECON> robot_4 picks ball_10 at room_1 with left_gripper_4 <EFFECT> Once the robot_4 has picked up an ball_10 from a room_1, the robot_4's left_gripper_4 is no longer free. Once the robot_4 has picked up an ball_10 from a room_1, the ball_10 is no longer in the room_1 and is carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 9 </COUNT>  <PRECON> A robot_3 can pick up an ball_5 from a room_2 only if the robot_3 is in the room_2 and the ball_5 is also in the same room_2. A robot_3 can pick up an ball_5 from a room_2 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_5 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_5 from a room_2, the robot_3's left_gripper_3 is no longer free. Once the robot_3 has picked up an ball_5 from a room_2, the ball_5 is no longer in the room_2 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 8 </COUNT>  <PRECON> A robot_3 can move from room_2 to room_1 only if the robot_3 is in the room_2. </PRECON> move robot_3 from room_2 to room_1 <EFFECT> Once the robot_3 has moved from room_2 to room_1, the robot_3 is no longer in the room_2 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 7 </COUNT>  <PRECON> A robot_3 can drop an ball_5 in a room_1 only if the robot_3 is in the room_1 and the robot_3 is carrying the ball_5. </PRECON> robot_3 drops ball_5 at room_1 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_5 in a room_1, the ball_5 is in the room_1 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_5 in a room_1, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 6 </COUNT>  <PRECON> A robot_4 can move from room_1 to room_2 only if the robot_4 is in the room_1. </PRECON> move robot_4 from room_1 to room_2 <EFFECT> Once the robot_4 has moved from room_1 to room_2, the robot_4 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 5 </COUNT>  <PRECON> A robot_4 can drop an ball_10 in a room_2 only if the robot_4 is in the room_2 and the robot_4 is carrying the ball_10. </PRECON> robot_4 drops ball_10 at room_2 with left_gripper_4 <EFFECT> Once the robot_4 has dropped an ball_10 in a room_2, the ball_10 is in the room_2 and is no longer carried by the robot_4. Once the robot_4 has dropped an ball_10 in a room_2, the robot_4's left_gripper_4 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 4 </COUNT>  <PRECON> A robot_3 can pick up an ball_4 from a room_1 only if the robot_3 is in the room_1 and the ball_4 is also in the same room_1. A robot_3 can pick up an ball_4 from a room_1 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_4 at room_1 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_4 from a room_1, the robot_3's left_gripper_3 is no longer free. Once the robot_3 has picked up an ball_4 from a room_1, the ball_4 is no longer in the room_1 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 3 </COUNT>  <PRECON> A robot_3 can pick up an ball_8 from a room_1 only if the robot_3 is in the room_1 and the ball_8 is also in the same room_1. A robot_3 can pick up an ball_8 from a room_1 only if the robot_3's right_gripper_3 is free. </PRECON> robot_3 picks ball_8 at room_1 with right_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_8 from a room_1, the robot_3's right_gripper_3 is no longer free. Once the robot_3 has picked up an ball_8 from a room_1, the ball_8 is no longer in the room_1 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 2 </COUNT>  <PRECON> A robot_3 can move from room_1 to room_2 only if the robot_3 is in the room_1. </PRECON> move robot_3 from room_1 to room_2 <EFFECT> Once the robot_3 has moved from room_1 to room_2, the robot_3 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 1 </COUNT>  <PRECON> A robot_3 can drop an ball_4 in a room_2 only if the robot_3 is in the room_2 and the robot_3 is carrying the ball_4. </PRECON> robot_3 drops ball_4 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_4 in a room_2, the ball_4 is in the room_2 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_4 in a room_2, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 0 </COUNT>  <PRECON> A robot_3 can drop an ball_8 in a room_2 only if the robot_3 is in the room_2 and the robot_3 is carrying the ball_8. </PRECON> robot_3 drops ball_8 at room_2 with right_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_8 in a room_2, the ball_8 is in the room_2 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_8 in a room_2, the robot_3's right_gripper_3 is free. </EFFECT> \n</PLAN>", "plan_length": 11, "raw_plan": ["(pick robot4 ball10 room1 lgripper4)", "(pick robot3 ball5 room2 lgripper3)", "(move robot3 room2 room1)", "(drop robot3 ball5 room1 lgripper3)", "(move robot4 room1 room2)", "(drop robot4 ball10 room2 lgripper4)", "(pick robot3 ball4 room1 lgripper3)", "(pick robot3 ball8 room1 rgripper3)", "(move robot3 room1 room2)", "(drop robot3 ball4 room2 lgripper3)", "(drop robot3 ball8 room2 rgripper3)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, ball_7 is at room_1, robot_4 is at room_1, ball_3 is at room_2, ball_6 is at room_1, ball_1 is at room_1, robot_1 is at room_1, robot_3's right_gripper_3 is free, robot_3 is at room_2, robot_1's right_gripper_1 is free, ball_10 is at room_1, ball_8 is at room_1, robot_2's right_gripper_2 is free, robot_2's left_gripper_2 is free, robot_4's left_gripper_4 is free, robot_1's left_gripper_1 is free, robot_3's left_gripper_3 is free, ball_2 is at room_1, ball_9 is at room_2, robot_4's right_gripper_4 is free, ball_4 is at room_1, robot_2 is at room_1, ball_5 is at room_2.My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 10 </COUNT>  <PRECON> A robot_4 can pick up an ball_10 from a room_1 only if the robot_4 is in the room_1 and the ball_10 is also in the same room_1. A robot_4 can pick up an ball_10 from a room_1 only if the robot_4's left_gripper_4 is free. </PRECON> robot_4 picks ball_10 at room_1 with left_gripper_4 <EFFECT> Once the robot_4 has picked up an ball_10 from a room_1, the robot_4's left_gripper_4 is no longer free. Once the robot_4 has picked up an ball_10 from a room_1, the ball_10 is no longer in the room_1 and is carried by the robot_4. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 9 </COUNT>  <PRECON> A robot_3 can pick up an ball_5 from a room_2 only if the robot_3 is in the room_2 and the ball_5 is also in the same room_2. A robot_3 can pick up an ball_5 from a room_2 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_5 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_5 from a room_2, the robot_3's left_gripper_3 is no longer free. Once the robot_3 has picked up an ball_5 from a room_2, the ball_5 is no longer in the room_2 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 8 </COUNT>  <PRECON> A robot_3 can move from room_2 to room_1 only if the robot_3 is in the room_2. </PRECON> move robot_3 from room_2 to room_1 <EFFECT> Once the robot_3 has moved from room_2 to room_1, the robot_3 is no longer in the room_2 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 7 </COUNT>  <PRECON> A robot_3 can drop an ball_5 in a room_1 only if the robot_3 is in the room_1 and the robot_3 is carrying the ball_5. </PRECON> robot_3 drops ball_5 at room_1 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_5 in a room_1, the ball_5 is in the room_1 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_5 in a room_1, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 6 </COUNT>  <PRECON> A robot_4 can move from room_1 to room_2 only if the robot_4 is in the room_1. </PRECON> move robot_4 from room_1 to room_2 <EFFECT> Once the robot_4 has moved from room_1 to room_2, the robot_4 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 5 </COUNT>  <PRECON> A robot_4 can drop an ball_10 in a room_2 only if the robot_4 is in the room_2 and the robot_4 is carrying the ball_10. </PRECON> robot_4 drops ball_10 at room_2 with left_gripper_4 <EFFECT> Once the robot_4 has dropped an ball_10 in a room_2, the ball_10 is in the room_2 and is no longer carried by the robot_4. Once the robot_4 has dropped an ball_10 in a room_2, the robot_4's left_gripper_4 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 4 </COUNT>  <PRECON> A robot_3 can pick up an ball_4 from a room_1 only if the robot_3 is in the room_1 and the ball_4 is also in the same room_1. A robot_3 can pick up an ball_4 from a room_1 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_4 at room_1 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_4 from a room_1, the robot_3's left_gripper_3 is no longer free. Once the robot_3 has picked up an ball_4 from a room_1, the ball_4 is no longer in the room_1 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 3 </COUNT>  <PRECON> A robot_3 can pick up an ball_8 from a room_1 only if the robot_3 is in the room_1 and the ball_8 is also in the same room_1. A robot_3 can pick up an ball_8 from a room_1 only if the robot_3's right_gripper_3 is free. </PRECON> robot_3 picks ball_8 at room_1 with right_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_8 from a room_1, the robot_3's right_gripper_3 is no longer free. Once the robot_3 has picked up an ball_8 from a room_1, the ball_8 is no longer in the room_1 and is carried by the robot_3. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 2 </COUNT>  <PRECON> A robot_3 can move from room_1 to room_2 only if the robot_3 is in the room_1. </PRECON> move robot_3 from room_1 to room_2 <EFFECT> Once the robot_3 has moved from room_1 to room_2, the robot_3 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 1 </COUNT>  <PRECON> A robot_3 can drop an ball_4 in a room_2 only if the robot_3 is in the room_2 and the robot_3 is carrying the ball_4. </PRECON> robot_3 drops ball_4 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_4 in a room_2, the ball_4 is in the room_2 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_4 in a room_2, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_1 is at room_1, ball_7 is at room_1, ball_6 is at room_1, ball_3 is at room_2, ball_4 is at room_2, ball_5 is at room_1, ball_2 is at room_1, ball_8 is at room_2, ball_10 is at room_2, ball_9 is at room_2. <COUNT> 0 </COUNT>  <PRECON> A robot_3 can drop an ball_8 in a room_2 only if the robot_3 is in the room_2 and the robot_3 is carrying the ball_8. </PRECON> robot_3 drops ball_8 at room_2 with right_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_8 in a room_2, the ball_8 is in the room_2 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_8 in a room_2, the robot_3's right_gripper_3 is free. </EFFECT> \n</PLAN>"}
{"domain": "grippers", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_2's left_gripper_2 is free, robot_1's left_gripper_1 is free, ball_4 is at room_3, robot_3's right_gripper_3 is free, ball_3 is at room_3, robot_1 is at room_4, ball_1 is at room_1, robot_1's right_gripper_1 is free, robot_3's left_gripper_3 is free, robot_3 is at room_2, robot_2's right_gripper_2 is free, ball_2 is at room_2, robot_2 is at room_3.\nMy goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 13 </COUNT>  <PRECON> A robot_3 can pick up an ball_2 from a room_2 only if the robot_3 is in the room_2 and the ball_2 is also in the same room_2. A robot_3 can pick up an ball_2 from a room_2 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_2 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_2 from a room_2, the ball_2 is no longer in the room_2 and is carried by the robot_3. Once the robot_3 has picked up an ball_2 from a room_2, the robot_3's left_gripper_3 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 12 </COUNT>  <PRECON> A robot_2 can pick up an ball_3 from a room_3 only if the robot_2 is in the room_3 and the ball_3 is also in the same room_3. A robot_2 can pick up an ball_3 from a room_3 only if the robot_2's left_gripper_2 is free. </PRECON> robot_2 picks ball_3 at room_3 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_3 from a room_3, the ball_3 is no longer in the room_3 and is carried by the robot_2. Once the robot_2 has picked up an ball_3 from a room_3, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 11 </COUNT>  <PRECON> A robot_2 can move from room_3 to room_2 only if the robot_2 is in the room_3. </PRECON> move robot_2 from room_3 to room_2 <EFFECT> Once the robot_2 has moved from room_3 to room_2, the robot_2 is no longer in the room_3 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 10 </COUNT>  <PRECON> A robot_3 can move from room_2 to room_4 only if the robot_3 is in the room_2. </PRECON> move robot_3 from room_2 to room_4 <EFFECT> Once the robot_3 has moved from room_2 to room_4, the robot_3 is no longer in the room_2 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 9 </COUNT>  <PRECON> A robot_3 can drop an ball_2 in a room_4 only if the robot_3 is in the room_4 and the robot_3 is carrying the ball_2. </PRECON> robot_3 drops ball_2 at room_4 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_2 in a room_4, the ball_2 is in the room_4 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_2 in a room_4, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 8 </COUNT>  <PRECON> A robot_2 can drop an ball_3 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_3. </PRECON> robot_2 drops ball_3 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_3 in a room_2, the ball_3 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_3 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 7 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_1 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_1 <EFFECT> Once the robot_2 has moved from room_2 to room_1, the robot_2 is no longer in the room_2 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 6 </COUNT>  <PRECON> A robot_2 can pick up an ball_1 from a room_1 only if the robot_2 is in the room_1 and the ball_1 is also in the same room_1. A robot_2 can pick up an ball_1 from a room_1 only if the robot_2's left_gripper_2 is free. </PRECON> robot_2 picks ball_1 at room_1 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_1 from a room_1, the ball_1 is no longer in the room_1 and is carried by the robot_2. Once the robot_2 has picked up an ball_1 from a room_1, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 5 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 4 </COUNT>  <PRECON> A robot_2 can drop an ball_1 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_1. </PRECON> robot_2 drops ball_1 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_1 in a room_2, the ball_1 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_1 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 3 </COUNT>  <PRECON> A robot_1 can move from room_4 to room_3 only if the robot_1 is in the room_4. </PRECON> move robot_1 from room_4 to room_3 <EFFECT> Once the robot_1 has moved from room_4 to room_3, the robot_1 is no longer in the room_4 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 2 </COUNT>  <PRECON> A robot_1 can pick up an ball_4 from a room_3 only if the robot_1 is in the room_3 and the ball_4 is also in the same room_3. A robot_1 can pick up an ball_4 from a room_3 only if the robot_1's left_gripper_1 is free. </PRECON> robot_1 picks ball_4 at room_3 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_4 from a room_3, the ball_4 is no longer in the room_3 and is carried by the robot_1. Once the robot_1 has picked up an ball_4 from a room_3, the robot_1's left_gripper_1 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 1 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_4 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_4 <EFFECT> Once the robot_1 has moved from room_3 to room_4, the robot_1 is no longer in the room_3 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 0 </COUNT>  <PRECON> A robot_1 can drop an ball_4 in a room_4 only if the robot_1 is in the room_4 and the robot_1 is carrying the ball_4. </PRECON> robot_1 drops ball_4 at room_4 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_4 in a room_4, the ball_4 is in the room_4 and is no longer carried by the robot_1. Once the robot_1 has dropped an ball_4 in a room_4, the robot_1's left_gripper_1 is free. </EFFECT> \n</PLAN>", "plan_length": 14, "raw_plan": ["(pick robot3 ball2 room2 lgripper3)", "(pick robot2 ball3 room3 lgripper2)", "(move robot2 room3 room2)", "(move robot3 room2 room4)", "(drop robot3 ball2 room4 lgripper3)", "(drop robot2 ball3 room2 lgripper2)", "(move robot2 room2 room1)", "(pick robot2 ball1 room1 lgripper2)", "(move robot2 room1 room2)", "(drop robot2 ball1 room2 lgripper2)", "(move robot1 room4 room3)", "(pick robot1 ball4 room3 lgripper1)", "(move robot1 room3 room4)", "(drop robot1 ball4 room4 lgripper1)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_2's left_gripper_2 is free, robot_1's left_gripper_1 is free, ball_4 is at room_3, robot_3's right_gripper_3 is free, ball_3 is at room_3, robot_1 is at room_4, ball_1 is at room_1, robot_1's right_gripper_1 is free, robot_3's left_gripper_3 is free, robot_3 is at room_2, robot_2's right_gripper_2 is free, ball_2 is at room_2, robot_2 is at room_3.My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 13 </COUNT>  <PRECON> A robot_3 can pick up an ball_2 from a room_2 only if the robot_3 is in the room_2 and the ball_2 is also in the same room_2. A robot_3 can pick up an ball_2 from a room_2 only if the robot_3's left_gripper_3 is free. </PRECON> robot_3 picks ball_2 at room_2 with left_gripper_3 <EFFECT> Once the robot_3 has picked up an ball_2 from a room_2, the ball_2 is no longer in the room_2 and is carried by the robot_3. Once the robot_3 has picked up an ball_2 from a room_2, the robot_3's left_gripper_3 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 12 </COUNT>  <PRECON> A robot_2 can pick up an ball_3 from a room_3 only if the robot_2 is in the room_3 and the ball_3 is also in the same room_3. A robot_2 can pick up an ball_3 from a room_3 only if the robot_2's left_gripper_2 is free. </PRECON> robot_2 picks ball_3 at room_3 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_3 from a room_3, the ball_3 is no longer in the room_3 and is carried by the robot_2. Once the robot_2 has picked up an ball_3 from a room_3, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 11 </COUNT>  <PRECON> A robot_2 can move from room_3 to room_2 only if the robot_2 is in the room_3. </PRECON> move robot_2 from room_3 to room_2 <EFFECT> Once the robot_2 has moved from room_3 to room_2, the robot_2 is no longer in the room_3 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 10 </COUNT>  <PRECON> A robot_3 can move from room_2 to room_4 only if the robot_3 is in the room_2. </PRECON> move robot_3 from room_2 to room_4 <EFFECT> Once the robot_3 has moved from room_2 to room_4, the robot_3 is no longer in the room_2 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 9 </COUNT>  <PRECON> A robot_3 can drop an ball_2 in a room_4 only if the robot_3 is in the room_4 and the robot_3 is carrying the ball_2. </PRECON> robot_3 drops ball_2 at room_4 with left_gripper_3 <EFFECT> Once the robot_3 has dropped an ball_2 in a room_4, the ball_2 is in the room_4 and is no longer carried by the robot_3. Once the robot_3 has dropped an ball_2 in a room_4, the robot_3's left_gripper_3 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 8 </COUNT>  <PRECON> A robot_2 can drop an ball_3 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_3. </PRECON> robot_2 drops ball_3 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_3 in a room_2, the ball_3 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_3 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 7 </COUNT>  <PRECON> A robot_2 can move from room_2 to room_1 only if the robot_2 is in the room_2. </PRECON> move robot_2 from room_2 to room_1 <EFFECT> Once the robot_2 has moved from room_2 to room_1, the robot_2 is no longer in the room_2 and is in the room_1. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 6 </COUNT>  <PRECON> A robot_2 can pick up an ball_1 from a room_1 only if the robot_2 is in the room_1 and the ball_1 is also in the same room_1. A robot_2 can pick up an ball_1 from a room_1 only if the robot_2's left_gripper_2 is free. </PRECON> robot_2 picks ball_1 at room_1 with left_gripper_2 <EFFECT> Once the robot_2 has picked up an ball_1 from a room_1, the ball_1 is no longer in the room_1 and is carried by the robot_2. Once the robot_2 has picked up an ball_1 from a room_1, the robot_2's left_gripper_2 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 5 </COUNT>  <PRECON> A robot_2 can move from room_1 to room_2 only if the robot_2 is in the room_1. </PRECON> move robot_2 from room_1 to room_2 <EFFECT> Once the robot_2 has moved from room_1 to room_2, the robot_2 is no longer in the room_1 and is in the room_2. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 4 </COUNT>  <PRECON> A robot_2 can drop an ball_1 in a room_2 only if the robot_2 is in the room_2 and the robot_2 is carrying the ball_1. </PRECON> robot_2 drops ball_1 at room_2 with left_gripper_2 <EFFECT> Once the robot_2 has dropped an ball_1 in a room_2, the ball_1 is in the room_2 and is no longer carried by the robot_2. Once the robot_2 has dropped an ball_1 in a room_2, the robot_2's left_gripper_2 is free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 3 </COUNT>  <PRECON> A robot_1 can move from room_4 to room_3 only if the robot_1 is in the room_4. </PRECON> move robot_1 from room_4 to room_3 <EFFECT> Once the robot_1 has moved from room_4 to room_3, the robot_1 is no longer in the room_4 and is in the room_3. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 2 </COUNT>  <PRECON> A robot_1 can pick up an ball_4 from a room_3 only if the robot_1 is in the room_3 and the ball_4 is also in the same room_3. A robot_1 can pick up an ball_4 from a room_3 only if the robot_1's left_gripper_1 is free. </PRECON> robot_1 picks ball_4 at room_3 with left_gripper_1 <EFFECT> Once the robot_1 has picked up an ball_4 from a room_3, the ball_4 is no longer in the room_3 and is carried by the robot_1. Once the robot_1 has picked up an ball_4 from a room_3, the robot_1's left_gripper_1 is no longer free. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 1 </COUNT>  <PRECON> A robot_1 can move from room_3 to room_4 only if the robot_1 is in the room_3. </PRECON> move robot_1 from room_3 to room_4 <EFFECT> Once the robot_1 has moved from room_3 to room_4, the robot_1 is no longer in the room_3 and is in the room_4. </EFFECT> \n <GOAL> My goal is to have that ball_2 is at room_4, ball_1 is at room_2, ball_3 is at room_2, ball_4 is at room_4. <COUNT> 0 </COUNT>  <PRECON> A robot_1 can drop an ball_4 in a room_4 only if the robot_1 is in the room_4 and the robot_1 is carrying the ball_4. </PRECON> robot_1 drops ball_4 at room_4 with left_gripper_1 <EFFECT> Once the robot_1 has dropped an ball_4 in a room_4, the ball_4 is in the room_4 and is no longer carried by the robot_1. Once the robot_1 has dropped an ball_4 in a room_4, the robot_1's left_gripper_1 is free. </EFFECT> \n</PLAN>"}
{"domain": "logistics", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, location_2-0 is an airport, location_1-5 is in the city city_1, location_4-2 is in the city city_4, location_1-4 is in the city city_1, location_3-1 is in the city city_3, , location_1-3 is in the city city_1, , location_0-0 is an airport, , , , location_0-4 is in the city city_0, , location_4-4 is in the city city_4, , location_2-2 is in the city city_2, , , location_2-3 is in the city city_2, location_2-0 is in the city city_2, location_1-1 is in the city city_1, , , , , , airplane_0 is at location_1-0, location_1-0 is an airport, , location_1-2 is in the city city_1, , , , , location_3-5 is in the city city_3, , location_0-2 is in the city city_0, , location_2-4 is in the city city_2, , , location_3-4 is in the city city_3, , location_4-1 is in the city city_4, location_2-1 is in the city city_2, , location_0-3 is in the city city_0, , location_2-5 is in the city city_2, , airplane_2 is at location_1-0, , , , , , location_4-0 is an airport, location_0-1 is in the city city_0, airplane_1 is at location_2-0, , location_1-0 is in the city city_1, truck_0 is at location_0-0, location_4-0 is in the city city_4, , , location_4-3 is in the city city_4, , truck_1 is at location_1-0, truck_2 is at location_2-5, , package_0 is at location_0-5, location_3-0 is an airport, , location_3-0 is in the city city_3, location_0-0 is in the city city_0, , , location_3-3 is in the city city_3, truck_3 is at location_3-1, location_0-5 is in the city city_0, location_3-2 is in the city city_3, , , truck_4 is at location_4-1, location_4-5 is in the city city_4, , .\nMy goal is to have that package_0 is at location_0-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from location_0-0 to location_0-3 if the truck_0 is at the location_0-0 and both location_0-0 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-0 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-0 to location_0-3, it is not at the location_0-0 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT>  <PRECON> A truck_0 can be driven from location_0-3 to location_0-5 if the truck_0 is at the location_0-3 and both location_0-3 and location_0-5 are locations in the same city_0. </PRECON> drive truck_0 from location_0-3 to location_0-5 in city_0 <EFFECT> Once a truck_0 is driven from location_0-3 to location_0-5, it is not at the location_0-3 and is at the location_0-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_0 only if the package_0 and the truck_0 are in the same location_0-5. </PRECON> load package_0 into truck_0 at location_0-5 <EFFECT> Once a package_0 is loaded into a truck_0, the package_0 is not at the location_0-5 and is in the truck_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT>  <PRECON> A truck_0 can be driven from location_0-5 to location_0-3 if the truck_0 is at the location_0-5 and both location_0-5 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-5 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-5 to location_0-3, it is not at the location_0-5 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_0 only if the package_0 is in the truck_0. </PRECON> unload package_0 from truck_0 at location_0-3 <EFFECT> Once a package_0 is unloaded from a truck_0, the package_0 is not in the truck_0 and is at the location_0-3 of the truck_0. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(drive-truck t0 l0-0 l0-3 c0)", "(drive-truck t0 l0-3 l0-5 c0)", "(load-truck p0 t0 l0-5)", "(drive-truck t0 l0-5 l0-3 c0)", "(unload-truck p0 t0 l0-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, location_2-0 is an airport, location_1-5 is in the city city_1, location_4-2 is in the city city_4, location_1-4 is in the city city_1, location_3-1 is in the city city_3, , location_1-3 is in the city city_1, , location_0-0 is an airport, , , , location_0-4 is in the city city_0, , location_4-4 is in the city city_4, , location_2-2 is in the city city_2, , , location_2-3 is in the city city_2, location_2-0 is in the city city_2, location_1-1 is in the city city_1, , , , , , airplane_0 is at location_1-0, location_1-0 is an airport, , location_1-2 is in the city city_1, , , , , location_3-5 is in the city city_3, , location_0-2 is in the city city_0, , location_2-4 is in the city city_2, , , location_3-4 is in the city city_3, , location_4-1 is in the city city_4, location_2-1 is in the city city_2, , location_0-3 is in the city city_0, , location_2-5 is in the city city_2, , airplane_2 is at location_1-0, , , , , , location_4-0 is an airport, location_0-1 is in the city city_0, airplane_1 is at location_2-0, , location_1-0 is in the city city_1, truck_0 is at location_0-0, location_4-0 is in the city city_4, , , location_4-3 is in the city city_4, , truck_1 is at location_1-0, truck_2 is at location_2-5, , package_0 is at location_0-5, location_3-0 is an airport, , location_3-0 is in the city city_3, location_0-0 is in the city city_0, , , location_3-3 is in the city city_3, truck_3 is at location_3-1, location_0-5 is in the city city_0, location_3-2 is in the city city_3, , , truck_4 is at location_4-1, location_4-5 is in the city city_4, , .My goal is to have that package_0 is at location_0-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 4 </COUNT>  <PRECON> A truck_0 can be driven from location_0-0 to location_0-3 if the truck_0 is at the location_0-0 and both location_0-0 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-0 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-0 to location_0-3, it is not at the location_0-0 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT>  <PRECON> A truck_0 can be driven from location_0-3 to location_0-5 if the truck_0 is at the location_0-3 and both location_0-3 and location_0-5 are locations in the same city_0. </PRECON> drive truck_0 from location_0-3 to location_0-5 in city_0 <EFFECT> Once a truck_0 is driven from location_0-3 to location_0-5, it is not at the location_0-3 and is at the location_0-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_0 only if the package_0 and the truck_0 are in the same location_0-5. </PRECON> load package_0 into truck_0 at location_0-5 <EFFECT> Once a package_0 is loaded into a truck_0, the package_0 is not at the location_0-5 and is in the truck_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT>  <PRECON> A truck_0 can be driven from location_0-5 to location_0-3 if the truck_0 is at the location_0-5 and both location_0-5 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-5 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-5 to location_0-3, it is not at the location_0-5 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_0 only if the package_0 is in the truck_0. </PRECON> unload package_0 from truck_0 at location_0-3 <EFFECT> Once a package_0 is unloaded from a truck_0, the package_0 is not in the truck_0 and is at the location_0-3 of the truck_0. </EFFECT> \n</PLAN>"}
{"domain": "logistics", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, location_1-0 is an airport, , , location_1-5 is in the city city_1, location_1-3 is in the city city_1, location_0-5 is in the city city_0, , location_3-5 is in the city city_3, location_0-3 is in the city city_0, , , airplane_0 is at location_1-0, , location_2-5 is in the city city_2, location_3-0 is an airport, , location_3-3 is in the city city_3, , , truck_3 is at location_3-1, , location_1-4 is in the city city_1, location_4-3 is in the city city_4, location_2-4 is in the city city_2, , truck_0 is at location_0-0, , , , location_0-0 is in the city city_0, , , , , airplane_2 is at location_0-0, , location_4-4 is in the city city_4, , , , location_1-2 is in the city city_1, location_2-3 is in the city city_2, location_4-1 is in the city city_4, truck_1 is at location_1-2, location_1-1 is in the city city_1, , , location_3-1 is in the city city_3, , location_4-5 is in the city city_4, location_2-2 is in the city city_2, , location_0-4 is in the city city_0, truck_4 is at location_4-0, , location_1-0 is in the city city_1, , , location_4-2 is in the city city_4, location_3-0 is in the city city_3, , airplane_1 is at location_2-0, location_0-0 is an airport, location_3-4 is in the city city_3, , , , , location_2-0 is in the city city_2, , truck_2 is at location_2-0, location_3-2 is in the city city_3, , location_4-0 is an airport, location_4-0 is in the city city_4, , , location_0-1 is in the city city_0, location_2-1 is in the city city_2, , location_2-0 is an airport, package_0 is at location_3-0, , , location_0-2 is in the city city_0, , , .\nMy goal is to have that package_0 is at location_4-5.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 6 </COUNT>  <PRECON> An airplane_0 can be flown from location_1-0 to location_3-0 if the location_1-0 and the location_3-0 are airports and the airplane_0 is at the location_1-0. </PRECON> fly airplane_0 from location_1-0 to location_3-0 <EFFECT> Once an airplane_0 is flown from location_1-0 to location_3-0 the airplane_0 is not at the location_1-0 and is at the location_3-0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 5 </COUNT>  <PRECON> A package_0 can be loaded into an airplane_0 only if the package_0 and the airplane_0 are in the same location_3-0. </PRECON> load package_0 into airplane_0 at location_3-0 <EFFECT> Once a package_0 is loaded into an airplane_0, the package_0 is not at the location_3-0 and is in the airplane_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 4 </COUNT>  <PRECON> An airplane_0 can be flown from location_3-0 to location_4-0 if the location_3-0 and the location_4-0 are airports and the airplane_0 is at the location_3-0. </PRECON> fly airplane_0 from location_3-0 to location_4-0 <EFFECT> Once an airplane_0 is flown from location_3-0 to location_4-0 the airplane_0 is not at the location_3-0 and is at the location_4-0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 3 </COUNT>  <PRECON> A package_0 can be unloaded from an airplane_0 only if the package_0 in the airplane_0. </PRECON> unload package_0 from airplane_0 at location_4-0 <EFFECT> Once a package_0 is unloaded from an airplane_0, the package_0 is not in the airplane_0 and is at the location_4-0 of the airplane_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_4 only if the package_0 and the truck_4 are in the same location_4-0. </PRECON> load package_0 into truck_4 at location_4-0 <EFFECT> Once a package_0 is loaded into a truck_4, the package_0 is not at the location_4-0 and is in the truck_4. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 1 </COUNT>  <PRECON> A truck_4 can be driven from location_4-0 to location_4-5 if the truck_4 is at the location_4-0 and both location_4-0 and location_4-5 are locations in the same city_4. </PRECON> drive truck_4 from location_4-0 to location_4-5 in city_4 <EFFECT> Once a truck_4 is driven from location_4-0 to location_4-5, it is not at the location_4-0 and is at the location_4-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_4 only if the package_0 is in the truck_4. </PRECON> unload package_0 from truck_4 at location_4-5 <EFFECT> Once a package_0 is unloaded from a truck_4, the package_0 is not in the truck_4 and is at the location_4-5 of the truck_4. </EFFECT> \n</PLAN>", "plan_length": 7, "raw_plan": ["(fly-airplane a0 l1-0 l3-0)", "(load-airplane p0 a0 l3-0)", "(fly-airplane a0 l3-0 l4-0)", "(unload-airplane p0 a0 l4-0)", "(load-truck p0 t4 l4-0)", "(drive-truck t4 l4-0 l4-5 c4)", "(unload-truck p0 t4 l4-5)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, location_1-0 is an airport, , , location_1-5 is in the city city_1, location_1-3 is in the city city_1, location_0-5 is in the city city_0, , location_3-5 is in the city city_3, location_0-3 is in the city city_0, , , airplane_0 is at location_1-0, , location_2-5 is in the city city_2, location_3-0 is an airport, , location_3-3 is in the city city_3, , , truck_3 is at location_3-1, , location_1-4 is in the city city_1, location_4-3 is in the city city_4, location_2-4 is in the city city_2, , truck_0 is at location_0-0, , , , location_0-0 is in the city city_0, , , , , airplane_2 is at location_0-0, , location_4-4 is in the city city_4, , , , location_1-2 is in the city city_1, location_2-3 is in the city city_2, location_4-1 is in the city city_4, truck_1 is at location_1-2, location_1-1 is in the city city_1, , , location_3-1 is in the city city_3, , location_4-5 is in the city city_4, location_2-2 is in the city city_2, , location_0-4 is in the city city_0, truck_4 is at location_4-0, , location_1-0 is in the city city_1, , , location_4-2 is in the city city_4, location_3-0 is in the city city_3, , airplane_1 is at location_2-0, location_0-0 is an airport, location_3-4 is in the city city_3, , , , , location_2-0 is in the city city_2, , truck_2 is at location_2-0, location_3-2 is in the city city_3, , location_4-0 is an airport, location_4-0 is in the city city_4, , , location_0-1 is in the city city_0, location_2-1 is in the city city_2, , location_2-0 is an airport, package_0 is at location_3-0, , , location_0-2 is in the city city_0, , , .My goal is to have that package_0 is at location_4-5.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 6 </COUNT>  <PRECON> An airplane_0 can be flown from location_1-0 to location_3-0 if the location_1-0 and the location_3-0 are airports and the airplane_0 is at the location_1-0. </PRECON> fly airplane_0 from location_1-0 to location_3-0 <EFFECT> Once an airplane_0 is flown from location_1-0 to location_3-0 the airplane_0 is not at the location_1-0 and is at the location_3-0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 5 </COUNT>  <PRECON> A package_0 can be loaded into an airplane_0 only if the package_0 and the airplane_0 are in the same location_3-0. </PRECON> load package_0 into airplane_0 at location_3-0 <EFFECT> Once a package_0 is loaded into an airplane_0, the package_0 is not at the location_3-0 and is in the airplane_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 4 </COUNT>  <PRECON> An airplane_0 can be flown from location_3-0 to location_4-0 if the location_3-0 and the location_4-0 are airports and the airplane_0 is at the location_3-0. </PRECON> fly airplane_0 from location_3-0 to location_4-0 <EFFECT> Once an airplane_0 is flown from location_3-0 to location_4-0 the airplane_0 is not at the location_3-0 and is at the location_4-0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 3 </COUNT>  <PRECON> A package_0 can be unloaded from an airplane_0 only if the package_0 in the airplane_0. </PRECON> unload package_0 from airplane_0 at location_4-0 <EFFECT> Once a package_0 is unloaded from an airplane_0, the package_0 is not in the airplane_0 and is at the location_4-0 of the airplane_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_4 only if the package_0 and the truck_4 are in the same location_4-0. </PRECON> load package_0 into truck_4 at location_4-0 <EFFECT> Once a package_0 is loaded into a truck_4, the package_0 is not at the location_4-0 and is in the truck_4. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 1 </COUNT>  <PRECON> A truck_4 can be driven from location_4-0 to location_4-5 if the truck_4 is at the location_4-0 and both location_4-0 and location_4-5 are locations in the same city_4. </PRECON> drive truck_4 from location_4-0 to location_4-5 in city_4 <EFFECT> Once a truck_4 is driven from location_4-0 to location_4-5, it is not at the location_4-0 and is at the location_4-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_4 only if the package_0 is in the truck_4. </PRECON> unload package_0 from truck_4 at location_4-5 <EFFECT> Once a package_0 is unloaded from a truck_4, the package_0 is not in the truck_4 and is at the location_4-5 of the truck_4. </EFFECT> \n</PLAN>"}
{"domain": "logistics", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, truck_0 is at location_0-0, location_4-5 is in the city city_4, location_1-2 is in the city city_1, , , location_2-4 is in the city city_2, location_3-4 is in the city city_3, , , location_4-0 is in the city city_4, location_2-0 is in the city city_2, location_0-0 is in the city city_0, location_2-5 is in the city city_2, location_4-3 is in the city city_4, , location_3-0 is an airport, location_1-4 is in the city city_1, , , airplane_2 is at location_0-0, , , , location_4-1 is in the city city_4, , airplane_0 is at location_3-0, location_2-0 is an airport, location_1-0 is an airport, location_1-1 is in the city city_1, , , , , , , location_1-5 is in the city city_1, , truck_1 is at location_1-2, , truck_2 is at location_2-5, location_3-0 is in the city city_3, location_2-1 is in the city city_2, location_0-5 is in the city city_0, , location_0-0 is an airport, , location_0-1 is in the city city_0, location_4-4 is in the city city_4, , location_2-3 is in the city city_2, , truck_4 is at location_4-5, , location_3-3 is in the city city_3, , , , , location_4-2 is in the city city_4, , airplane_1 is at location_0-0, package_0 is at location_1-2, location_3-2 is in the city city_3, location_3-5 is in the city city_3, , location_1-3 is in the city city_1, , , location_0-2 is in the city city_0, , location_1-0 is in the city city_1, truck_3 is at location_3-0, , location_0-4 is in the city city_0, , , , location_0-3 is in the city city_0, , , , location_3-1 is in the city city_3, location_4-0 is an airport, , , location_2-2 is in the city city_2, , .\nMy goal is to have that package_0 is at location_1-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_1 only if the package_0 and the truck_1 are in the same location_1-2. </PRECON> load package_0 into truck_1 at location_1-2 <EFFECT> Once a package_0 is loaded into a truck_1, the package_0 is not at the location_1-2 and is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT>  <PRECON> A truck_1 can be driven from location_1-2 to location_1-3 if the truck_1 is at the location_1-2 and both location_1-2 and location_1-3 are locations in the same city_1. </PRECON> drive truck_1 from location_1-2 to location_1-3 in city_1 <EFFECT> Once a truck_1 is driven from location_1-2 to location_1-3, it is not at the location_1-2 and is at the location_1-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_1 only if the package_0 is in the truck_1. </PRECON> unload package_0 from truck_1 at location_1-3 <EFFECT> Once a package_0 is unloaded from a truck_1, the package_0 is not in the truck_1 and is at the location_1-3 of the truck_1. </EFFECT> \n</PLAN>", "plan_length": 3, "raw_plan": ["(load-truck p0 t1 l1-2)", "(drive-truck t1 l1-2 l1-3 c1)", "(unload-truck p0 t1 l1-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, truck_0 is at location_0-0, location_4-5 is in the city city_4, location_1-2 is in the city city_1, , , location_2-4 is in the city city_2, location_3-4 is in the city city_3, , , location_4-0 is in the city city_4, location_2-0 is in the city city_2, location_0-0 is in the city city_0, location_2-5 is in the city city_2, location_4-3 is in the city city_4, , location_3-0 is an airport, location_1-4 is in the city city_1, , , airplane_2 is at location_0-0, , , , location_4-1 is in the city city_4, , airplane_0 is at location_3-0, location_2-0 is an airport, location_1-0 is an airport, location_1-1 is in the city city_1, , , , , , , location_1-5 is in the city city_1, , truck_1 is at location_1-2, , truck_2 is at location_2-5, location_3-0 is in the city city_3, location_2-1 is in the city city_2, location_0-5 is in the city city_0, , location_0-0 is an airport, , location_0-1 is in the city city_0, location_4-4 is in the city city_4, , location_2-3 is in the city city_2, , truck_4 is at location_4-5, , location_3-3 is in the city city_3, , , , , location_4-2 is in the city city_4, , airplane_1 is at location_0-0, package_0 is at location_1-2, location_3-2 is in the city city_3, location_3-5 is in the city city_3, , location_1-3 is in the city city_1, , , location_0-2 is in the city city_0, , location_1-0 is in the city city_1, truck_3 is at location_3-0, , location_0-4 is in the city city_0, , , , location_0-3 is in the city city_0, , , , location_3-1 is in the city city_3, location_4-0 is an airport, , , location_2-2 is in the city city_2, , .My goal is to have that package_0 is at location_1-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_1 only if the package_0 and the truck_1 are in the same location_1-2. </PRECON> load package_0 into truck_1 at location_1-2 <EFFECT> Once a package_0 is loaded into a truck_1, the package_0 is not at the location_1-2 and is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT>  <PRECON> A truck_1 can be driven from location_1-2 to location_1-3 if the truck_1 is at the location_1-2 and both location_1-2 and location_1-3 are locations in the same city_1. </PRECON> drive truck_1 from location_1-2 to location_1-3 in city_1 <EFFECT> Once a truck_1 is driven from location_1-2 to location_1-3, it is not at the location_1-2 and is at the location_1-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_1 only if the package_0 is in the truck_1. </PRECON> unload package_0 from truck_1 at location_1-3 <EFFECT> Once a package_0 is unloaded from a truck_1, the package_0 is not in the truck_1 and is at the location_1-3 of the truck_1. </EFFECT> \n</PLAN>"}
{"domain": "logistics", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, , , location_3-3 is in the city city_3, truck_1 is at location_1-0, , location_3-2 is in the city city_3, location_4-5 is in the city city_4, location_3-5 is in the city city_3, , , , location_3-1 is in the city city_3, location_0-4 is in the city city_0, , , location_1-5 is in the city city_1, location_2-2 is in the city city_2, , , location_2-1 is in the city city_2, , , location_2-0 is an airport, truck_2 is at location_2-2, location_1-2 is in the city city_1, location_1-1 is in the city city_1, location_4-2 is in the city city_4, , , location_3-0 is in the city city_3, , location_1-3 is in the city city_1, , location_2-3 is in the city city_2, location_0-2 is in the city city_0, location_4-0 is in the city city_4, , location_3-4 is in the city city_3, location_0-0 is an airport, , location_1-4 is in the city city_1, , location_3-0 is an airport, location_1-0 is in the city city_1, location_4-0 is an airport, airplane_0 is at location_1-0, location_0-3 is in the city city_0, , , , location_4-3 is in the city city_4, location_0-0 is in the city city_0, , , , location_4-4 is in the city city_4, location_2-5 is in the city city_2, airplane_1 is at location_1-0, , package_0 is at location_1-1, , location_0-5 is in the city city_0, , , location_1-0 is an airport, , truck_0 is at location_0-3, airplane_2 is at location_3-0, , truck_3 is at location_3-3, , , location_2-0 is in the city city_2, , , , , , location_2-4 is in the city city_2, , , location_4-1 is in the city city_4, , location_0-1 is in the city city_0, , , truck_4 is at location_4-0, .\nMy goal is to have that package_0 is at location_1-2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 3 </COUNT>  <PRECON> A truck_1 can be driven from location_1-0 to location_1-1 if the truck_1 is at the location_1-0 and both location_1-0 and location_1-1 are locations in the same city_1. </PRECON> drive truck_1 from location_1-0 to location_1-1 in city_1 <EFFECT> Once a truck_1 is driven from location_1-0 to location_1-1, it is not at the location_1-0 and is at the location_1-1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_1 only if the package_0 and the truck_1 are in the same location_1-1. </PRECON> load package_0 into truck_1 at location_1-1 <EFFECT> Once a package_0 is loaded into a truck_1, the package_0 is not at the location_1-1 and is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT>  <PRECON> A truck_1 can be driven from location_1-1 to location_1-2 if the truck_1 is at the location_1-1 and both location_1-1 and location_1-2 are locations in the same city_1. </PRECON> drive truck_1 from location_1-1 to location_1-2 in city_1 <EFFECT> Once a truck_1 is driven from location_1-1 to location_1-2, it is not at the location_1-1 and is at the location_1-2. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_1 only if the package_0 is in the truck_1. </PRECON> unload package_0 from truck_1 at location_1-2 <EFFECT> Once a package_0 is unloaded from a truck_1, the package_0 is not in the truck_1 and is at the location_1-2 of the truck_1. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(drive-truck t1 l1-0 l1-1 c1)", "(load-truck p0 t1 l1-1)", "(drive-truck t1 l1-1 l1-2 c1)", "(unload-truck p0 t1 l1-2)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, , , location_3-3 is in the city city_3, truck_1 is at location_1-0, , location_3-2 is in the city city_3, location_4-5 is in the city city_4, location_3-5 is in the city city_3, , , , location_3-1 is in the city city_3, location_0-4 is in the city city_0, , , location_1-5 is in the city city_1, location_2-2 is in the city city_2, , , location_2-1 is in the city city_2, , , location_2-0 is an airport, truck_2 is at location_2-2, location_1-2 is in the city city_1, location_1-1 is in the city city_1, location_4-2 is in the city city_4, , , location_3-0 is in the city city_3, , location_1-3 is in the city city_1, , location_2-3 is in the city city_2, location_0-2 is in the city city_0, location_4-0 is in the city city_4, , location_3-4 is in the city city_3, location_0-0 is an airport, , location_1-4 is in the city city_1, , location_3-0 is an airport, location_1-0 is in the city city_1, location_4-0 is an airport, airplane_0 is at location_1-0, location_0-3 is in the city city_0, , , , location_4-3 is in the city city_4, location_0-0 is in the city city_0, , , , location_4-4 is in the city city_4, location_2-5 is in the city city_2, airplane_1 is at location_1-0, , package_0 is at location_1-1, , location_0-5 is in the city city_0, , , location_1-0 is an airport, , truck_0 is at location_0-3, airplane_2 is at location_3-0, , truck_3 is at location_3-3, , , location_2-0 is in the city city_2, , , , , , location_2-4 is in the city city_2, , , location_4-1 is in the city city_4, , location_0-1 is in the city city_0, , , truck_4 is at location_4-0, .My goal is to have that package_0 is at location_1-2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 3 </COUNT>  <PRECON> A truck_1 can be driven from location_1-0 to location_1-1 if the truck_1 is at the location_1-0 and both location_1-0 and location_1-1 are locations in the same city_1. </PRECON> drive truck_1 from location_1-0 to location_1-1 in city_1 <EFFECT> Once a truck_1 is driven from location_1-0 to location_1-1, it is not at the location_1-0 and is at the location_1-1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_1 only if the package_0 and the truck_1 are in the same location_1-1. </PRECON> load package_0 into truck_1 at location_1-1 <EFFECT> Once a package_0 is loaded into a truck_1, the package_0 is not at the location_1-1 and is in the truck_1. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT>  <PRECON> A truck_1 can be driven from location_1-1 to location_1-2 if the truck_1 is at the location_1-1 and both location_1-1 and location_1-2 are locations in the same city_1. </PRECON> drive truck_1 from location_1-1 to location_1-2 in city_1 <EFFECT> Once a truck_1 is driven from location_1-1 to location_1-2, it is not at the location_1-1 and is at the location_1-2. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_1 only if the package_0 is in the truck_1. </PRECON> unload package_0 from truck_1 at location_1-2 <EFFECT> Once a package_0 is unloaded from a truck_1, the package_0 is not in the truck_1 and is at the location_1-2 of the truck_1. </EFFECT> \n</PLAN>"}
{"domain": "logistics", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, , location_1-5 is in the city city_1, location_0-3 is in the city city_0, location_2-0 is in the city city_2, , location_2-4 is in the city city_2, , , location_0-5 is in the city city_0, , , location_1-1 is in the city city_1, truck_3 is at location_3-5, airplane_0 is at location_4-0, , , location_3-3 is in the city city_3, location_2-2 is in the city city_2, location_4-0 is in the city city_4, location_1-0 is in the city city_1, , location_0-4 is in the city city_0, , , , location_3-0 is in the city city_3, , , , location_4-0 is an airport, , truck_2 is at location_2-5, location_3-1 is in the city city_3, truck_1 is at location_1-0, location_1-4 is in the city city_1, , , location_4-5 is in the city city_4, location_3-2 is in the city city_3, location_4-2 is in the city city_4, , location_4-1 is in the city city_4, , , , package_0 is at location_0-5, , , , , location_1-2 is in the city city_1, , , , location_2-5 is in the city city_2, , airplane_1 is at location_0-0, location_0-2 is in the city city_0, location_0-0 is in the city city_0, , , location_4-3 is in the city city_4, location_2-0 is an airport, , location_0-1 is in the city city_0, location_2-1 is in the city city_2, location_2-3 is in the city city_2, , , , location_1-0 is an airport, location_0-0 is an airport, , , location_1-3 is in the city city_1, , , location_3-4 is in the city city_3, location_4-4 is in the city city_4, , airplane_2 is at location_1-0, truck_4 is at location_4-5, , , truck_0 is at location_0-3, , location_3-5 is in the city city_3, location_3-0 is an airport.\nMy goal is to have that package_0 is at location_0-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT>  <PRECON> A truck_0 can be driven from location_0-3 to location_0-5 if the truck_0 is at the location_0-3 and both location_0-3 and location_0-5 are locations in the same city_0. </PRECON> drive truck_0 from location_0-3 to location_0-5 in city_0 <EFFECT> Once a truck_0 is driven from location_0-3 to location_0-5, it is not at the location_0-3 and is at the location_0-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_0 only if the package_0 and the truck_0 are in the same location_0-5. </PRECON> load package_0 into truck_0 at location_0-5 <EFFECT> Once a package_0 is loaded into a truck_0, the package_0 is not at the location_0-5 and is in the truck_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT>  <PRECON> A truck_0 can be driven from location_0-5 to location_0-3 if the truck_0 is at the location_0-5 and both location_0-5 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-5 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-5 to location_0-3, it is not at the location_0-5 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_0 only if the package_0 is in the truck_0. </PRECON> unload package_0 from truck_0 at location_0-3 <EFFECT> Once a package_0 is unloaded from a truck_0, the package_0 is not in the truck_0 and is at the location_0-3 of the truck_0. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(drive-truck t0 l0-3 l0-5 c0)", "(load-truck p0 t0 l0-5)", "(drive-truck t0 l0-5 l0-3 c0)", "(unload-truck p0 t0 l0-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, , location_1-5 is in the city city_1, location_0-3 is in the city city_0, location_2-0 is in the city city_2, , location_2-4 is in the city city_2, , , location_0-5 is in the city city_0, , , location_1-1 is in the city city_1, truck_3 is at location_3-5, airplane_0 is at location_4-0, , , location_3-3 is in the city city_3, location_2-2 is in the city city_2, location_4-0 is in the city city_4, location_1-0 is in the city city_1, , location_0-4 is in the city city_0, , , , location_3-0 is in the city city_3, , , , location_4-0 is an airport, , truck_2 is at location_2-5, location_3-1 is in the city city_3, truck_1 is at location_1-0, location_1-4 is in the city city_1, , , location_4-5 is in the city city_4, location_3-2 is in the city city_3, location_4-2 is in the city city_4, , location_4-1 is in the city city_4, , , , package_0 is at location_0-5, , , , , location_1-2 is in the city city_1, , , , location_2-5 is in the city city_2, , airplane_1 is at location_0-0, location_0-2 is in the city city_0, location_0-0 is in the city city_0, , , location_4-3 is in the city city_4, location_2-0 is an airport, , location_0-1 is in the city city_0, location_2-1 is in the city city_2, location_2-3 is in the city city_2, , , , location_1-0 is an airport, location_0-0 is an airport, , , location_1-3 is in the city city_1, , , location_3-4 is in the city city_3, location_4-4 is in the city city_4, , airplane_2 is at location_1-0, truck_4 is at location_4-5, , , truck_0 is at location_0-3, , location_3-5 is in the city city_3, location_3-0 is an airport.My goal is to have that package_0 is at location_0-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT>  <PRECON> A truck_0 can be driven from location_0-3 to location_0-5 if the truck_0 is at the location_0-3 and both location_0-3 and location_0-5 are locations in the same city_0. </PRECON> drive truck_0 from location_0-3 to location_0-5 in city_0 <EFFECT> Once a truck_0 is driven from location_0-3 to location_0-5, it is not at the location_0-3 and is at the location_0-5. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT>  <PRECON> A package_0 can be loaded into a truck_0 only if the package_0 and the truck_0 are in the same location_0-5. </PRECON> load package_0 into truck_0 at location_0-5 <EFFECT> Once a package_0 is loaded into a truck_0, the package_0 is not at the location_0-5 and is in the truck_0. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT>  <PRECON> A truck_0 can be driven from location_0-5 to location_0-3 if the truck_0 is at the location_0-5 and both location_0-5 and location_0-3 are locations in the same city_0. </PRECON> drive truck_0 from location_0-5 to location_0-3 in city_0 <EFFECT> Once a truck_0 is driven from location_0-5 to location_0-3, it is not at the location_0-5 and is at the location_0-3. </EFFECT> \n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT>  <PRECON> A package_0 can be unloaded from a truck_0 only if the package_0 is in the truck_0. </PRECON> unload package_0 from truck_0 at location_0-3 <EFFECT> Once a package_0 is unloaded from a truck_0, the package_0 is not in the truck_0 and is at the location_0-3 of the truck_0. </EFFECT> \n</PLAN>"}
{"domain": "satellite", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, the calibration target of instrument_13 is ground_station_3, instrument_5 supports thermograph_mode_0, instrument_11 is on board satellite_4, the calibration target of instrument_8 is star_2, satellite_2 is pointing to star_2, instrument_8 is on board satellite_3, instrument_12 supports thermograph_mode_0, instrument_0 is on board satellite_0, satellite_2 is power-available, the calibration target of instrument_14 is ground_station_3, the calibration target of instrument_3 is ground_station_4, instrument_12 is on board satellite_4, instrument_3 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, the calibration target of instrument_12 is star_1, satellite_1 is power-available, instrument_6 is on board satellite_2, instrument_11 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, satellite_0 is power-available, instrument_13 supports thermograph_mode_0, instrument_1 is on board satellite_1, the calibration target of instrument_2 is star_0, satellite_4 is pointing to planet_5, instrument_13 is on board satellite_5, satellite_5 is power-available, the calibration target of instrument_4 is ground_station_4, the calibration target of instrument_11 is ground_station_3, the calibration target of instrument_5 is star_2, instrument_10 is on board satellite_3, satellite_3 is power-available, instrument_0 supports thermograph_mode_0, instrument_16 is on board satellite_5, satellite_1 is pointing to planet_5, instrument_16 supports thermograph_mode_0, instrument_8 supports thermograph_mode_0, the calibration target of instrument_6 is ground_station_4, the calibration target of instrument_9 is star_1, instrument_15 is on board satellite_5, satellite_3 is pointing to star_0, satellite_0 is pointing to star_0, instrument_5 is on board satellite_2, instrument_2 is on board satellite_1, the calibration target of instrument_16 is star_1, instrument_10 supports thermograph_mode_0, the calibration target of instrument_15 is star_0, instrument_9 is on board satellite_3, satellite_5 is pointing to planet_5, instrument_15 supports thermograph_mode_0, instrument_14 supports thermograph_mode_0, instrument_14 is on board satellite_5, the calibration target of instrument_7 is ground_station_4, instrument_9 supports thermograph_mode_0, satellite_4 is power-available, instrument_2 supports thermograph_mode_0, instrument_7 supports thermograph_mode_0, the calibration target of instrument_10 is star_1, the calibration target of instrument_1 is ground_station_4, instrument_3 is on board satellite_1, instrument_7 is on board satellite_2, instrument_4 supports thermograph_mode_0, instrument_4 is on board satellite_2, the calibration target of instrument_0 is star_0.\nMy goal is to have that planet_5 has image in thermograph_mode_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 4 </COUNT>  <PRECON> An instrument_13 can be switched on on a satellite_5 only if the instrument_13 is on board the satellite_5. An instrument_13 can be switched on on a satellite_5 only if the instrument_13 is power-available. </PRECON> switch on instrument_13 on satellite_5 <EFFECT> Once the instrument_13 is switched on on a satellite_5, the instrument_13 is no longer power-available. Once the instrument_13 is switched on on a satellite_5, the instrument_13 becomes not calibrated. Once the instrument_13 is switched on on a satellite_5, the instrument_13 is power-on. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 3 </COUNT>  <PRECON> A satellite_5 can be turned from a previous planet_5 to a new ground_station_3 only if the satellite_5 is currently pointing to the previous planet_5. </PRECON> turn satellite_5 from ground_station_3 to planet_5 <EFFECT> Once the satellite_5 is turned to a new ground_station_3, the satellite_5 is no longer pointing to the previous planet_5 but is pointing to the new ground_station_3. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 2 </COUNT>  <PRECON> An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is pointing to the calibration target ground_station_3. An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is power-on. An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is on board the satellite_5. </PRECON> calibrate instrument_13 on satellite_5 pointing to calibration target ground_station_3 <EFFECT> Once the instrument_13 is calibrated on a satellite_5, the instrument_13 is calibrated. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 1 </COUNT>  <PRECON> A satellite_5 can be turned from a previous ground_station_3 to a new planet_5 only if the satellite_5 is currently pointing to the previous ground_station_3. </PRECON> turn satellite_5 from planet_5 to ground_station_3 <EFFECT> Once the satellite_5 is turned to a new planet_5, the satellite_5 is no longer pointing to the previous ground_station_3 but is pointing to the new planet_5. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 0 </COUNT>  <PRECON> An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is calibrated. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 supports the thermograph_mode_0. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the satellite_5 is pointing to the direction planet_5. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is on board the satellite_5. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is power-on. </PRECON> take image of planet_5 using instrument_13 on satellite_5 with thermograph_mode_0 <EFFECT> Once an image of a direction planet_5 with a specific thermograph_mode_0 is taken using an instrument_13 on a satellite_5, we will have the image. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument13 satellite5)", "(turn_to satellite5 groundstation3 planet5)", "(calibrate satellite5 instrument13 groundstation3)", "(turn_to satellite5 planet5 groundstation3)", "(take_image satellite5 planet5 instrument13 thermograph0)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, the calibration target of instrument_13 is ground_station_3, instrument_5 supports thermograph_mode_0, instrument_11 is on board satellite_4, the calibration target of instrument_8 is star_2, satellite_2 is pointing to star_2, instrument_8 is on board satellite_3, instrument_12 supports thermograph_mode_0, instrument_0 is on board satellite_0, satellite_2 is power-available, the calibration target of instrument_14 is ground_station_3, the calibration target of instrument_3 is ground_station_4, instrument_12 is on board satellite_4, instrument_3 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, the calibration target of instrument_12 is star_1, satellite_1 is power-available, instrument_6 is on board satellite_2, instrument_11 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, satellite_0 is power-available, instrument_13 supports thermograph_mode_0, instrument_1 is on board satellite_1, the calibration target of instrument_2 is star_0, satellite_4 is pointing to planet_5, instrument_13 is on board satellite_5, satellite_5 is power-available, the calibration target of instrument_4 is ground_station_4, the calibration target of instrument_11 is ground_station_3, the calibration target of instrument_5 is star_2, instrument_10 is on board satellite_3, satellite_3 is power-available, instrument_0 supports thermograph_mode_0, instrument_16 is on board satellite_5, satellite_1 is pointing to planet_5, instrument_16 supports thermograph_mode_0, instrument_8 supports thermograph_mode_0, the calibration target of instrument_6 is ground_station_4, the calibration target of instrument_9 is star_1, instrument_15 is on board satellite_5, satellite_3 is pointing to star_0, satellite_0 is pointing to star_0, instrument_5 is on board satellite_2, instrument_2 is on board satellite_1, the calibration target of instrument_16 is star_1, instrument_10 supports thermograph_mode_0, the calibration target of instrument_15 is star_0, instrument_9 is on board satellite_3, satellite_5 is pointing to planet_5, instrument_15 supports thermograph_mode_0, instrument_14 supports thermograph_mode_0, instrument_14 is on board satellite_5, the calibration target of instrument_7 is ground_station_4, instrument_9 supports thermograph_mode_0, satellite_4 is power-available, instrument_2 supports thermograph_mode_0, instrument_7 supports thermograph_mode_0, the calibration target of instrument_10 is star_1, the calibration target of instrument_1 is ground_station_4, instrument_3 is on board satellite_1, instrument_7 is on board satellite_2, instrument_4 supports thermograph_mode_0, instrument_4 is on board satellite_2, the calibration target of instrument_0 is star_0.My goal is to have that planet_5 has image in thermograph_mode_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 4 </COUNT>  <PRECON> An instrument_13 can be switched on on a satellite_5 only if the instrument_13 is on board the satellite_5. An instrument_13 can be switched on on a satellite_5 only if the instrument_13 is power-available. </PRECON> switch on instrument_13 on satellite_5 <EFFECT> Once the instrument_13 is switched on on a satellite_5, the instrument_13 is no longer power-available. Once the instrument_13 is switched on on a satellite_5, the instrument_13 becomes not calibrated. Once the instrument_13 is switched on on a satellite_5, the instrument_13 is power-on. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 3 </COUNT>  <PRECON> A satellite_5 can be turned from a previous planet_5 to a new ground_station_3 only if the satellite_5 is currently pointing to the previous planet_5. </PRECON> turn satellite_5 from ground_station_3 to planet_5 <EFFECT> Once the satellite_5 is turned to a new ground_station_3, the satellite_5 is no longer pointing to the previous planet_5 but is pointing to the new ground_station_3. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 2 </COUNT>  <PRECON> An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is pointing to the calibration target ground_station_3. An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is power-on. An instrument_13 can be calibrated on a satellite_5 only if the instrument_13 is on board the satellite_5. </PRECON> calibrate instrument_13 on satellite_5 pointing to calibration target ground_station_3 <EFFECT> Once the instrument_13 is calibrated on a satellite_5, the instrument_13 is calibrated. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 1 </COUNT>  <PRECON> A satellite_5 can be turned from a previous ground_station_3 to a new planet_5 only if the satellite_5 is currently pointing to the previous ground_station_3. </PRECON> turn satellite_5 from planet_5 to ground_station_3 <EFFECT> Once the satellite_5 is turned to a new planet_5, the satellite_5 is no longer pointing to the previous ground_station_3 but is pointing to the new planet_5. </EFFECT> \n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 0 </COUNT>  <PRECON> An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is calibrated. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 supports the thermograph_mode_0. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the satellite_5 is pointing to the direction planet_5. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is on board the satellite_5. An image of a direction planet_5 with a specific thermograph_mode_0 can be taken using an instrument_13 on a satellite_5 only if the instrument_13 is power-on. </PRECON> take image of planet_5 using instrument_13 on satellite_5 with thermograph_mode_0 <EFFECT> Once an image of a direction planet_5 with a specific thermograph_mode_0 is taken using an instrument_13 on a satellite_5, we will have the image. </EFFECT> \n</PLAN>"}
{"domain": "satellite", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, instrument_11 supports thermograph_mode_2, instrument_3 is on board satellite_0, instrument_5 supports thermograph_mode_2, instrument_11 supports infrared_mode_0, instrument_2 supports spectrograph_mode_1, the calibration target of instrument_5 is star_0, satellite_2 is power-available, the calibration target of instrument_8 is star_1, instrument_7 is on board satellite_1, satellite_0 is power-available, instrument_0 supports thermograph_mode_2, instrument_7 supports spectrograph_mode_1, instrument_5 is on board satellite_1, satellite_2 is pointing to star_1, the calibration target of instrument_1 is star_1, the calibration target of instrument_10 is star_1, the calibration target of instrument_6 is star_0, instrument_8 is on board satellite_1, instrument_9 supports infrared_mode_0, instrument_8 supports thermograph_mode_2, instrument_4 is on board satellite_1, instrument_6 supports spectrograph_mode_1, instrument_9 supports thermograph_mode_2, instrument_11 supports spectrograph_mode_1, the calibration target of instrument_12 is star_1, instrument_1 is on board satellite_0, instrument_6 is on board satellite_1, the calibration target of instrument_9 is star_1, instrument_6 supports infrared_mode_0, the calibration target of instrument_0 is star_1, instrument_10 supports spectrograph_mode_1, instrument_2 supports infrared_mode_0, instrument_0 is on board satellite_0, the calibration target of instrument_3 is star_0, satellite_1 is power-available, the calibration target of instrument_7 is star_1, instrument_10 supports infrared_mode_0, instrument_10 is on board satellite_2, instrument_4 supports thermograph_mode_2, the calibration target of instrument_4 is star_0, instrument_12 is on board satellite_2, satellite_1 is pointing to star_2, instrument_4 supports infrared_mode_0, instrument_7 supports infrared_mode_0, instrument_3 supports infrared_mode_0, instrument_2 is on board satellite_0, the calibration target of instrument_11 is star_1, satellite_0 is pointing to star_2, instrument_5 supports spectrograph_mode_1, instrument_8 supports spectrograph_mode_1, instrument_12 supports spectrograph_mode_1, instrument_11 is on board satellite_2, the calibration target of instrument_2 is star_1, instrument_1 supports spectrograph_mode_1, instrument_12 supports infrared_mode_0, instrument_3 supports spectrograph_mode_1, instrument_9 is on board satellite_1, instrument_7 supports thermograph_mode_2, instrument_8 supports infrared_mode_0.\nMy goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 4 </COUNT>  <PRECON> An instrument_10 can be switched on on a satellite_2 only if the instrument_10 is on board the satellite_2. An instrument_10 can be switched on on a satellite_2 only if the instrument_10 is power-available. </PRECON> switch on instrument_10 on satellite_2 <EFFECT> Once the instrument_10 is switched on on a satellite_2, the instrument_10 is power-on. Once the instrument_10 is switched on on a satellite_2, the instrument_10 becomes not calibrated. Once the instrument_10 is switched on on a satellite_2, the instrument_10 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is on board the satellite_2. An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is power-on. An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is pointing to the calibration target star_1. </PRECON> calibrate instrument_10 on satellite_2 pointing to calibration target star_1 <EFFECT> Once the instrument_10 is calibrated on a satellite_2, the instrument_10 is calibrated. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> A satellite_2 can be turned from a previous star_1 to a new star_2 only if the satellite_2 is currently pointing to the previous star_1. </PRECON> turn satellite_2 from star_2 to star_1 <EFFECT> Once the satellite_2 is turned to a new star_2, the satellite_2 is no longer pointing to the previous star_1 but is pointing to the new star_2. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the satellite_2 is pointing to the direction star_2. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is calibrated. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is power-on. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 supports the infrared_mode_0. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is on board the satellite_2. </PRECON> take image of star_2 using instrument_10 on satellite_2 with infrared_mode_0 <EFFECT> Once an image of a direction star_2 with a specific infrared_mode_0 is taken using an instrument_10 on a satellite_2, we will have the image. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_2 to a new star_1 only if the satellite_0 is currently pointing to the previous star_2. </PRECON> turn satellite_0 from star_1 to star_2 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_2 but is pointing to the new star_1. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument10 satellite2)", "(calibrate satellite2 instrument10 star1)", "(turn_to satellite2 star2 star1)", "(take_image satellite2 star2 instrument10 infrared0)", "(turn_to satellite0 star1 star2)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, instrument_11 supports thermograph_mode_2, instrument_3 is on board satellite_0, instrument_5 supports thermograph_mode_2, instrument_11 supports infrared_mode_0, instrument_2 supports spectrograph_mode_1, the calibration target of instrument_5 is star_0, satellite_2 is power-available, the calibration target of instrument_8 is star_1, instrument_7 is on board satellite_1, satellite_0 is power-available, instrument_0 supports thermograph_mode_2, instrument_7 supports spectrograph_mode_1, instrument_5 is on board satellite_1, satellite_2 is pointing to star_1, the calibration target of instrument_1 is star_1, the calibration target of instrument_10 is star_1, the calibration target of instrument_6 is star_0, instrument_8 is on board satellite_1, instrument_9 supports infrared_mode_0, instrument_8 supports thermograph_mode_2, instrument_4 is on board satellite_1, instrument_6 supports spectrograph_mode_1, instrument_9 supports thermograph_mode_2, instrument_11 supports spectrograph_mode_1, the calibration target of instrument_12 is star_1, instrument_1 is on board satellite_0, instrument_6 is on board satellite_1, the calibration target of instrument_9 is star_1, instrument_6 supports infrared_mode_0, the calibration target of instrument_0 is star_1, instrument_10 supports spectrograph_mode_1, instrument_2 supports infrared_mode_0, instrument_0 is on board satellite_0, the calibration target of instrument_3 is star_0, satellite_1 is power-available, the calibration target of instrument_7 is star_1, instrument_10 supports infrared_mode_0, instrument_10 is on board satellite_2, instrument_4 supports thermograph_mode_2, the calibration target of instrument_4 is star_0, instrument_12 is on board satellite_2, satellite_1 is pointing to star_2, instrument_4 supports infrared_mode_0, instrument_7 supports infrared_mode_0, instrument_3 supports infrared_mode_0, instrument_2 is on board satellite_0, the calibration target of instrument_11 is star_1, satellite_0 is pointing to star_2, instrument_5 supports spectrograph_mode_1, instrument_8 supports spectrograph_mode_1, instrument_12 supports spectrograph_mode_1, instrument_11 is on board satellite_2, the calibration target of instrument_2 is star_1, instrument_1 supports spectrograph_mode_1, instrument_12 supports infrared_mode_0, instrument_3 supports spectrograph_mode_1, instrument_9 is on board satellite_1, instrument_7 supports thermograph_mode_2, instrument_8 supports infrared_mode_0.My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 4 </COUNT>  <PRECON> An instrument_10 can be switched on on a satellite_2 only if the instrument_10 is on board the satellite_2. An instrument_10 can be switched on on a satellite_2 only if the instrument_10 is power-available. </PRECON> switch on instrument_10 on satellite_2 <EFFECT> Once the instrument_10 is switched on on a satellite_2, the instrument_10 is power-on. Once the instrument_10 is switched on on a satellite_2, the instrument_10 becomes not calibrated. Once the instrument_10 is switched on on a satellite_2, the instrument_10 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is on board the satellite_2. An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is power-on. An instrument_10 can be calibrated on a satellite_2 only if the instrument_10 is pointing to the calibration target star_1. </PRECON> calibrate instrument_10 on satellite_2 pointing to calibration target star_1 <EFFECT> Once the instrument_10 is calibrated on a satellite_2, the instrument_10 is calibrated. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> A satellite_2 can be turned from a previous star_1 to a new star_2 only if the satellite_2 is currently pointing to the previous star_1. </PRECON> turn satellite_2 from star_2 to star_1 <EFFECT> Once the satellite_2 is turned to a new star_2, the satellite_2 is no longer pointing to the previous star_1 but is pointing to the new star_2. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the satellite_2 is pointing to the direction star_2. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is calibrated. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is power-on. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 supports the infrared_mode_0. An image of a direction star_2 with a specific infrared_mode_0 can be taken using an instrument_10 on a satellite_2 only if the instrument_10 is on board the satellite_2. </PRECON> take image of star_2 using instrument_10 on satellite_2 with infrared_mode_0 <EFFECT> Once an image of a direction star_2 with a specific infrared_mode_0 is taken using an instrument_10 on a satellite_2, we will have the image. </EFFECT> \n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_2 to a new star_1 only if the satellite_0 is currently pointing to the previous star_2. </PRECON> turn satellite_0 from star_1 to star_2 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_2 but is pointing to the new star_1. </EFFECT> \n</PLAN>"}
{"domain": "satellite", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, satellite_0 is pointing to star_0, instrument_0 is on board satellite_0, instrument_2 is on board satellite_1, satellite_1 is power-available, instrument_0 supports infrared_mode_2, the calibration target of instrument_2 is star_0, instrument_1 is on board satellite_0, instrument_1 supports infrared_mode_1, instrument_1 supports infrared_mode_2, instrument_2 supports infrared_mode_1, the calibration target of instrument_1 is star_0, instrument_0 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, satellite_1 is pointing to star_0, the calibration target of instrument_0 is star_0, satellite_0 is power-available.\nMy goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 4 </COUNT>  <PRECON> An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is on board the satellite_0. An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is power-available. </PRECON> switch on instrument_0 on satellite_0 <EFFECT> Once the instrument_0 is switched on on a satellite_0, the instrument_0 is power-on. Once the instrument_0 is switched on on a satellite_0, the instrument_0 is no longer power-available. Once the instrument_0 is switched on on a satellite_0, the instrument_0 becomes not calibrated. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is pointing to the calibration target star_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is on board the satellite_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is power-on. </PRECON> calibrate instrument_0 on satellite_0 pointing to calibration target star_0 <EFFECT> Once the instrument_0 is calibrated on a satellite_0, the instrument_0 is calibrated. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> A satellite_1 can be turned from a previous star_0 to a new star_1 only if the satellite_1 is currently pointing to the previous star_0. </PRECON> turn satellite_1 from star_1 to star_0 <EFFECT> Once the satellite_1 is turned to a new star_1, the satellite_1 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_0 to a new star_1 only if the satellite_0 is currently pointing to the previous star_0. </PRECON> turn satellite_0 from star_1 to star_0 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is on board the satellite_0. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the satellite_0 is pointing to the direction star_1. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is power-on. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 supports the thermograph_mode_0. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is calibrated. </PRECON> take image of star_1 using instrument_0 on satellite_0 with thermograph_mode_0 <EFFECT> Once an image of a direction star_1 with a specific thermograph_mode_0 is taken using an instrument_0 on a satellite_0, we will have the image. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument0 satellite0)", "(calibrate satellite0 instrument0 star0)", "(turn_to satellite1 star1 star0)", "(turn_to satellite0 star1 star0)", "(take_image satellite0 star1 instrument0 thermograph0)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, satellite_0 is pointing to star_0, instrument_0 is on board satellite_0, instrument_2 is on board satellite_1, satellite_1 is power-available, instrument_0 supports infrared_mode_2, the calibration target of instrument_2 is star_0, instrument_1 is on board satellite_0, instrument_1 supports infrared_mode_1, instrument_1 supports infrared_mode_2, instrument_2 supports infrared_mode_1, the calibration target of instrument_1 is star_0, instrument_0 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, satellite_1 is pointing to star_0, the calibration target of instrument_0 is star_0, satellite_0 is power-available.My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 4 </COUNT>  <PRECON> An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is on board the satellite_0. An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is power-available. </PRECON> switch on instrument_0 on satellite_0 <EFFECT> Once the instrument_0 is switched on on a satellite_0, the instrument_0 is power-on. Once the instrument_0 is switched on on a satellite_0, the instrument_0 is no longer power-available. Once the instrument_0 is switched on on a satellite_0, the instrument_0 becomes not calibrated. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is pointing to the calibration target star_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is on board the satellite_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is power-on. </PRECON> calibrate instrument_0 on satellite_0 pointing to calibration target star_0 <EFFECT> Once the instrument_0 is calibrated on a satellite_0, the instrument_0 is calibrated. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> A satellite_1 can be turned from a previous star_0 to a new star_1 only if the satellite_1 is currently pointing to the previous star_0. </PRECON> turn satellite_1 from star_1 to star_0 <EFFECT> Once the satellite_1 is turned to a new star_1, the satellite_1 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_0 to a new star_1 only if the satellite_0 is currently pointing to the previous star_0. </PRECON> turn satellite_0 from star_1 to star_0 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that star_1 has image in thermograph_mode_0, satellite_1 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is on board the satellite_0. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the satellite_0 is pointing to the direction star_1. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is power-on. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 supports the thermograph_mode_0. An image of a direction star_1 with a specific thermograph_mode_0 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is calibrated. </PRECON> take image of star_1 using instrument_0 on satellite_0 with thermograph_mode_0 <EFFECT> Once an image of a direction star_1 with a specific thermograph_mode_0 is taken using an instrument_0 on a satellite_0, we will have the image. </EFFECT> \n</PLAN>"}
{"domain": "satellite", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, satellite_1 is pointing to star_0, instrument_1 supports spectrograph_mode_0, instrument_0 supports infrared_mode_1, instrument_5 supports spectrograph_mode_2, instrument_1 is on board satellite_0, satellite_3 is pointing to star_1, satellite_1 is power-available, the calibration target of instrument_1 is star_0, instrument_5 supports infrared_mode_1, the calibration target of instrument_5 is star_0, instrument_0 supports spectrograph_mode_0, satellite_0 is power-available, satellite_2 is power-available, instrument_2 supports spectrograph_mode_2, instrument_2 supports infrared_mode_1, satellite_0 is pointing to star_0, satellite_3 is power-available, instrument_0 is on board satellite_0, instrument_1 supports infrared_mode_1, instrument_2 is on board satellite_1, instrument_4 supports infrared_mode_1, satellite_2 is pointing to star_1, instrument_5 is on board satellite_3, instrument_1 supports spectrograph_mode_2, instrument_2 supports spectrograph_mode_0, the calibration target of instrument_4 is star_0, instrument_3 is on board satellite_2, instrument_5 supports spectrograph_mode_0, the calibration target of instrument_2 is star_0, the calibration target of instrument_0 is star_0, instrument_4 is on board satellite_3, the calibration target of instrument_3 is star_0, instrument_4 supports spectrograph_mode_0, instrument_3 supports spectrograph_mode_0.\nMy goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is power-available. An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is on board the satellite_0. </PRECON> switch on instrument_0 on satellite_0 <EFFECT> Once the instrument_0 is switched on on a satellite_0, the instrument_0 is power-on. Once the instrument_0 is switched on on a satellite_0, the instrument_0 becomes not calibrated. Once the instrument_0 is switched on on a satellite_0, the instrument_0 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is power-on. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is pointing to the calibration target star_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is on board the satellite_0. </PRECON> calibrate instrument_0 on satellite_0 pointing to calibration target star_0 <EFFECT> Once the instrument_0 is calibrated on a satellite_0, the instrument_0 is calibrated. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_0 to a new star_1 only if the satellite_0 is currently pointing to the previous star_0. </PRECON> turn satellite_0 from star_1 to star_0 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is calibrated. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is power-on. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 supports the infrared_mode_1. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is on board the satellite_0. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the satellite_0 is pointing to the direction star_1. </PRECON> take image of star_1 using instrument_0 on satellite_0 with infrared_mode_1 <EFFECT> Once an image of a direction star_1 with a specific infrared_mode_1 is taken using an instrument_0 on a satellite_0, we will have the image. </EFFECT> \n</PLAN>", "plan_length": 4, "raw_plan": ["(switch_on instrument0 satellite0)", "(calibrate satellite0 instrument0 star0)", "(turn_to satellite0 star1 star0)", "(take_image satellite0 star1 instrument0 infrared1)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, satellite_1 is pointing to star_0, instrument_1 supports spectrograph_mode_0, instrument_0 supports infrared_mode_1, instrument_5 supports spectrograph_mode_2, instrument_1 is on board satellite_0, satellite_3 is pointing to star_1, satellite_1 is power-available, the calibration target of instrument_1 is star_0, instrument_5 supports infrared_mode_1, the calibration target of instrument_5 is star_0, instrument_0 supports spectrograph_mode_0, satellite_0 is power-available, satellite_2 is power-available, instrument_2 supports spectrograph_mode_2, instrument_2 supports infrared_mode_1, satellite_0 is pointing to star_0, satellite_3 is power-available, instrument_0 is on board satellite_0, instrument_1 supports infrared_mode_1, instrument_2 is on board satellite_1, instrument_4 supports infrared_mode_1, satellite_2 is pointing to star_1, instrument_5 is on board satellite_3, instrument_1 supports spectrograph_mode_2, instrument_2 supports spectrograph_mode_0, the calibration target of instrument_4 is star_0, instrument_3 is on board satellite_2, instrument_5 supports spectrograph_mode_0, the calibration target of instrument_2 is star_0, the calibration target of instrument_0 is star_0, instrument_4 is on board satellite_3, the calibration target of instrument_3 is star_0, instrument_4 supports spectrograph_mode_0, instrument_3 supports spectrograph_mode_0.My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT>  <PRECON> An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is power-available. An instrument_0 can be switched on on a satellite_0 only if the instrument_0 is on board the satellite_0. </PRECON> switch on instrument_0 on satellite_0 <EFFECT> Once the instrument_0 is switched on on a satellite_0, the instrument_0 is power-on. Once the instrument_0 is switched on on a satellite_0, the instrument_0 becomes not calibrated. Once the instrument_0 is switched on on a satellite_0, the instrument_0 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT>  <PRECON> An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is power-on. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is pointing to the calibration target star_0. An instrument_0 can be calibrated on a satellite_0 only if the instrument_0 is on board the satellite_0. </PRECON> calibrate instrument_0 on satellite_0 pointing to calibration target star_0 <EFFECT> Once the instrument_0 is calibrated on a satellite_0, the instrument_0 is calibrated. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_0 to a new star_1 only if the satellite_0 is currently pointing to the previous star_0. </PRECON> turn satellite_0 from star_1 to star_0 <EFFECT> Once the satellite_0 is turned to a new star_1, the satellite_0 is no longer pointing to the previous star_0 but is pointing to the new star_1. </EFFECT> \n <GOAL> My goal is to have that satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_2 is pointing to star_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT>  <PRECON> An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is calibrated. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is power-on. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 supports the infrared_mode_1. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the instrument_0 is on board the satellite_0. An image of a direction star_1 with a specific infrared_mode_1 can be taken using an instrument_0 on a satellite_0 only if the satellite_0 is pointing to the direction star_1. </PRECON> take image of star_1 using instrument_0 on satellite_0 with infrared_mode_1 <EFFECT> Once an image of a direction star_1 with a specific infrared_mode_1 is taken using an instrument_0 on a satellite_0, we will have the image. </EFFECT> \n</PLAN>"}
{"domain": "satellite", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, instrument_0 supports thermograph_mode_0, instrument_10 supports infrared_mode_1, instrument_1 supports thermograph_mode_0, the calibration target of instrument_8 is star_0, instrument_0 supports infrared_mode_1, instrument_9 supports infrared_mode_1, instrument_7 supports image_mode_2, the calibration target of instrument_6 is ground_station_1, instrument_1 is on board satellite_1, instrument_1 supports image_mode_2, instrument_0 is on board satellite_0, instrument_5 supports thermograph_mode_3, the calibration target of instrument_3 is ground_station_1, satellite_1 is pointing to star_2, instrument_10 supports image_mode_2, satellite_0 is pointing to star_2, the calibration target of instrument_2 is ground_station_1, satellite_0 is power-available, instrument_3 supports image_mode_2, instrument_1 supports infrared_mode_1, the calibration target of instrument_0 is ground_station_1, instrument_3 is on board satellite_1, the calibration target of instrument_5 is star_0, instrument_9 supports thermograph_mode_3, instrument_7 is on board satellite_2, instrument_2 is on board satellite_1, satellite_2 is pointing to ground_station_1, instrument_5 is on board satellite_1, instrument_9 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, instrument_8 is on board satellite_2, the calibration target of instrument_9 is star_0, instrument_6 supports infrared_mode_1, instrument_4 supports image_mode_2, the calibration target of instrument_7 is ground_station_1, instrument_3 supports thermograph_mode_0, instrument_10 supports thermograph_mode_0, the calibration target of instrument_1 is star_0, satellite_2 is power-available, instrument_2 supports image_mode_2, instrument_6 is on board satellite_2, satellite_3 is power-available, instrument_4 is on board satellite_1, the calibration target of instrument_10 is star_0, instrument_8 supports thermograph_mode_0, instrument_9 is on board satellite_2, satellite_3 is pointing to ground_station_1, instrument_10 is on board satellite_3, satellite_1 is power-available, instrument_2 supports thermograph_mode_0, the calibration target of instrument_4 is ground_station_1, instrument_7 supports thermograph_mode_3, instrument_6 supports image_mode_2.\nMy goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 4 </COUNT>  <PRECON> An instrument_6 can be switched on on a satellite_2 only if the instrument_6 is power-available. An instrument_6 can be switched on on a satellite_2 only if the instrument_6 is on board the satellite_2. </PRECON> switch on instrument_6 on satellite_2 <EFFECT> Once the instrument_6 is switched on on a satellite_2, the instrument_6 becomes not calibrated. Once the instrument_6 is switched on on a satellite_2, the instrument_6 is power-on. Once the instrument_6 is switched on on a satellite_2, the instrument_6 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 3 </COUNT>  <PRECON> An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is pointing to the calibration target ground_station_1. An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is on board the satellite_2. An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is power-on. </PRECON> calibrate instrument_6 on satellite_2 pointing to calibration target ground_station_1 <EFFECT> Once the instrument_6 is calibrated on a satellite_2, the instrument_6 is calibrated. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 2 </COUNT>  <PRECON> A satellite_2 can be turned from a previous ground_station_1 to a new star_2 only if the satellite_2 is currently pointing to the previous ground_station_1. </PRECON> turn satellite_2 from star_2 to ground_station_1 <EFFECT> Once the satellite_2 is turned to a new star_2, the satellite_2 is no longer pointing to the previous ground_station_1 but is pointing to the new star_2. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT>  <PRECON> An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 supports the image_mode_2. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the satellite_2 is pointing to the direction star_2. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is calibrated. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is power-on. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is on board the satellite_2. </PRECON> take image of star_2 using instrument_6 on satellite_2 with image_mode_2 <EFFECT> Once an image of a direction star_2 with a specific image_mode_2 is taken using an instrument_6 on a satellite_2, we will have the image. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 0 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_2 to a new star_0 only if the satellite_0 is currently pointing to the previous star_2. </PRECON> turn satellite_0 from star_0 to star_2 <EFFECT> Once the satellite_0 is turned to a new star_0, the satellite_0 is no longer pointing to the previous star_2 but is pointing to the new star_0. </EFFECT> \n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument6 satellite2)", "(calibrate satellite2 instrument6 groundstation1)", "(turn_to satellite2 star2 groundstation1)", "(take_image satellite2 star2 instrument6 image2)", "(turn_to satellite0 star0 star2)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, instrument_0 supports thermograph_mode_0, instrument_10 supports infrared_mode_1, instrument_1 supports thermograph_mode_0, the calibration target of instrument_8 is star_0, instrument_0 supports infrared_mode_1, instrument_9 supports infrared_mode_1, instrument_7 supports image_mode_2, the calibration target of instrument_6 is ground_station_1, instrument_1 is on board satellite_1, instrument_1 supports image_mode_2, instrument_0 is on board satellite_0, instrument_5 supports thermograph_mode_3, the calibration target of instrument_3 is ground_station_1, satellite_1 is pointing to star_2, instrument_10 supports image_mode_2, satellite_0 is pointing to star_2, the calibration target of instrument_2 is ground_station_1, satellite_0 is power-available, instrument_3 supports image_mode_2, instrument_1 supports infrared_mode_1, the calibration target of instrument_0 is ground_station_1, instrument_3 is on board satellite_1, the calibration target of instrument_5 is star_0, instrument_9 supports thermograph_mode_3, instrument_7 is on board satellite_2, instrument_2 is on board satellite_1, satellite_2 is pointing to ground_station_1, instrument_5 is on board satellite_1, instrument_9 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, instrument_8 is on board satellite_2, the calibration target of instrument_9 is star_0, instrument_6 supports infrared_mode_1, instrument_4 supports image_mode_2, the calibration target of instrument_7 is ground_station_1, instrument_3 supports thermograph_mode_0, instrument_10 supports thermograph_mode_0, the calibration target of instrument_1 is star_0, satellite_2 is power-available, instrument_2 supports image_mode_2, instrument_6 is on board satellite_2, satellite_3 is power-available, instrument_4 is on board satellite_1, the calibration target of instrument_10 is star_0, instrument_8 supports thermograph_mode_0, instrument_9 is on board satellite_2, satellite_3 is pointing to ground_station_1, instrument_10 is on board satellite_3, satellite_1 is power-available, instrument_2 supports thermograph_mode_0, the calibration target of instrument_4 is ground_station_1, instrument_7 supports thermograph_mode_3, instrument_6 supports image_mode_2.My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 4 </COUNT>  <PRECON> An instrument_6 can be switched on on a satellite_2 only if the instrument_6 is power-available. An instrument_6 can be switched on on a satellite_2 only if the instrument_6 is on board the satellite_2. </PRECON> switch on instrument_6 on satellite_2 <EFFECT> Once the instrument_6 is switched on on a satellite_2, the instrument_6 becomes not calibrated. Once the instrument_6 is switched on on a satellite_2, the instrument_6 is power-on. Once the instrument_6 is switched on on a satellite_2, the instrument_6 is no longer power-available. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 3 </COUNT>  <PRECON> An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is pointing to the calibration target ground_station_1. An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is on board the satellite_2. An instrument_6 can be calibrated on a satellite_2 only if the instrument_6 is power-on. </PRECON> calibrate instrument_6 on satellite_2 pointing to calibration target ground_station_1 <EFFECT> Once the instrument_6 is calibrated on a satellite_2, the instrument_6 is calibrated. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 2 </COUNT>  <PRECON> A satellite_2 can be turned from a previous ground_station_1 to a new star_2 only if the satellite_2 is currently pointing to the previous ground_station_1. </PRECON> turn satellite_2 from star_2 to ground_station_1 <EFFECT> Once the satellite_2 is turned to a new star_2, the satellite_2 is no longer pointing to the previous ground_station_1 but is pointing to the new star_2. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT>  <PRECON> An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 supports the image_mode_2. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the satellite_2 is pointing to the direction star_2. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is calibrated. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is power-on. An image of a direction star_2 with a specific image_mode_2 can be taken using an instrument_6 on a satellite_2 only if the instrument_6 is on board the satellite_2. </PRECON> take image of star_2 using instrument_6 on satellite_2 with image_mode_2 <EFFECT> Once an image of a direction star_2 with a specific image_mode_2 is taken using an instrument_6 on a satellite_2, we will have the image. </EFFECT> \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 0 </COUNT>  <PRECON> A satellite_0 can be turned from a previous star_2 to a new star_0 only if the satellite_0 is currently pointing to the previous star_2. </PRECON> turn satellite_0 from star_0 to star_2 <EFFECT> Once the satellite_0 is turned to a new star_0, the satellite_0 is no longer pointing to the previous star_2 but is pointing to the new star_0. </EFFECT> \n</PLAN>"}
