{"domain": "barman", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shot_155 is on the table, dispenser_348 dispenses ingredient_214, level_2 is the next level after level_1, shot_156 is empty, shot_193 is clean, shot_156 is on the table, shaker_63's fill level is at level_0, dispenser_127 dispenses ingredient_363, shaker_63 is on the table, shot_193 is empty, shot_155 is clean, shot_156 is clean, shaker_63 is clean, shaker_63's zero fill level is at level_0, cocktail_292 has ingredient_363 as its first ingredient, level_1 is the next level after level_0, shaker_63 is empty, shot_193 is on the table, left_hand is empty, right_hand is empty, shot_155 is empty, cocktail_292 has ingredient_214 as its second ingredient.\nMy goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 14 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 13 </COUNT> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty WRONG \n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 13 </COUNT> grasp the shot_193 using right_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 12 </COUNT> leave the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 11 </COUNT> fill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 10 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 9 </COUNT> pour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 8 </COUNT> leave the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 7 </COUNT> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 6 </COUNT> fill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 5 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 4 </COUNT> pour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 3 </COUNT> leave the shot_193 using right_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 2 </COUNT> shake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 0 </COUNT> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0 WRONG \n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 1 </COUNT> pour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 0 </COUNT> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0\n</PLAN>", "plan_length": 15, "raw_plan": ["(grasp left shaker63)", "(grasp right shot193)", "(leave left shaker63)", "(fill-shot shot193 ingredient214 right left dispenser348)", "(grasp left shaker63)", "(pour-shot-to-clean-shaker shot193 ingredient214 shaker63 right l0 l1)", "(leave left shaker63)", "(clean-shot shot193 ingredient214 right left)", "(fill-shot shot193 ingredient363 right left dispenser127)", "(grasp left shaker63)", "(pour-shot-to-used-shaker shot193 ingredient363 shaker63 right l1 l2)", "(leave right shot193)", "(shake cocktail292 ingredient363 ingredient214 shaker63 left right)", "(pour-shaker-to-shot cocktail292 shot155 left shaker63 l2 l1)", "(pour-shaker-to-shot cocktail292 shot156 left shaker63 l1 l0)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shot_155 is on the table, dispenser_348 dispenses ingredient_214, level_2 is the next level after level_1, shot_156 is empty, shot_193 is clean, shot_156 is on the table, shaker_63's fill level is at level_0, dispenser_127 dispenses ingredient_363, shaker_63 is on the table, shot_193 is empty, shot_155 is clean, shot_156 is clean, shaker_63 is clean, shaker_63's zero fill level is at level_0, cocktail_292 has ingredient_363 as its first ingredient, level_1 is the next level after level_0, shaker_63 is empty, shot_193 is on the table, left_hand is empty, right_hand is empty, shot_155 is empty, cocktail_292 has ingredient_214 as its second ingredient.My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 14 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 13 </COUNT> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty WRONG \n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 13 </COUNT> grasp the shot_193 using right_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 12 </COUNT> leave the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 11 </COUNT> fill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 10 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 9 </COUNT> pour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 8 </COUNT> leave the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 7 </COUNT> clean the shot_193 on right_hand used for ingredient_214 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 6 </COUNT> fill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 5 </COUNT> grasp the shaker_63 using left_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 4 </COUNT> pour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 3 </COUNT> leave the shot_193 using right_hand\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 2 </COUNT> shake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 0 </COUNT> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0 WRONG \n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 1 </COUNT> pour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1\n <GOAL> My goal is to have that shot_156 contains cocktail_292, shot_155 contains cocktail_292. <COUNT> 0 </COUNT> pour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0\n</PLAN>"}
{"domain": "barman", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, left_hand is empty, shot_189 is empty, shaker_119's zero fill level is at level_0, shaker_119 is on the table, shot_189 is clean, shot_234 is clean, shot_234 is empty, shot_189 is on the table, right_hand is empty, shaker_119's fill level is at level_0, dispenser_308 dispenses ingredient_267, shaker_119 is clean, dispenser_127 dispenses ingredient_314, shot_234 is on the table, cocktail_107 has ingredient_24 as its second ingredient, dispenser_149 dispenses ingredient_348, shaker_119 is empty, dispenser_366 dispenses ingredient_24, level_2 is the next level after level_1, cocktail_107 has ingredient_348 as its first ingredient, level_1 is the next level after level_0.\nMy goal is to have that shot_234 contains cocktail_107.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT> leave the shot_189 using left_hand WRONG \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT> grasp the shot_189 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 8 </COUNT> fill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 7 </COUNT> pour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 6 </COUNT> clean the shot_189 on left_hand used for ingredient_24 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 5 </COUNT> fill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 4 </COUNT> pour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 3 </COUNT> leave the shot_189 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 2 </COUNT> grasp the shaker_119 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 1 </COUNT> shake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot189)", "(fill-shot shot189 ingredient24 left right dispenser366)", "(pour-shot-to-clean-shaker shot189 ingredient24 shaker119 left l0 l1)", "(clean-shot shot189 ingredient24 left right)", "(fill-shot shot189 ingredient348 left right dispenser149)", "(pour-shot-to-used-shaker shot189 ingredient348 shaker119 left l1 l2)", "(leave left shot189)", "(grasp left shaker119)", "(shake cocktail107 ingredient348 ingredient24 shaker119 left right)", "(pour-shaker-to-shot cocktail107 shot234 left shaker119 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, left_hand is empty, shot_189 is empty, shaker_119's zero fill level is at level_0, shaker_119 is on the table, shot_189 is clean, shot_234 is clean, shot_234 is empty, shot_189 is on the table, right_hand is empty, shaker_119's fill level is at level_0, dispenser_308 dispenses ingredient_267, shaker_119 is clean, dispenser_127 dispenses ingredient_314, shot_234 is on the table, cocktail_107 has ingredient_24 as its second ingredient, dispenser_149 dispenses ingredient_348, shaker_119 is empty, dispenser_366 dispenses ingredient_24, level_2 is the next level after level_1, cocktail_107 has ingredient_348 as its first ingredient, level_1 is the next level after level_0.My goal is to have that shot_234 contains cocktail_107.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT> leave the shot_189 using left_hand WRONG \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 9 </COUNT> grasp the shot_189 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 8 </COUNT> fill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 7 </COUNT> pour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 6 </COUNT> clean the shot_189 on left_hand used for ingredient_24 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 5 </COUNT> fill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 4 </COUNT> pour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 3 </COUNT> leave the shot_189 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 2 </COUNT> grasp the shaker_119 using left_hand\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 1 </COUNT> shake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty\n <GOAL> My goal is to have that shot_234 contains cocktail_107. <COUNT> 0 </COUNT> pour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, dispenser_51 dispenses ingredient_466, shaker_245 is on the table, shot_108 is clean, shaker_245 is clean, left_hand is empty, cocktail_367 has ingredient_19 as its first ingredient, shot_32 is clean, shaker_245's fill level is at level_0, dispenser_490 dispenses ingredient_19, cocktail_367 has ingredient_376 as its second ingredient, shot_108 is on the table, shot_32 is on the table, right_hand is empty, shot_32 is empty, dispenser_167 dispenses ingredient_376, shot_108 is empty, shaker_245 is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, dispenser_357 dispenses ingredient_125, shaker_245's zero fill level is at level_0.\nMy goal is to have that shot_32 contains cocktail_367.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 9 </COUNT> grasp the shot_108 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 8 </COUNT> fill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 7 </COUNT> pour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 6 </COUNT> clean the shot_108 on left_hand used for ingredient_19 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 5 </COUNT> fill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 4 </COUNT> pour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 3 </COUNT> leave the shot_108 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 2 </COUNT> grasp the shaker_245 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 1 </COUNT> shake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 0 </COUNT> pour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot108)", "(fill-shot shot108 ingredient19 left right dispenser490)", "(pour-shot-to-clean-shaker shot108 ingredient19 shaker245 left l0 l1)", "(clean-shot shot108 ingredient19 left right)", "(fill-shot shot108 ingredient376 left right dispenser167)", "(pour-shot-to-used-shaker shot108 ingredient376 shaker245 left l1 l2)", "(leave left shot108)", "(grasp left shaker245)", "(shake cocktail367 ingredient19 ingredient376 shaker245 left right)", "(pour-shaker-to-shot cocktail367 shot32 left shaker245 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, dispenser_51 dispenses ingredient_466, shaker_245 is on the table, shot_108 is clean, shaker_245 is clean, left_hand is empty, cocktail_367 has ingredient_19 as its first ingredient, shot_32 is clean, shaker_245's fill level is at level_0, dispenser_490 dispenses ingredient_19, cocktail_367 has ingredient_376 as its second ingredient, shot_108 is on the table, shot_32 is on the table, right_hand is empty, shot_32 is empty, dispenser_167 dispenses ingredient_376, shot_108 is empty, shaker_245 is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, dispenser_357 dispenses ingredient_125, shaker_245's zero fill level is at level_0.My goal is to have that shot_32 contains cocktail_367.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 9 </COUNT> grasp the shot_108 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 8 </COUNT> fill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 7 </COUNT> pour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 6 </COUNT> clean the shot_108 on left_hand used for ingredient_19 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 5 </COUNT> fill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 4 </COUNT> pour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 3 </COUNT> leave the shot_108 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 2 </COUNT> grasp the shaker_245 using left_hand\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 1 </COUNT> shake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty\n <GOAL> My goal is to have that shot_32 contains cocktail_367. <COUNT> 0 </COUNT> pour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_55 is empty, dispenser_100 dispenses ingredient_256, shot_123 is clean, shot_135 is on the table, dispenser_491 dispenses ingredient_393, level_1 is the next level after level_0, shaker_55 is clean, dispenser_441 dispenses ingredient_103, shot_135 is empty, shot_123 is on the table, shaker_55's fill level is at level_0, shot_135 is clean, shot_123 is empty, right_hand is empty, level_2 is the next level after level_1, shaker_55 is on the table, left_hand is empty, cocktail_419 has ingredient_103 as its first ingredient, shaker_55's zero fill level is at level_0, cocktail_419 has ingredient_256 as its second ingredient.\nMy goal is to have that shot_135 contains cocktail_419.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 9 </COUNT> grasp the shot_123 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 7 </COUNT> pour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT> grasp the shaker_55 using left_hand WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 6 </COUNT> clean the shot_123 on left_hand used for ingredient_103 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 5 </COUNT> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 4 </COUNT> pour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 3 </COUNT> leave the shot_123 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT> grasp the shaker_55 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 1 </COUNT> shake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot123)", "(fill-shot shot123 ingredient103 left right dispenser441)", "(pour-shot-to-clean-shaker shot123 ingredient103 shaker55 left l0 l1)", "(clean-shot shot123 ingredient103 left right)", "(fill-shot shot123 ingredient256 left right dispenser100)", "(pour-shot-to-used-shaker shot123 ingredient256 shaker55 left l1 l2)", "(leave left shot123)", "(grasp left shaker55)", "(shake cocktail419 ingredient103 ingredient256 shaker55 left right)", "(pour-shaker-to-shot cocktail419 shot135 left shaker55 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_55 is empty, dispenser_100 dispenses ingredient_256, shot_123 is clean, shot_135 is on the table, dispenser_491 dispenses ingredient_393, level_1 is the next level after level_0, shaker_55 is clean, dispenser_441 dispenses ingredient_103, shot_135 is empty, shot_123 is on the table, shaker_55's fill level is at level_0, shot_135 is clean, shot_123 is empty, right_hand is empty, level_2 is the next level after level_1, shaker_55 is on the table, left_hand is empty, cocktail_419 has ingredient_103 as its first ingredient, shaker_55's zero fill level is at level_0, cocktail_419 has ingredient_256 as its second ingredient.My goal is to have that shot_135 contains cocktail_419.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 9 </COUNT> grasp the shot_123 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 8 </COUNT> fill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 7 </COUNT> pour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT> grasp the shaker_55 using left_hand WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 6 </COUNT> clean the shot_123 on left_hand used for ingredient_103 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 5 </COUNT> fill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 4 </COUNT> pour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 3 </COUNT> leave the shot_123 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 2 </COUNT> grasp the shaker_55 using left_hand\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 1 </COUNT> shake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty\n <GOAL> My goal is to have that shot_135 contains cocktail_419. <COUNT> 0 </COUNT> pour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shot_53 is on the table, shot_53 is clean, shaker_43's fill level is at level_0, shot_377 is clean, cocktail_488 has ingredient_182 as its second ingredient, shot_377 is on the table, dispenser_289 dispenses ingredient_350, shaker_43 is empty, shot_377 is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_43's zero fill level is at level_0, left_hand is empty, dispenser_313 dispenses ingredient_182, shaker_43 is on the table, right_hand is empty, cocktail_488 has ingredient_350 as its first ingredient, shot_53 is empty, shaker_43 is clean.\nMy goal is to have that shot_377 contains cocktail_488.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 13 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 12 </COUNT> grasp the shot_53 using right_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT> leave the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT> leave the shaker_43 using left_hand WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT> fill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 9 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 8 </COUNT> pour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT> leave the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 6 </COUNT> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 5 </COUNT> fill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 3 </COUNT> pour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT> leave the shot_53 using right_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 1 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 14, "raw_plan": ["(grasp left shaker43)", "(grasp right shot53)", "(leave left shaker43)", "(fill-shot shot53 ingredient182 right left dispenser313)", "(grasp left shaker43)", "(pour-shot-to-clean-shaker shot53 ingredient182 shaker43 right l0 l1)", "(leave left shaker43)", "(clean-shot shot53 ingredient182 right left)", "(fill-shot shot53 ingredient350 right left dispenser289)", "(grasp left shaker43)", "(pour-shot-to-used-shaker shot53 ingredient350 shaker43 right l1 l2)", "(leave right shot53)", "(shake cocktail488 ingredient350 ingredient182 shaker43 left right)", "(pour-shaker-to-shot cocktail488 shot377 left shaker43 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shot_53 is on the table, shot_53 is clean, shaker_43's fill level is at level_0, shot_377 is clean, cocktail_488 has ingredient_182 as its second ingredient, shot_377 is on the table, dispenser_289 dispenses ingredient_350, shaker_43 is empty, shot_377 is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_43's zero fill level is at level_0, left_hand is empty, dispenser_313 dispenses ingredient_182, shaker_43 is on the table, right_hand is empty, cocktail_488 has ingredient_350 as its first ingredient, shot_53 is empty, shaker_43 is clean.My goal is to have that shot_377 contains cocktail_488.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 13 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 12 </COUNT> grasp the shot_53 using right_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 11 </COUNT> leave the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT> leave the shaker_43 using left_hand WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 10 </COUNT> fill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 9 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 8 </COUNT> pour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 7 </COUNT> leave the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 6 </COUNT> clean the shot_53 on right_hand used for ingredient_182 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 5 </COUNT> fill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1 WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 4 </COUNT> grasp the shaker_43 using left_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 3 </COUNT> pour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty WRONG \n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 2 </COUNT> leave the shot_53 using right_hand\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 1 </COUNT> shake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty\n <GOAL> My goal is to have that shot_377 contains cocktail_488. <COUNT> 0 </COUNT> pour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the blue block is on the table, the orange block is on the table, the orange block is clear, the red block is clear, the red block is on top of the white block, the hand is empty, the yellow block is clear, the white block is on the table, the yellow block is on top of the blue block.\nMy goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 13 </COUNT> pick up the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 13 </COUNT> unstack the yellow block from on top of the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 12 </COUNT> stack the yellow block on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 11 </COUNT> pick up the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 10 </COUNT> stack the blue block on top of the orange block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 9 </COUNT> unstack the yellow block from on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 7 </COUNT> unstack the red block from on top of the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 6 </COUNT> put down the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 5 </COUNT> pick up the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 4 </COUNT> stack the white block on top of the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 3 </COUNT> pick up the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 2 </COUNT> stack the yellow block on top of the red block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 2 </COUNT> stack the red block on top of the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 1 </COUNT> pick up the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 0 </COUNT> stack the yellow block on top of the red block\n</PLAN>", "plan_length": 14, "raw_plan": ["(unstack d b)", "(stack d a)", "(pick-up b)", "(stack b c)", "(unstack d a)", "(put-down d)", "(unstack a e)", "(put-down a)", "(pick-up e)", "(stack e b)", "(pick-up a)", "(stack a e)", "(pick-up d)", "(stack d a)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the blue block is on the table, the orange block is on the table, the orange block is clear, the red block is clear, the red block is on top of the white block, the hand is empty, the yellow block is clear, the white block is on the table, the yellow block is on top of the blue block.My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 13 </COUNT> pick up the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 13 </COUNT> unstack the yellow block from on top of the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 12 </COUNT> stack the yellow block on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 11 </COUNT> pick up the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 10 </COUNT> stack the blue block on top of the orange block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 9 </COUNT> unstack the yellow block from on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 8 </COUNT> put down the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 7 </COUNT> unstack the red block from on top of the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 6 </COUNT> put down the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 5 </COUNT> pick up the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 4 </COUNT> stack the white block on top of the blue block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 3 </COUNT> pick up the red block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 2 </COUNT> stack the yellow block on top of the red block WRONG \n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 2 </COUNT> stack the red block on top of the white block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 1 </COUNT> pick up the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the red block, the blue block is on top of the orange block, the white block is on top of the blue block, the red block is on top of the white block. <COUNT> 0 </COUNT> stack the yellow block on top of the red block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is on the table, the red block is on the table, the yellow block is on the table, the blue block is on top of the red block, the white block is clear, the orange block is clear, the hand is empty, the orange block is on the table, the yellow block is clear, the blue block is clear.\nMy goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 3 </COUNT> unstack the blue block from on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 2 </COUNT> stack the blue block on top of the orange block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 1 </COUNT> pick up the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 0 </COUNT> stack the yellow block on top of the blue block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack b a)", "(stack b c)", "(pick-up d)", "(stack d b)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is on the table, the red block is on the table, the yellow block is on the table, the blue block is on top of the red block, the white block is clear, the orange block is clear, the hand is empty, the orange block is on the table, the yellow block is clear, the blue block is clear.My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 3 </COUNT> unstack the blue block from on top of the red block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 2 </COUNT> stack the blue block on top of the orange block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 1 </COUNT> pick up the yellow block\n <GOAL> My goal is to have that the yellow block is on top of the blue block, the blue block is on top of the orange block. <COUNT> 0 </COUNT> stack the yellow block on top of the blue block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the blue block is on top of the white block, the red block is clear, the red block is on top of the orange block, the yellow block is clear, the orange block is on top of the blue block, the white block is on the table, the hand is empty, the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 3 </COUNT> unstack the red block from on top of the orange block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 2 </COUNT> put down the red block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 1 </COUNT> unstack the orange block from on top of the blue block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 0 </COUNT> stack the orange block on top of the yellow block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack a c)", "(put-down a)", "(unstack c b)", "(stack c d)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the blue block is on top of the white block, the red block is clear, the red block is on top of the orange block, the yellow block is clear, the orange block is on top of the blue block, the white block is on the table, the hand is empty, the yellow block is on the table.My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 3 </COUNT> unstack the red block from on top of the orange block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 2 </COUNT> put down the red block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 1 </COUNT> unstack the orange block from on top of the blue block\n <GOAL> My goal is to have that the orange block is on top of the yellow block, the blue block is on top of the white block. <COUNT> 0 </COUNT> stack the orange block on top of the yellow block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the orange block is on top of the blue block, the white block is on the table, the orange block is clear, the red block is on top of the yellow block, the blue block is on the table, the hand is empty, the yellow block is on top of the white block, the red block is clear.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 3 </COUNT> unstack the orange block from on top of the blue block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 2 </COUNT> stack the orange block on top of the red block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 1 </COUNT> pick up the blue block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 0 </COUNT> stack the blue block on top of the orange block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack c b)", "(stack c a)", "(pick-up b)", "(stack b c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the orange block is on top of the blue block, the white block is on the table, the orange block is clear, the red block is on top of the yellow block, the blue block is on the table, the hand is empty, the yellow block is on top of the white block, the red block is clear.My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 3 </COUNT> unstack the orange block from on top of the blue block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 2 </COUNT> stack the orange block on top of the red block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 1 </COUNT> pick up the blue block\n <GOAL> My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block. <COUNT> 0 </COUNT> stack the blue block on top of the orange block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the blue block is clear, the blue block is on the table, the white block is on the table, the white block is clear, the orange block is on the table, the red block is on the table, the hand is empty, the yellow block is on top of the orange block, the yellow block is clear.\nMy goal is to have that the white block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 3 </COUNT> unstack the yellow block from on top of the orange block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 2 </COUNT> put down the yellow block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> pick up the white block WRONG \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> stack the white block on top of the orange block WRONG \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 1 </COUNT> pick up the white block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> stack the white block on top of the orange block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack d c)", "(put-down d)", "(pick-up e)", "(stack e c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the blue block is clear, the blue block is on the table, the white block is on the table, the white block is clear, the orange block is on the table, the red block is on the table, the hand is empty, the yellow block is on top of the orange block, the yellow block is clear.My goal is to have that the white block is on top of the orange block.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 3 </COUNT> unstack the yellow block from on top of the orange block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 2 </COUNT> put down the yellow block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> pick up the white block WRONG \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> stack the white block on top of the orange block WRONG \n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 1 </COUNT> pick up the white block\n <GOAL> My goal is to have that the white block is on top of the orange block. <COUNT> 0 </COUNT> stack the white block on top of the orange block\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, bread_94 is at kitchen, child_394 is waiting for sandwich at table_383, sandwich_1 is not ready yet, sandwich_2 is not ready yet, content_331 is at kitchen, child_394 is not allergic to gluten, tray_128 is at kitchen, tray_291 is at kitchen, tray_484 is at kitchen.\nMy goal is to have that child_394 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 3 </COUNT> make a regular sandwich_2 using bread_94 and content_331\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT> put sandwich_2 on tray_484 WRONG \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 2 </COUNT> put sandwich_2 on tray_484\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 1 </COUNT> move tray_484 from kitchen to table_383\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT> use tray_484 to serve regular sandwich_2 to child_394 at table_383\n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread94 content331)", "(put_on_tray sandw2 tray484)", "(move_tray tray484 kitchen table383)", "(serve_sandwich sandw2 child394 tray484 table383)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, bread_94 is at kitchen, child_394 is waiting for sandwich at table_383, sandwich_1 is not ready yet, sandwich_2 is not ready yet, content_331 is at kitchen, child_394 is not allergic to gluten, tray_128 is at kitchen, tray_291 is at kitchen, tray_484 is at kitchen.My goal is to have that child_394 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 3 </COUNT> make a regular sandwich_2 using bread_94 and content_331\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT> put sandwich_2 on tray_484 WRONG \n <GOAL> My goal is to have that child_394 has been served. <COUNT> 2 </COUNT> put sandwich_2 on tray_484\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 1 </COUNT> move tray_484 from kitchen to table_383\n <GOAL> My goal is to have that child_394 has been served. <COUNT> 0 </COUNT> use tray_484 to serve regular sandwich_2 to child_394 at table_383\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_128 is not allergic to gluten, sandwich_1 is not ready yet, bread_445 is at kitchen, sandwich_3 is not ready yet, content_472 is at kitchen, child_263 is not allergic to gluten, content_124 is at kitchen, tray_108 is at kitchen, child_43 is not allergic to gluten, bread_420 is at kitchen, content_39 is at kitchen, sandwich_6 is not ready yet, sandwich_5 is not ready yet, bread_374 is at kitchen, child_43 is waiting for sandwich at table_228, child_263 is waiting for sandwich at table_108, child_128 is waiting for sandwich at table_228, sandwich_4 is not ready yet, sandwich_2 is not ready yet.\nMy goal is to have that child_128 has been served, child_43 has been served, child_263 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 14 </COUNT> make a regular sandwich_6 using bread_374 and content_124\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 13 </COUNT> put sandwich_6 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 12 </COUNT> move tray_108 from kitchen to table_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 11 </COUNT> use tray_108 to serve regular sandwich_6 to child_263 at table_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 10 </COUNT> move tray_108 from table_108 to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 9 </COUNT> make a regular sandwich_5 using bread_420 and content_39\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 3 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 8 </COUNT> move tray_108 from table_228 to kitchen\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 7 </COUNT> put sandwich_5 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 6 </COUNT> move tray_108 from kitchen to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 5 </COUNT> use tray_108 to serve regular sandwich_5 to child_128 at table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 2 </COUNT> make a regular sandwich_4 using bread_445 and content_472 WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> move tray_108 from kitchen to table_228 WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> make a regular sandwich_4 using bread_445 and content_472\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 0 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 3 </COUNT> move tray_108 from table_228 to kitchen\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 2 </COUNT> put sandwich_4 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 1 </COUNT> move tray_108 from kitchen to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 0 </COUNT> use tray_108 to serve regular sandwich_4 to child_43 at table_228\n</PLAN>", "plan_length": 15, "raw_plan": ["(make_sandwich sandw6 bread374 content124)", "(put_on_tray sandw6 tray108)", "(move_tray tray108 kitchen table108)", "(serve_sandwich sandw6 child263 tray108 table108)", "(move_tray tray108 table108 table228)", "(make_sandwich sandw5 bread420 content39)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw5 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw5 child128 tray108 table228)", "(make_sandwich sandw4 bread445 content472)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw4 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw4 child43 tray108 table228)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_128 is not allergic to gluten, sandwich_1 is not ready yet, bread_445 is at kitchen, sandwich_3 is not ready yet, content_472 is at kitchen, child_263 is not allergic to gluten, content_124 is at kitchen, tray_108 is at kitchen, child_43 is not allergic to gluten, bread_420 is at kitchen, content_39 is at kitchen, sandwich_6 is not ready yet, sandwich_5 is not ready yet, bread_374 is at kitchen, child_43 is waiting for sandwich at table_228, child_263 is waiting for sandwich at table_108, child_128 is waiting for sandwich at table_228, sandwich_4 is not ready yet, sandwich_2 is not ready yet.My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 14 </COUNT> make a regular sandwich_6 using bread_374 and content_124\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 13 </COUNT> put sandwich_6 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 12 </COUNT> move tray_108 from kitchen to table_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 11 </COUNT> use tray_108 to serve regular sandwich_6 to child_263 at table_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 10 </COUNT> move tray_108 from table_108 to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 9 </COUNT> make a regular sandwich_5 using bread_420 and content_39\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 3 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 8 </COUNT> move tray_108 from table_228 to kitchen\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 7 </COUNT> put sandwich_5 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 6 </COUNT> move tray_108 from kitchen to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 5 </COUNT> use tray_108 to serve regular sandwich_5 to child_128 at table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 2 </COUNT> make a regular sandwich_4 using bread_445 and content_472 WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> move tray_108 from kitchen to table_228 WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 4 </COUNT> make a regular sandwich_4 using bread_445 and content_472\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 0 </COUNT> move tray_108 from table_228 to kitchen WRONG \n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 3 </COUNT> move tray_108 from table_228 to kitchen\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 2 </COUNT> put sandwich_4 on tray_108\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 1 </COUNT> move tray_108 from kitchen to table_228\n <GOAL> My goal is to have that child_128 has been served, child_43 has been served, child_263 has been served. <COUNT> 0 </COUNT> use tray_108 to serve regular sandwich_4 to child_43 at table_228\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, bread_274 is at kitchen, tray_474 is at kitchen, child_425 is waiting for sandwich at table_320, tray_456 is at kitchen, sandwich_1 is not ready yet, tray_403 is at kitchen, content_183 is at kitchen, child_425 is not allergic to gluten, sandwich_2 is not ready yet.\nMy goal is to have that child_425 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT> make a regular sandwich_2 using bread_274 and content_183 WRONG \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT> make a regular sandwich_2 using bread_274 and content_183\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT> put sandwich_2 on tray_474\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 1 </COUNT> move tray_474 from kitchen to table_320\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT> use tray_474 to serve regular sandwich_2 to child_425 at table_320 WRONG \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 0 </COUNT> use tray_474 to serve regular sandwich_2 to child_425 at table_320\n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread274 content183)", "(put_on_tray sandw2 tray474)", "(move_tray tray474 kitchen table320)", "(serve_sandwich sandw2 child425 tray474 table320)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, bread_274 is at kitchen, tray_474 is at kitchen, child_425 is waiting for sandwich at table_320, tray_456 is at kitchen, sandwich_1 is not ready yet, tray_403 is at kitchen, content_183 is at kitchen, child_425 is not allergic to gluten, sandwich_2 is not ready yet.My goal is to have that child_425 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT> make a regular sandwich_2 using bread_274 and content_183 WRONG \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT> make a regular sandwich_2 using bread_274 and content_183\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 2 </COUNT> put sandwich_2 on tray_474\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 1 </COUNT> move tray_474 from kitchen to table_320\n <GOAL> My goal is to have that child_425 has been served. <COUNT> 3 </COUNT> use tray_474 to serve regular sandwich_2 to child_425 at table_320 WRONG \n <GOAL> My goal is to have that child_425 has been served. <COUNT> 0 </COUNT> use tray_474 to serve regular sandwich_2 to child_425 at table_320\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, sandwich_1 is not ready yet, sandwich_3 is not ready yet, sandwich_2 is not ready yet, child_167 is not allergic to gluten, bread_166 is at kitchen, child_167 is waiting for sandwich at table_404, child_441 is waiting for sandwich at table_46, child_441 is not allergic to gluten, tray_62 is at kitchen, tray_438 is at kitchen, bread_99 is at kitchen, content_63 is at kitchen, content_217 is at kitchen, sandwich_4 is not ready yet, tray_213 is at kitchen.\nMy goal is to have that child_441 has been served, child_167 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 7 </COUNT> use tray_438 to serve regular sandwich_3 to child_441 at table_46 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 7 </COUNT> make a regular sandwich_4 using bread_166 and content_217\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> put sandwich_4 on tray_62 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 6 </COUNT> put sandwich_4 on tray_62\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 5 </COUNT> move tray_62 from kitchen to table_404\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 4 </COUNT> use tray_62 to serve regular sandwich_4 to child_167 at table_404\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 3 </COUNT> make a regular sandwich_3 using bread_99 and content_63\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 2 </COUNT> put sandwich_3 on tray_438\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> move tray_438 from kitchen to table_46 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 1 </COUNT> move tray_438 from kitchen to table_46\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> use tray_438 to serve regular sandwich_3 to child_441 at table_46\n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread166 content217)", "(put_on_tray sandw4 tray62)", "(move_tray tray62 kitchen table404)", "(serve_sandwich sandw4 child167 tray62 table404)", "(make_sandwich sandw3 bread99 content63)", "(put_on_tray sandw3 tray438)", "(move_tray tray438 kitchen table46)", "(serve_sandwich sandw3 child441 tray438 table46)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, sandwich_1 is not ready yet, sandwich_3 is not ready yet, sandwich_2 is not ready yet, child_167 is not allergic to gluten, bread_166 is at kitchen, child_167 is waiting for sandwich at table_404, child_441 is waiting for sandwich at table_46, child_441 is not allergic to gluten, tray_62 is at kitchen, tray_438 is at kitchen, bread_99 is at kitchen, content_63 is at kitchen, content_217 is at kitchen, sandwich_4 is not ready yet, tray_213 is at kitchen.My goal is to have that child_441 has been served, child_167 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 7 </COUNT> use tray_438 to serve regular sandwich_3 to child_441 at table_46 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 7 </COUNT> make a regular sandwich_4 using bread_166 and content_217\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> put sandwich_4 on tray_62 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 6 </COUNT> put sandwich_4 on tray_62\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 5 </COUNT> move tray_62 from kitchen to table_404\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 4 </COUNT> use tray_62 to serve regular sandwich_4 to child_167 at table_404\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 3 </COUNT> make a regular sandwich_3 using bread_99 and content_63\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 2 </COUNT> put sandwich_3 on tray_438\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> move tray_438 from kitchen to table_46 WRONG \n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 1 </COUNT> move tray_438 from kitchen to table_46\n <GOAL> My goal is to have that child_441 has been served, child_167 has been served. <COUNT> 0 </COUNT> use tray_438 to serve regular sandwich_3 to child_441 at table_46\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_416 is waiting for sandwich at table_232, sandwich_4 is not ready yet, bread_393 is at kitchen, child_416 is not allergic to gluten, sandwich_1 is not ready yet, bread_269 is at kitchen, content_338 is at kitchen, content_157 is at kitchen, child_463 is not allergic to gluten, tray_235 is at kitchen, child_463 is waiting for sandwich at table_31, tray_365 is at kitchen, tray_31 is at kitchen, sandwich_2 is not ready yet, sandwich_3 is not ready yet.\nMy goal is to have that child_416 has been served, child_463 has been served.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 7 </COUNT> make a regular sandwich_4 using bread_269 and content_157\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 6 </COUNT> put sandwich_4 on tray_365\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 5 </COUNT> move tray_365 from kitchen to table_232\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 4 </COUNT> use tray_365 to serve regular sandwich_4 to child_416 at table_232\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 3 </COUNT> move tray_31 from kitchen to table_31 WRONG \n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 3 </COUNT> make a regular sandwich_3 using bread_393 and content_338\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 2 </COUNT> put sandwich_3 on tray_31\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 1 </COUNT> move tray_31 from kitchen to table_31\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 0 </COUNT> use tray_31 to serve regular sandwich_3 to child_463 at table_31\n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread269 content157)", "(put_on_tray sandw4 tray365)", "(move_tray tray365 kitchen table232)", "(serve_sandwich sandw4 child416 tray365 table232)", "(make_sandwich sandw3 bread393 content338)", "(put_on_tray sandw3 tray31)", "(move_tray tray31 kitchen table31)", "(serve_sandwich sandw3 child463 tray31 table31)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_416 is waiting for sandwich at table_232, sandwich_4 is not ready yet, bread_393 is at kitchen, child_416 is not allergic to gluten, sandwich_1 is not ready yet, bread_269 is at kitchen, content_338 is at kitchen, content_157 is at kitchen, child_463 is not allergic to gluten, tray_235 is at kitchen, child_463 is waiting for sandwich at table_31, tray_365 is at kitchen, tray_31 is at kitchen, sandwich_2 is not ready yet, sandwich_3 is not ready yet.My goal is to have that child_416 has been served, child_463 has been served.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 7 </COUNT> make a regular sandwich_4 using bread_269 and content_157\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 6 </COUNT> put sandwich_4 on tray_365\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 5 </COUNT> move tray_365 from kitchen to table_232\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 4 </COUNT> use tray_365 to serve regular sandwich_4 to child_416 at table_232\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 3 </COUNT> move tray_31 from kitchen to table_31 WRONG \n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 3 </COUNT> make a regular sandwich_3 using bread_393 and content_338\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 2 </COUNT> put sandwich_3 on tray_31\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 1 </COUNT> move tray_31 from kitchen to table_31\n <GOAL> My goal is to have that child_416 has been served, child_463 has been served. <COUNT> 0 </COUNT> use tray_31 to serve regular sandwich_3 to child_463 at table_31\n</PLAN>"}
{"domain": "depots", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, pallet_0 is at depot_0, hoist_3 is available, hoist_2 is available, hoist_5 is at distributor_1, truck_2 is at distributor_0, hoist_3 is at depot_3, pallet_3 is at depot_3, pallet_3 is clear, hoist_1 is available, truck_0 is at depot_0, pallet_0 is clear, hoist_0 is at depot_0, hoist_5 is available, pallet_1 is at depot_1, pallet_2 is clear, crate_0 is clear, hoist_0 is available, truck_1 is at depot_3, hoist_4 is at distributor_0, pallet_1 is clear, hoist_2 is at depot_2, crate_1 is at distributor_1, hoist_1 is at depot_1, hoist_4 is available, pallet_5 is at distributor_1, crate_1 is on pallet_5, crate_0 is at distributor_0, crate_1 is clear, pallet_2 is at depot_2, pallet_4 is at distributor_0, crate_0 is on pallet_4.\nMy goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 13 </COUNT> drive truck_2 from distributor_0 to depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 12 </COUNT> drive truck_0 from distributor_0 to depot_2 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 12 </COUNT> Use hoist_4 to lift crate_0 from pallet_4 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 11 </COUNT> drive truck_0 from depot_0 to depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_1 from pallet_5 at distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 9 </COUNT> drive truck_2 from depot_1 to distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 8 </COUNT> Use hoist_5 to load crate_1 into truck_2 at distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 7 </COUNT> drive truck_2 from distributor_1 to depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 6 </COUNT> Use hoist_1 to unload crate_1 from truck_2 at depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 5 </COUNT> Use hoist_1 to drop crate_1 to pallet_1 at depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 0 </COUNT> drive truck_0 from depot_2 to distributor_0 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 4 </COUNT> drive truck_0 from depot_2 to distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 3 </COUNT> Use hoist_4 to load crate_0 into truck_0 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 2 </COUNT> drive truck_0 from distributor_0 to depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_2 to drop crate_0 to pallet_2 at depot_2 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_2 to unload crate_0 from truck_0 at depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_2 to drop crate_0 to pallet_2 at depot_2\n</PLAN>", "plan_length": 14, "raw_plan": ["(drive truck2 distributor0 depot1)", "(lift hoist4 crate0 pallet4 distributor0)", "(drive truck0 depot0 depot2)", "(lift hoist5 crate1 pallet5 distributor1)", "(drive truck2 depot1 distributor1)", "(load hoist5 crate1 truck2 distributor1)", "(drive truck2 distributor1 depot1)", "(unload hoist1 crate1 truck2 depot1)", "(drop hoist1 crate1 pallet1 depot1)", "(drive truck0 depot2 distributor0)", "(load hoist4 crate0 truck0 distributor0)", "(drive truck0 distributor0 depot2)", "(unload hoist2 crate0 truck0 depot2)", "(drop hoist2 crate0 pallet2 depot2)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, pallet_0 is at depot_0, hoist_3 is available, hoist_2 is available, hoist_5 is at distributor_1, truck_2 is at distributor_0, hoist_3 is at depot_3, pallet_3 is at depot_3, pallet_3 is clear, hoist_1 is available, truck_0 is at depot_0, pallet_0 is clear, hoist_0 is at depot_0, hoist_5 is available, pallet_1 is at depot_1, pallet_2 is clear, crate_0 is clear, hoist_0 is available, truck_1 is at depot_3, hoist_4 is at distributor_0, pallet_1 is clear, hoist_2 is at depot_2, crate_1 is at distributor_1, hoist_1 is at depot_1, hoist_4 is available, pallet_5 is at distributor_1, crate_1 is on pallet_5, crate_0 is at distributor_0, crate_1 is clear, pallet_2 is at depot_2, pallet_4 is at distributor_0, crate_0 is on pallet_4.My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 13 </COUNT> drive truck_2 from distributor_0 to depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 12 </COUNT> drive truck_0 from distributor_0 to depot_2 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 12 </COUNT> Use hoist_4 to lift crate_0 from pallet_4 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 11 </COUNT> drive truck_0 from depot_0 to depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_1 from pallet_5 at distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 9 </COUNT> drive truck_2 from depot_1 to distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 8 </COUNT> Use hoist_5 to load crate_1 into truck_2 at distributor_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 7 </COUNT> drive truck_2 from distributor_1 to depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 6 </COUNT> Use hoist_1 to unload crate_1 from truck_2 at depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 5 </COUNT> Use hoist_1 to drop crate_1 to pallet_1 at depot_1\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 0 </COUNT> drive truck_0 from depot_2 to distributor_0 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 4 </COUNT> drive truck_0 from depot_2 to distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 3 </COUNT> Use hoist_4 to load crate_0 into truck_0 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 2 </COUNT> drive truck_0 from distributor_0 to depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_2 to drop crate_0 to pallet_2 at depot_2 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_2 to unload crate_0 from truck_0 at depot_2\n <GOAL> My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_2 to drop crate_0 to pallet_2 at depot_2\n</PLAN>"}
{"domain": "depots", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, hoist_6 is at distributor_1, hoist_4 is at depot_4, hoist_2 is at depot_2, truck_0 is at depot_0, crate_0 is clear, crate_0 is on pallet_0, hoist_8 is at distributor_2, hoist_5 is available, hoist_2 is available, hoist_1 is available, pallet_5 is at distributor_0, crate_1 is on pallet_1, pallet_2 is at depot_2, crate_1 is clear, hoist_0 is at depot_0, truck_2 is at distributor_0, hoist_4 is available, pallet_3 is clear, hoist_8 is available, crate_1 is at depot_1, pallet_2 is clear, truck_1 is at depot_0, pallet_6 is at distributor_1, pallet_4 is at depot_4, pallet_7 is at distributor_2, hoist_7 is available, hoist_0 is available, pallet_4 is clear, hoist_3 is at depot_3, pallet_6 is clear, hoist_6 is available, pallet_3 is at depot_3, crate_0 is at depot_0, pallet_1 is at depot_1, pallet_5 is clear, pallet_7 is clear, hoist_5 is at distributor_0, hoist_1 is at depot_1, hoist_7 is at distributor_2, pallet_0 is at depot_0, hoist_3 is available.\nMy goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 4 </COUNT> Use hoist_0 to lift crate_0 from pallet_0 at depot_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 3 </COUNT> Use hoist_0 to load crate_0 into truck_1 at depot_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 2 </COUNT> drive truck_1 from depot_0 to distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_5 to unload crate_0 from truck_1 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0\n</PLAN>", "plan_length": 5, "raw_plan": ["(lift hoist0 crate0 pallet0 depot0)", "(load hoist0 crate0 truck1 depot0)", "(drive truck1 depot0 distributor0)", "(unload hoist5 crate0 truck1 distributor0)", "(drop hoist5 crate0 pallet5 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, hoist_6 is at distributor_1, hoist_4 is at depot_4, hoist_2 is at depot_2, truck_0 is at depot_0, crate_0 is clear, crate_0 is on pallet_0, hoist_8 is at distributor_2, hoist_5 is available, hoist_2 is available, hoist_1 is available, pallet_5 is at distributor_0, crate_1 is on pallet_1, pallet_2 is at depot_2, crate_1 is clear, hoist_0 is at depot_0, truck_2 is at distributor_0, hoist_4 is available, pallet_3 is clear, hoist_8 is available, crate_1 is at depot_1, pallet_2 is clear, truck_1 is at depot_0, pallet_6 is at distributor_1, pallet_4 is at depot_4, pallet_7 is at distributor_2, hoist_7 is available, hoist_0 is available, pallet_4 is clear, hoist_3 is at depot_3, pallet_6 is clear, hoist_6 is available, pallet_3 is at depot_3, crate_0 is at depot_0, pallet_1 is at depot_1, pallet_5 is clear, pallet_7 is clear, hoist_5 is at distributor_0, hoist_1 is at depot_1, hoist_7 is at distributor_2, pallet_0 is at depot_0, hoist_3 is available.My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 4 </COUNT> Use hoist_0 to lift crate_0 from pallet_0 at depot_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 3 </COUNT> Use hoist_0 to load crate_0 into truck_1 at depot_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 2 </COUNT> drive truck_1 from depot_0 to distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0 WRONG \n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 1 </COUNT> Use hoist_5 to unload crate_0 from truck_1 at distributor_0\n <GOAL> My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1. <COUNT> 0 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, hoist_0 is available, hoist_2 is at distributor_0, pallet_6 is at distributor_4, hoist_8 is available, pallet_7 is clear, pallet_3 is at distributor_1, hoist_0 is at depot_0, hoist_5 is available, hoist_7 is at distributor_5, hoist_4 is available, hoist_3 is at distributor_1, truck_0 is at distributor_5, pallet_4 is clear, hoist_7 is available, hoist_6 is at distributor_4, truck_3 is at depot_0, hoist_1 is at depot_1, crate_1 is at depot_1, pallet_6 is clear, hoist_3 is available, crate_1 is clear, crate_0 is at distributor_1, hoist_1 is available, crate_0 is on pallet_3, pallet_2 is at distributor_0, pallet_7 is at distributor_5, truck_1 is at distributor_1, crate_0 is clear, pallet_1 is at depot_1, hoist_2 is available, hoist_6 is available, hoist_8 is at depot_1, crate_1 is on pallet_1, hoist_5 is at distributor_3, pallet_4 is at distributor_2, pallet_5 is clear, truck_2 is at depot_1, pallet_2 is clear, pallet_0 is at depot_0, pallet_5 is at distributor_3, pallet_0 is clear, hoist_4 is at distributor_2.\nMy goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 9 </COUNT> Use hoist_3 to lift crate_0 from pallet_3 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 8 </COUNT> Use hoist_3 to load crate_0 into truck_1 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 7 </COUNT> drive truck_1 from distributor_1 to distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 6 </COUNT> Use hoist_5 to unload crate_0 from truck_1 at distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 5 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 4 </COUNT> Use hoist_1 to lift crate_1 from pallet_1 at depot_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 3 </COUNT> Use hoist_1 to load crate_1 into truck_2 at depot_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> drive truck_2 from depot_1 to distributor_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 2 </COUNT> drive truck_2 from depot_1 to distributor_0\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> Use hoist_2 to unload crate_1 from truck_2 at distributor_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 1 </COUNT> Use hoist_2 to unload crate_1 from truck_2 at distributor_0\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> Use hoist_2 to drop crate_1 to pallet_2 at distributor_0\n</PLAN>", "plan_length": 10, "raw_plan": ["(lift hoist3 crate0 pallet3 distributor1)", "(load hoist3 crate0 truck1 distributor1)", "(drive truck1 distributor1 distributor3)", "(unload hoist5 crate0 truck1 distributor3)", "(drop hoist5 crate0 pallet5 distributor3)", "(lift hoist1 crate1 pallet1 depot1)", "(load hoist1 crate1 truck2 depot1)", "(drive truck2 depot1 distributor0)", "(unload hoist2 crate1 truck2 distributor0)", "(drop hoist2 crate1 pallet2 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, hoist_0 is available, hoist_2 is at distributor_0, pallet_6 is at distributor_4, hoist_8 is available, pallet_7 is clear, pallet_3 is at distributor_1, hoist_0 is at depot_0, hoist_5 is available, hoist_7 is at distributor_5, hoist_4 is available, hoist_3 is at distributor_1, truck_0 is at distributor_5, pallet_4 is clear, hoist_7 is available, hoist_6 is at distributor_4, truck_3 is at depot_0, hoist_1 is at depot_1, crate_1 is at depot_1, pallet_6 is clear, hoist_3 is available, crate_1 is clear, crate_0 is at distributor_1, hoist_1 is available, crate_0 is on pallet_3, pallet_2 is at distributor_0, pallet_7 is at distributor_5, truck_1 is at distributor_1, crate_0 is clear, pallet_1 is at depot_1, hoist_2 is available, hoist_6 is available, hoist_8 is at depot_1, crate_1 is on pallet_1, hoist_5 is at distributor_3, pallet_4 is at distributor_2, pallet_5 is clear, truck_2 is at depot_1, pallet_2 is clear, pallet_0 is at depot_0, pallet_5 is at distributor_3, pallet_0 is clear, hoist_4 is at distributor_2.My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 9 </COUNT> Use hoist_3 to lift crate_0 from pallet_3 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 8 </COUNT> Use hoist_3 to load crate_0 into truck_1 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 7 </COUNT> drive truck_1 from distributor_1 to distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 6 </COUNT> Use hoist_5 to unload crate_0 from truck_1 at distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 5 </COUNT> Use hoist_5 to drop crate_0 to pallet_5 at distributor_3\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 4 </COUNT> Use hoist_1 to lift crate_1 from pallet_1 at depot_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 3 </COUNT> Use hoist_1 to load crate_1 into truck_2 at depot_1\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> drive truck_2 from depot_1 to distributor_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 2 </COUNT> drive truck_2 from depot_1 to distributor_0\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> Use hoist_2 to unload crate_1 from truck_2 at distributor_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 1 </COUNT> Use hoist_2 to unload crate_1 from truck_2 at distributor_0\n <GOAL> My goal is to have that crate_1 is on pallet_2, crate_0 is on pallet_5. <COUNT> 0 </COUNT> Use hoist_2 to drop crate_1 to pallet_2 at distributor_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, pallet_0 is clear, hoist_1 is available, hoist_6 is at depot_0, pallet_1 is clear, crate_1 is at distributor_1, pallet_1 is at distributor_0, hoist_4 is at distributor_3, hoist_2 is at distributor_1, crate_0 is on pallet_5, hoist_1 is at distributor_0, hoist_0 is at depot_0, pallet_3 is clear, crate_0 is clear, hoist_0 is available, hoist_3 is at distributor_2, pallet_3 is at distributor_2, crate_0 is at distributor_4, truck_0 is at distributor_1, crate_1 is on pallet_2, pallet_2 is at distributor_1, pallet_4 is clear, truck_1 is at depot_0, crate_1 is clear, hoist_6 is available, hoist_2 is available, hoist_4 is available, hoist_3 is available, hoist_5 is available, pallet_4 is at distributor_3, hoist_5 is at distributor_4, pallet_5 is at distributor_4, pallet_0 is at depot_0.\nMy goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_0 from pallet_5 at distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 9 </COUNT> drive truck_0 from distributor_1 to distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT> Use hoist_5 to load crate_0 into truck_0 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 8 </COUNT> Use hoist_5 to load crate_0 into truck_0 at distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT> drive truck_0 from distributor_4 to distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 6 </COUNT> Use hoist_2 to lift crate_1 from pallet_2 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to drop crate_1 to pallet_0 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 5 </COUNT> Use hoist_2 to load crate_1 into truck_0 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 4 </COUNT> drive truck_0 from distributor_1 to depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 3 </COUNT> Use hoist_0 to unload crate_0 from truck_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to unload crate_1 from truck_0 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT> Use hoist_0 to drop crate_0 to crate_1 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT> Use hoist_6 to unload crate_1 from truck_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to drop crate_1 to pallet_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 0 </COUNT> Use hoist_0 to drop crate_0 to crate_1 at depot_0\n</PLAN>", "plan_length": 11, "raw_plan": ["(lift hoist5 crate0 pallet5 distributor4)", "(drive truck0 distributor1 distributor4)", "(load hoist5 crate0 truck0 distributor4)", "(drive truck0 distributor4 distributor1)", "(lift hoist2 crate1 pallet2 distributor1)", "(load hoist2 crate1 truck0 distributor1)", "(drive truck0 distributor1 depot0)", "(unload hoist0 crate0 truck0 depot0)", "(unload hoist6 crate1 truck0 depot0)", "(drop hoist6 crate1 pallet0 depot0)", "(drop hoist0 crate0 crate1 depot0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, pallet_0 is clear, hoist_1 is available, hoist_6 is at depot_0, pallet_1 is clear, crate_1 is at distributor_1, pallet_1 is at distributor_0, hoist_4 is at distributor_3, hoist_2 is at distributor_1, crate_0 is on pallet_5, hoist_1 is at distributor_0, hoist_0 is at depot_0, pallet_3 is clear, crate_0 is clear, hoist_0 is available, hoist_3 is at distributor_2, pallet_3 is at distributor_2, crate_0 is at distributor_4, truck_0 is at distributor_1, crate_1 is on pallet_2, pallet_2 is at distributor_1, pallet_4 is clear, truck_1 is at depot_0, crate_1 is clear, hoist_6 is available, hoist_2 is available, hoist_4 is available, hoist_3 is available, hoist_5 is available, pallet_4 is at distributor_3, hoist_5 is at distributor_4, pallet_5 is at distributor_4, pallet_0 is at depot_0.My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_0 from pallet_5 at distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 9 </COUNT> drive truck_0 from distributor_1 to distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT> Use hoist_5 to load crate_0 into truck_0 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 8 </COUNT> Use hoist_5 to load crate_0 into truck_0 at distributor_4\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 7 </COUNT> drive truck_0 from distributor_4 to distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 6 </COUNT> Use hoist_2 to lift crate_1 from pallet_2 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to drop crate_1 to pallet_0 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 5 </COUNT> Use hoist_2 to load crate_1 into truck_0 at distributor_1\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 4 </COUNT> drive truck_0 from distributor_1 to depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 3 </COUNT> Use hoist_0 to unload crate_0 from truck_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to unload crate_1 from truck_0 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT> Use hoist_0 to drop crate_0 to crate_1 at depot_0 WRONG \n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 2 </COUNT> Use hoist_6 to unload crate_1 from truck_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 1 </COUNT> Use hoist_6 to drop crate_1 to pallet_0 at depot_0\n <GOAL> My goal is to have that crate_1 is on pallet_0, crate_0 is on crate_1. <COUNT> 0 </COUNT> Use hoist_0 to drop crate_0 to crate_1 at depot_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, pallet_0 is clear, hoist_7 is at distributor_1, hoist_1 is at depot_1, hoist_6 is available, pallet_0 is at depot_0, pallet_2 is clear, hoist_3 is at depot_3, hoist_8 is at distributor_2, pallet_9 is at distributor_3, hoist_1 is available, crate_0 is on pallet_1, pallet_4 is at depot_4, hoist_2 is available, hoist_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_1 is at depot_1, hoist_7 is available, hoist_0 is at depot_0, hoist_4 is at depot_4, crate_0 is at depot_1, crate_1 is at depot_5, pallet_9 is clear, crate_1 is clear, truck_0 is at depot_5, hoist_9 is at distributor_3, hoist_8 is available, hoist_3 is available, hoist_2 is at depot_2, hoist_9 is available, pallet_5 is at depot_5, hoist_4 is available, hoist_6 is at distributor_0, pallet_10 is at distributor_4, pallet_2 is at depot_2, hoist_10 is at distributor_4, pallet_10 is clear, truck_1 is at depot_5, crate_0 is clear, pallet_8 is at distributor_2, pallet_8 is clear, pallet_6 is clear, pallet_3 is clear, pallet_4 is clear, pallet_7 is clear, pallet_3 is at depot_3, crate_1 is on pallet_5, hoist_0 is available, hoist_5 is available, hoist_10 is available.\nMy goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 11 </COUNT> drive truck_1 from depot_5 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_1 from pallet_5 at depot_5\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 9 </COUNT> Use hoist_5 to load crate_1 into truck_0 at depot_5\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT> drive truck_0 from depot_5 to distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 8 </COUNT> drive truck_0 from depot_5 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 7 </COUNT> Use hoist_10 to unload crate_1 from truck_0 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 6 </COUNT> Use hoist_10 to drop crate_1 to pallet_10 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 5 </COUNT> Use hoist_1 to lift crate_0 from pallet_1 at depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 4 </COUNT> drive truck_0 from distributor_4 to depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT> Use hoist_1 to load crate_0 into truck_0 at depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT> drive truck_0 from depot_1 to distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT> drive truck_0 from depot_1 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT> Use hoist_10 to unload crate_0 from truck_0 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4\n</PLAN>", "plan_length": 12, "raw_plan": ["(drive truck1 depot5 distributor4)", "(lift hoist5 crate1 pallet5 depot5)", "(load hoist5 crate1 truck0 depot5)", "(drive truck0 depot5 distributor4)", "(unload hoist10 crate1 truck0 distributor4)", "(drop hoist10 crate1 pallet10 distributor4)", "(lift hoist1 crate0 pallet1 depot1)", "(drive truck0 distributor4 depot1)", "(load hoist1 crate0 truck0 depot1)", "(drive truck0 depot1 distributor4)", "(unload hoist10 crate0 truck0 distributor4)", "(drop hoist10 crate0 crate1 distributor4)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, pallet_0 is clear, hoist_7 is at distributor_1, hoist_1 is at depot_1, hoist_6 is available, pallet_0 is at depot_0, pallet_2 is clear, hoist_3 is at depot_3, hoist_8 is at distributor_2, pallet_9 is at distributor_3, hoist_1 is available, crate_0 is on pallet_1, pallet_4 is at depot_4, hoist_2 is available, hoist_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_1 is at depot_1, hoist_7 is available, hoist_0 is at depot_0, hoist_4 is at depot_4, crate_0 is at depot_1, crate_1 is at depot_5, pallet_9 is clear, crate_1 is clear, truck_0 is at depot_5, hoist_9 is at distributor_3, hoist_8 is available, hoist_3 is available, hoist_2 is at depot_2, hoist_9 is available, pallet_5 is at depot_5, hoist_4 is available, hoist_6 is at distributor_0, pallet_10 is at distributor_4, pallet_2 is at depot_2, hoist_10 is at distributor_4, pallet_10 is clear, truck_1 is at depot_5, crate_0 is clear, pallet_8 is at distributor_2, pallet_8 is clear, pallet_6 is clear, pallet_3 is clear, pallet_4 is clear, pallet_7 is clear, pallet_3 is at depot_3, crate_1 is on pallet_5, hoist_0 is available, hoist_5 is available, hoist_10 is available.My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 11 </COUNT> drive truck_1 from depot_5 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 10 </COUNT> Use hoist_5 to lift crate_1 from pallet_5 at depot_5\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 9 </COUNT> Use hoist_5 to load crate_1 into truck_0 at depot_5\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT> drive truck_0 from depot_5 to distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 8 </COUNT> drive truck_0 from depot_5 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 7 </COUNT> Use hoist_10 to unload crate_1 from truck_0 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 6 </COUNT> Use hoist_10 to drop crate_1 to pallet_10 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 5 </COUNT> Use hoist_1 to lift crate_0 from pallet_1 at depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 4 </COUNT> drive truck_0 from distributor_4 to depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 3 </COUNT> Use hoist_1 to load crate_0 into truck_0 at depot_1\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT> drive truck_0 from depot_1 to distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 2 </COUNT> drive truck_0 from depot_1 to distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 1 </COUNT> Use hoist_10 to unload crate_0 from truck_0 at distributor_4\n <GOAL> My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10. <COUNT> 0 </COUNT> Use hoist_10 to drop crate_0 to crate_1 at distributor_4\n</PLAN>"}
{"domain": "driverlog", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, place_3 and place_0 are linked, path_2-0 and place_2 are connected, driver_1 is at place_1, path_0-1 and place_0 are connected, place_2 and place_1 are linked, place_0 and place_1 are linked, path_2-0 and place_0 are connected, path_2-1 and place_2 are connected, path_2-3 and place_2 are connected, driver_2 is at place_3, path_0-1 and place_1 are connected, place_1 and place_0 are linked, path_2-1 and place_1 are connected, truck_2 is empty, truck_1 is at place_3, place_3 and place_1 are linked, place_0 and place_3 are linked, truck_1 is empty, place_0 and path_2-0 are connected, driver_3 is at place_0, package_1 is at place_1, place_1 and place_2 are linked, place_2 and place_0 are linked, place_1 and place_3 are linked, truck_3 is empty, truck_2 is at place_0, place_2 and place_3 are linked, place_1 and path_2-1 are connected, place_1 and path_0-1 are connected, place_2 and path_2-0 are connected, truck_3 is at place_1, place_0 and place_2 are linked, place_2 and path_2-3 are connected, place_3 and path_2-3 are connected, place_3 and place_2 are linked, place_0 and path_0-1 are connected, path_2-3 and place_3 are connected, place_2 and path_2-1 are connected.\nMy goal is to have that package_1 is at place_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 3 </COUNT> driver_1 boards truck_3 at place_1\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 2 </COUNT> load package_1 into truck_3 at place_1\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 1 </COUNT> driver_1 drives truck_3 from place_1 to place_0\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 0 </COUNT> unload package_1 from truck_3 at place_0\n</PLAN>", "plan_length": 4, "raw_plan": ["(board-truck driver1 truck3 s1)", "(load-truck package1 truck3 s1)", "(drive-truck truck3 s1 s0 driver1)", "(unload-truck package1 truck3 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, place_3 and place_0 are linked, path_2-0 and place_2 are connected, driver_1 is at place_1, path_0-1 and place_0 are connected, place_2 and place_1 are linked, place_0 and place_1 are linked, path_2-0 and place_0 are connected, path_2-1 and place_2 are connected, path_2-3 and place_2 are connected, driver_2 is at place_3, path_0-1 and place_1 are connected, place_1 and place_0 are linked, path_2-1 and place_1 are connected, truck_2 is empty, truck_1 is at place_3, place_3 and place_1 are linked, place_0 and place_3 are linked, truck_1 is empty, place_0 and path_2-0 are connected, driver_3 is at place_0, package_1 is at place_1, place_1 and place_2 are linked, place_2 and place_0 are linked, place_1 and place_3 are linked, truck_3 is empty, truck_2 is at place_0, place_2 and place_3 are linked, place_1 and path_2-1 are connected, place_1 and path_0-1 are connected, place_2 and path_2-0 are connected, truck_3 is at place_1, place_0 and place_2 are linked, place_2 and path_2-3 are connected, place_3 and path_2-3 are connected, place_3 and place_2 are linked, place_0 and path_0-1 are connected, path_2-3 and place_3 are connected, place_2 and path_2-1 are connected.My goal is to have that package_1 is at place_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 3 </COUNT> driver_1 boards truck_3 at place_1\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 2 </COUNT> load package_1 into truck_3 at place_1\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 1 </COUNT> driver_1 drives truck_3 from place_1 to place_0\n <GOAL> My goal is to have that package_1 is at place_0. <COUNT> 0 </COUNT> unload package_1 from truck_3 at place_0\n</PLAN>"}
{"domain": "driverlog", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, truck_1 is empty, truck_2 is empty, place_0 and place_1 are linked, place_0 and path_0-1 are connected, driver_1 is at place_1, place_1 and path_0-1 are connected, place_1 and place_0 are linked, driver_3 is at place_0, package_1 is at place_0, truck_2 is at place_0, truck_1 is at place_0, driver_2 is at place_1, path_0-1 and place_0 are connected, path_0-1 and place_1 are connected.\nMy goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 4 </COUNT> driver_3 boards truck_2 at place_0\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 3 </COUNT> driver_3 drives truck_2 from place_0 to place_1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 2 </COUNT> driver_3 disembarks from truck_2 at place_1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from place_1 to path_0-1 WRONG \n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 1 </COUNT> driver_3 walks from place_1 to path_0-1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from path_0-1 to place_0\n</PLAN>", "plan_length": 5, "raw_plan": ["(board-truck driver3 truck2 s0)", "(drive-truck truck2 s0 s1 driver3)", "(disembark-truck driver3 truck2 s1)", "(walk driver3 s1 p0-1)", "(walk driver3 p0-1 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, truck_1 is empty, truck_2 is empty, place_0 and place_1 are linked, place_0 and path_0-1 are connected, driver_1 is at place_1, place_1 and path_0-1 are connected, place_1 and place_0 are linked, driver_3 is at place_0, package_1 is at place_0, truck_2 is at place_0, truck_1 is at place_0, driver_2 is at place_1, path_0-1 and place_0 are connected, path_0-1 and place_1 are connected.My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 4 </COUNT> driver_3 boards truck_2 at place_0\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 3 </COUNT> driver_3 drives truck_2 from place_0 to place_1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 2 </COUNT> driver_3 disembarks from truck_2 at place_1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from place_1 to path_0-1 WRONG \n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 1 </COUNT> driver_3 walks from place_1 to path_0-1\n <GOAL> My goal is to have that truck_2 is at place_1, package_1 is at place_0, driver_3 is at place_0, driver_2 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from path_0-1 to place_0\n</PLAN>"}
{"domain": "driverlog", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, package_2 is at place_0, driver_1 is at place_3, truck_2 is empty, path_1-3 and place_1 are connected, place_2 and place_0 are linked, path_0-1 and place_0 are connected, truck_3 is at place_3, place_3 and path_3-2 are connected, place_1 and place_3 are linked, place_3 and place_0 are linked, package_3 is at place_2, place_0 and place_2 are linked, place_3 and path_3-0 are connected, place_0 and path_0-1 are connected, place_0 and path_3-0 are connected, package_1 is at place_1, place_0 and place_3 are linked, place_3 and place_1 are linked, truck_1 is at place_1, place_1 and path_0-1 are connected, place_1 and path_1-3 are connected, place_2 and place_3 are linked, path_0-1 and place_1 are connected, place_2 and place_1 are linked, path_3-0 and place_0 are connected, place_2 and path_3-2 are connected, place_3 and path_1-3 are connected, truck_1 is empty, place_3 and place_2 are linked, path_3-0 and place_3 are connected, truck_3 is empty, place_0 and place_1 are linked, place_1 and place_2 are linked, truck_2 is at place_1, place_1 and place_0 are linked, path_3-2 and place_2 are connected, path_3-2 and place_3 are connected, path_1-3 and place_3 are connected.\nMy goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT> driver_1 boards truck_3 at place_3 WRONG \n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT> load package_1 into truck_3 at place_1 WRONG \n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT> driver_1 boards truck_3 at place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT> driver_1 drives truck_3 from place_3 to place_1\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT> load package_1 into truck_3 at place_1\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT> driver_1 drives truck_3 from place_1 to place_0\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT> driver_1 drives truck_3 from place_0 to place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT> unload package_1 from truck_3 at place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT> driver_1 drives truck_3 from place_3 to place_0\n</PLAN>", "plan_length": 7, "raw_plan": ["(board-truck driver1 truck3 s3)", "(drive-truck truck3 s3 s1 driver1)", "(load-truck package1 truck3 s1)", "(drive-truck truck3 s1 s0 driver1)", "(drive-truck truck3 s0 s3 driver1)", "(unload-truck package1 truck3 s3)", "(drive-truck truck3 s3 s0 driver1)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, package_2 is at place_0, driver_1 is at place_3, truck_2 is empty, path_1-3 and place_1 are connected, place_2 and place_0 are linked, path_0-1 and place_0 are connected, truck_3 is at place_3, place_3 and path_3-2 are connected, place_1 and place_3 are linked, place_3 and place_0 are linked, package_3 is at place_2, place_0 and place_2 are linked, place_3 and path_3-0 are connected, place_0 and path_0-1 are connected, place_0 and path_3-0 are connected, package_1 is at place_1, place_0 and place_3 are linked, place_3 and place_1 are linked, truck_1 is at place_1, place_1 and path_0-1 are connected, place_1 and path_1-3 are connected, place_2 and place_3 are linked, path_0-1 and place_1 are connected, place_2 and place_1 are linked, path_3-0 and place_0 are connected, place_2 and path_3-2 are connected, place_3 and path_1-3 are connected, truck_1 is empty, place_3 and place_2 are linked, path_3-0 and place_3 are connected, truck_3 is empty, place_0 and place_1 are linked, place_1 and place_2 are linked, truck_2 is at place_1, place_1 and place_0 are linked, path_3-2 and place_2 are connected, path_3-2 and place_3 are connected, path_1-3 and place_3 are connected.My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT> driver_1 boards truck_3 at place_3 WRONG \n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT> load package_1 into truck_3 at place_1 WRONG \n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 6 </COUNT> driver_1 boards truck_3 at place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 5 </COUNT> driver_1 drives truck_3 from place_3 to place_1\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 4 </COUNT> load package_1 into truck_3 at place_1\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 3 </COUNT> driver_1 drives truck_3 from place_1 to place_0\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 2 </COUNT> driver_1 drives truck_3 from place_0 to place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 1 </COUNT> unload package_1 from truck_3 at place_3\n <GOAL> My goal is to have that package_3 is at place_2, truck_3 is at place_0, package_1 is at place_3, package_2 is at place_0, truck_1 is at place_1. <COUNT> 0 </COUNT> driver_1 drives truck_3 from place_3 to place_0\n</PLAN>"}
{"domain": "driverlog", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, place_1 and place_0 are linked, place_0 and place_1 are linked, place_0 and path_1-0 are connected, truck_1 is empty, place_1 and path_1-0 are connected, driver_1 is at place_1, truck_1 is at place_1, driver_2 is at place_1, path_1-0 and place_0 are connected, package_1 is at place_1, path_1-0 and place_1 are connected.\nMy goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 6 </COUNT> driver_1 boards truck_1 at place_1\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 5 </COUNT> load package_1 into truck_1 at place_1\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 3 </COUNT> driver_2 walks from path_1-0 to place_0 WRONG \n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 4 </COUNT> driver_2 walks from place_1 to path_1-0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 3 </COUNT> driver_2 walks from path_1-0 to place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 2 </COUNT> driver_1 drives truck_1 from place_1 to place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 1 </COUNT> unload package_1 from truck_1 at place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 0 </COUNT> driver_1 drives truck_1 from place_0 to place_1\n</PLAN>", "plan_length": 7, "raw_plan": ["(board-truck driver1 truck1 s1)", "(load-truck package1 truck1 s1)", "(walk driver2 s1 p1-0)", "(walk driver2 p1-0 s0)", "(drive-truck truck1 s1 s0 driver1)", "(unload-truck package1 truck1 s0)", "(drive-truck truck1 s0 s1 driver1)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, place_1 and place_0 are linked, place_0 and place_1 are linked, place_0 and path_1-0 are connected, truck_1 is empty, place_1 and path_1-0 are connected, driver_1 is at place_1, truck_1 is at place_1, driver_2 is at place_1, path_1-0 and place_0 are connected, package_1 is at place_1, path_1-0 and place_1 are connected.My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 6 </COUNT> driver_1 boards truck_1 at place_1\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 5 </COUNT> load package_1 into truck_1 at place_1\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 3 </COUNT> driver_2 walks from path_1-0 to place_0 WRONG \n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 4 </COUNT> driver_2 walks from place_1 to path_1-0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 3 </COUNT> driver_2 walks from path_1-0 to place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 2 </COUNT> driver_1 drives truck_1 from place_1 to place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 1 </COUNT> unload package_1 from truck_1 at place_0\n <GOAL> My goal is to have that truck_1 is at place_1, driver_2 is at place_0, package_1 is at place_0. <COUNT> 0 </COUNT> driver_1 drives truck_1 from place_0 to place_1\n</PLAN>"}
{"domain": "driverlog", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.", "input": "As initial conditions I have that, driver_4 is at place_0, place_1 and place_0 are linked, driver_3 is at place_1, truck_1 is at place_0, place_0 and place_1 are linked, driver_2 is at place_1, place_0 and path_1-0 are connected, truck_1 is empty, path_1-0 and place_1 are connected, package_1 is at place_0, place_1 and path_1-0 are connected, driver_1 is at place_1, path_1-0 and place_0 are connected.\nMy goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 5 </COUNT> driver_4 boards truck_1 at place_0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 4 </COUNT> load package_1 into truck_1 at place_0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 3 </COUNT> driver_4 drives truck_1 from place_0 to place_1\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 2 </COUNT> driver_3 walks from path_1-0 to place_0 WRONG \n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 2 </COUNT> unload package_1 from truck_1 at place_1\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 1 </COUNT> driver_3 walks from place_1 to path_1-0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from path_1-0 to place_0\n</PLAN>", "plan_length": 6, "raw_plan": ["(board-truck driver4 truck1 s0)", "(load-truck package1 truck1 s0)", "(drive-truck truck1 s0 s1 driver4)", "(unload-truck package1 truck1 s1)", "(walk driver3 s1 p1-0)", "(walk driver3 p1-0 s0)"], "full_text_prompt": "I have to plan how to transport objects between locations using trucks driven by drivers. The drivers can walk between locations, board and disembark from trucks, and drive trucks between locations. The trucks can be loaded and unloaded with objects.\nHere are the actions that can be performed:\nLoad an object into a truck.\nUnload an object from a truck.\nA driver boards a truck.\nA driver disembarks from a truck.\nA driver drives a truck from one location to another location.\nA driver walks from one location to another location.\nThe following are the restrictions on the actions:\nAn object can be loaded into a truck only if the object is at the same location as the truck.\nOnce an object is loaded into a truck, the object is not at the location but is in the truck.\nAn object can be unloaded from a truck only if the object is in the truck.\nOnce an object is unloaded from a truck, the object is not in the truck but is at the location of the truck.\nA driver can board a truck only if the driver is at the same location as the truck.\nA driver can board a truck only if the truck is empty.\nOnce a driver boards a truck, we say the driver is driving the truck.\nOnce a driver boards a truck, the driver is no longer at the location.\nOnce a driver boards a truck, the truck is no longer empty.\nA driver can disembark from a truck only if the driver is driving the truck.\nOnce a driver disembarks from a truck, we say the driver is no longer driving the truck.\nOnce a driver disembarks from a truck, the driver is at the location of the truck.\nOnce a driver disembarks from a truck, the truck is empty.\nA driver can drive a truck from one location to another location only if the driver is driving the truck and the truck is at the from-location.\nA driver can drive a truck from one location to another location only if the from-location and to-location are linked.\nOnce a driver drives a truck from one location to another location, the truck is at the to-location and is no longer at the from-location.\nA driver can walk from one location to another location only if the driver is at the from-location and the from-location and to-location are linked.\nOnce a driver walks from one location to another location, the driver is at the to-location and is no longer at the from-location.As initial conditions I have that, driver_4 is at place_0, place_1 and place_0 are linked, driver_3 is at place_1, truck_1 is at place_0, place_0 and place_1 are linked, driver_2 is at place_1, place_0 and path_1-0 are connected, truck_1 is empty, path_1-0 and place_1 are connected, package_1 is at place_0, place_1 and path_1-0 are connected, driver_1 is at place_1, path_1-0 and place_0 are connected.My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 5 </COUNT> driver_4 boards truck_1 at place_0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 4 </COUNT> load package_1 into truck_1 at place_0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 3 </COUNT> driver_4 drives truck_1 from place_0 to place_1\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 2 </COUNT> driver_3 walks from path_1-0 to place_0 WRONG \n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 2 </COUNT> unload package_1 from truck_1 at place_1\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 1 </COUNT> driver_3 walks from place_1 to path_1-0\n <GOAL> My goal is to have that driver_3 is at place_0, driver_1 is at place_1, package_1 is at place_1. <COUNT> 0 </COUNT> driver_3 walks from path_1-0 to place_0\n</PLAN>"}
{"domain": "grippers", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_2 is at room_2, robot_2's left_gripper_2 is free, robot_1's left_gripper_1 is free, robot_4 is at room_5, robot_4's left_gripper_4 is free, ball_4 is at room_1, robot_4's right_gripper_4 is free, ball_3 is at room_5, robot_1 is at room_1, ball_2 is at room_3, robot_3's left_gripper_3 is free, robot_2's right_gripper_2 is free, ball_1 is at room_2, ball_5 is at room_5, robot_5's right_gripper_5 is free, robot_3's right_gripper_3 is free, robot_3 is at room_2, robot_1's right_gripper_1 is free, robot_5 is at room_1, ball_6 is at room_1, robot_5's left_gripper_5 is free.\nMy goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 9 </COUNT> robot_5 picks ball_6 at room_1 with left_gripper_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 8 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2 WRONG \n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 8 </COUNT> move robot_5 from room_1 to room_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 7 </COUNT> move robot_2 from room_5 to room_2 WRONG \n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 7 </COUNT> robot_5 drops ball_6 at room_4 with left_gripper_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 6 </COUNT> robot_4 picks ball_3 at room_5 with left_gripper_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 5 </COUNT> move robot_4 from room_5 to room_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 4 </COUNT> robot_4 drops ball_3 at room_4 with left_gripper_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 3 </COUNT> move robot_2 from room_2 to room_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 picks ball_5 at room_5 with left_gripper_2\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 1 </COUNT> move robot_2 from room_5 to room_2\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2\n</PLAN>", "plan_length": 10, "raw_plan": ["(pick robot5 ball6 room1 lgripper5)", "(move robot5 room1 room4)", "(drop robot5 ball6 room4 lgripper5)", "(pick robot4 ball3 room5 lgripper4)", "(move robot4 room5 room4)", "(drop robot4 ball3 room4 lgripper4)", "(move robot2 room2 room5)", "(pick robot2 ball5 room5 lgripper2)", "(move robot2 room5 room2)", "(drop robot2 ball5 room2 lgripper2)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_2 is at room_2, robot_2's left_gripper_2 is free, robot_1's left_gripper_1 is free, robot_4 is at room_5, robot_4's left_gripper_4 is free, ball_4 is at room_1, robot_4's right_gripper_4 is free, ball_3 is at room_5, robot_1 is at room_1, ball_2 is at room_3, robot_3's left_gripper_3 is free, robot_2's right_gripper_2 is free, ball_1 is at room_2, ball_5 is at room_5, robot_5's right_gripper_5 is free, robot_3's right_gripper_3 is free, robot_3 is at room_2, robot_1's right_gripper_1 is free, robot_5 is at room_1, ball_6 is at room_1, robot_5's left_gripper_5 is free.My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 9 </COUNT> robot_5 picks ball_6 at room_1 with left_gripper_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 8 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2 WRONG \n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 8 </COUNT> move robot_5 from room_1 to room_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 7 </COUNT> move robot_2 from room_5 to room_2 WRONG \n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 7 </COUNT> robot_5 drops ball_6 at room_4 with left_gripper_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 6 </COUNT> robot_4 picks ball_3 at room_5 with left_gripper_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 5 </COUNT> move robot_4 from room_5 to room_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 4 </COUNT> robot_4 drops ball_3 at room_4 with left_gripper_4\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 3 </COUNT> move robot_2 from room_2 to room_5\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 picks ball_5 at room_5 with left_gripper_2\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 1 </COUNT> move robot_2 from room_5 to room_2\n <GOAL> My goal is to have that ball_6 is at room_4, ball_4 is at room_1, ball_3 is at room_4, ball_1 is at room_2, ball_2 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2\n</PLAN>"}
{"domain": "grippers", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_2's left_gripper_2 is free, robot_2's right_gripper_2 is free, ball_2 is at room_3, robot_1's right_gripper_1 is free, ball_4 is at room_1, ball_3 is at room_5, robot_1 is at room_3, robot_1's left_gripper_1 is free, ball_1 is at room_4, robot_2 is at room_1.\nMy goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 10 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 9 </COUNT> robot_1 drops ball_4 at room_3 with left_gripper_1 WRONG \n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 9 </COUNT> move robot_1 from room_3 to room_4\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 8 </COUNT> robot_1 picks ball_1 at room_4 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 7 </COUNT> move robot_1 from room_4 to room_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 6 </COUNT> robot_1 drops ball_1 at room_1 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 5 </COUNT> robot_1 picks ball_4 at room_1 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 4 </COUNT> move robot_1 from room_1 to room_3\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 3 </COUNT> robot_1 picks ball_2 at room_3 with right_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 2 </COUNT> move robot_1 from room_3 to room_1 WRONG \n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 2 </COUNT> robot_1 drops ball_4 at room_3 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 1 </COUNT> move robot_1 from room_3 to room_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 0 </COUNT> robot_1 drops ball_2 at room_1 with right_gripper_1\n</PLAN>", "plan_length": 11, "raw_plan": ["(move robot2 room1 room2)", "(move robot1 room3 room4)", "(pick robot1 ball1 room4 lgripper1)", "(move robot1 room4 room1)", "(drop robot1 ball1 room1 lgripper1)", "(pick robot1 ball4 room1 lgripper1)", "(move robot1 room1 room3)", "(pick robot1 ball2 room3 rgripper1)", "(drop robot1 ball4 room3 lgripper1)", "(move robot1 room3 room1)", "(drop robot1 ball2 room1 rgripper1)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_2's left_gripper_2 is free, robot_2's right_gripper_2 is free, ball_2 is at room_3, robot_1's right_gripper_1 is free, ball_4 is at room_1, ball_3 is at room_5, robot_1 is at room_3, robot_1's left_gripper_1 is free, ball_1 is at room_4, robot_2 is at room_1.My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 10 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 9 </COUNT> robot_1 drops ball_4 at room_3 with left_gripper_1 WRONG \n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 9 </COUNT> move robot_1 from room_3 to room_4\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 8 </COUNT> robot_1 picks ball_1 at room_4 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 7 </COUNT> move robot_1 from room_4 to room_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 6 </COUNT> robot_1 drops ball_1 at room_1 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 5 </COUNT> robot_1 picks ball_4 at room_1 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 4 </COUNT> move robot_1 from room_1 to room_3\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 3 </COUNT> robot_1 picks ball_2 at room_3 with right_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 2 </COUNT> move robot_1 from room_3 to room_1 WRONG \n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 2 </COUNT> robot_1 drops ball_4 at room_3 with left_gripper_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 1 </COUNT> move robot_1 from room_3 to room_1\n <GOAL> My goal is to have that ball_1 is at room_1, ball_4 is at room_3, ball_2 is at room_1, ball_3 is at room_5. <COUNT> 0 </COUNT> robot_1 drops ball_2 at room_1 with right_gripper_1\n</PLAN>"}
{"domain": "grippers", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_1 is at room_2, robot_2's right_gripper_2 is free, ball_1 is at room_1, ball_5 is at room_1, ball_4 is at room_2, ball_3 is at room_2, robot_2 is at room_3, ball_2 is at room_3, robot_1's right_gripper_1 is free, ball_6 is at room_3, robot_1's left_gripper_1 is free, robot_2's left_gripper_2 is free.\nMy goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 6 </COUNT> move robot_2 from room_3 to room_1\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 5 </COUNT> robot_2 picks ball_5 at room_1 with left_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 4 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 picks ball_4 at room_2 with right_gripper_2 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 3 </COUNT> robot_2 picks ball_4 at room_2 with right_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_4 at room_3 with right_gripper_2 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> move robot_2 from room_2 to room_3 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 1 </COUNT> move robot_2 from room_2 to room_3\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_4 at room_3 with right_gripper_2\n</PLAN>", "plan_length": 7, "raw_plan": ["(move robot2 room3 room1)", "(pick robot2 ball5 room1 lgripper2)", "(move robot2 room1 room2)", "(pick robot2 ball4 room2 rgripper2)", "(drop robot2 ball5 room2 lgripper2)", "(move robot2 room2 room3)", "(drop robot2 ball4 room3 rgripper2)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_1 is at room_2, robot_2's right_gripper_2 is free, ball_1 is at room_1, ball_5 is at room_1, ball_4 is at room_2, ball_3 is at room_2, robot_2 is at room_3, ball_2 is at room_3, robot_1's right_gripper_1 is free, ball_6 is at room_3, robot_1's left_gripper_1 is free, robot_2's left_gripper_2 is free.My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 6 </COUNT> move robot_2 from room_3 to room_1\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 5 </COUNT> robot_2 picks ball_5 at room_1 with left_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 4 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 picks ball_4 at room_2 with right_gripper_2 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 3 </COUNT> robot_2 picks ball_4 at room_2 with right_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 2 </COUNT> robot_2 drops ball_5 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_4 at room_3 with right_gripper_2 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> move robot_2 from room_2 to room_3 WRONG \n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 1 </COUNT> move robot_2 from room_2 to room_3\n <GOAL> My goal is to have that ball_2 is at room_3, ball_4 is at room_3, ball_1 is at room_1, ball_3 is at room_2, ball_6 is at room_3, ball_5 is at room_2. <COUNT> 0 </COUNT> robot_2 drops ball_4 at room_3 with right_gripper_2\n</PLAN>"}
{"domain": "grippers", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_1 is at room_1, ball_2 is at room_1, ball_10 is at room_1, robot_3's left_gripper_3 is free, robot_4's left_gripper_4 is free, robot_2's left_gripper_2 is free, ball_5 is at room_2, robot_1's left_gripper_1 is free, ball_1 is at room_1, robot_2 is at room_1, robot_1's right_gripper_1 is free, ball_9 is at room_2, ball_7 is at room_1, robot_2's right_gripper_2 is free, robot_4 is at room_1, ball_3 is at room_2, ball_4 is at room_1, ball_8 is at room_1, ball_6 is at room_1, robot_3's right_gripper_3 is free, robot_4's right_gripper_4 is free, robot_3 is at room_2.\nMy goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 10 </COUNT> move robot_3 from room_1 to room_2 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 10 </COUNT> robot_4 picks ball_10 at room_1 with left_gripper_4\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 9 </COUNT> robot_3 picks ball_5 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 8 </COUNT> move robot_3 from room_2 to room_1\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 5 </COUNT> robot_3 drops ball_5 at room_1 with left_gripper_3 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 7 </COUNT> robot_3 drops ball_5 at room_1 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 6 </COUNT> move robot_4 from room_1 to room_2\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 5 </COUNT> robot_4 drops ball_10 at room_2 with left_gripper_4\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 4 </COUNT> robot_3 picks ball_4 at room_1 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 2 </COUNT> robot_3 picks ball_8 at room_1 with right_gripper_3 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 3 </COUNT> robot_3 picks ball_8 at room_1 with right_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 2 </COUNT> move robot_3 from room_1 to room_2\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 1 </COUNT> robot_3 drops ball_4 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 0 </COUNT> robot_3 drops ball_8 at room_2 with right_gripper_3\n</PLAN>", "plan_length": 11, "raw_plan": ["(pick robot4 ball10 room1 lgripper4)", "(pick robot3 ball5 room2 lgripper3)", "(move robot3 room2 room1)", "(drop robot3 ball5 room1 lgripper3)", "(move robot4 room1 room2)", "(drop robot4 ball10 room2 lgripper4)", "(pick robot3 ball4 room1 lgripper3)", "(pick robot3 ball8 room1 rgripper3)", "(move robot3 room1 room2)", "(drop robot3 ball4 room2 lgripper3)", "(drop robot3 ball8 room2 rgripper3)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_1 is at room_1, ball_2 is at room_1, ball_10 is at room_1, robot_3's left_gripper_3 is free, robot_4's left_gripper_4 is free, robot_2's left_gripper_2 is free, ball_5 is at room_2, robot_1's left_gripper_1 is free, ball_1 is at room_1, robot_2 is at room_1, robot_1's right_gripper_1 is free, ball_9 is at room_2, ball_7 is at room_1, robot_2's right_gripper_2 is free, robot_4 is at room_1, ball_3 is at room_2, ball_4 is at room_1, ball_8 is at room_1, ball_6 is at room_1, robot_3's right_gripper_3 is free, robot_4's right_gripper_4 is free, robot_3 is at room_2.My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 10 </COUNT> move robot_3 from room_1 to room_2 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 10 </COUNT> robot_4 picks ball_10 at room_1 with left_gripper_4\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 9 </COUNT> robot_3 picks ball_5 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 8 </COUNT> move robot_3 from room_2 to room_1\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 5 </COUNT> robot_3 drops ball_5 at room_1 with left_gripper_3 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 7 </COUNT> robot_3 drops ball_5 at room_1 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 6 </COUNT> move robot_4 from room_1 to room_2\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 5 </COUNT> robot_4 drops ball_10 at room_2 with left_gripper_4\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 4 </COUNT> robot_3 picks ball_4 at room_1 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 2 </COUNT> robot_3 picks ball_8 at room_1 with right_gripper_3 WRONG \n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 3 </COUNT> robot_3 picks ball_8 at room_1 with right_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 2 </COUNT> move robot_3 from room_1 to room_2\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 1 </COUNT> robot_3 drops ball_4 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_4 is at room_2, ball_6 is at room_1, ball_5 is at room_1, ball_1 is at room_1, ball_3 is at room_2, ball_8 is at room_2, ball_7 is at room_1, ball_9 is at room_2, ball_10 is at room_2, ball_2 is at room_1. <COUNT> 0 </COUNT> robot_3 drops ball_8 at room_2 with right_gripper_3\n</PLAN>"}
{"domain": "grippers", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.", "input": "As initial conditions I have that, robot_2's left_gripper_2 is free, ball_3 is at room_3, robot_3's right_gripper_3 is free, robot_1's right_gripper_1 is free, robot_1's left_gripper_1 is free, robot_1 is at room_4, robot_2 is at room_3, robot_3 is at room_2, ball_1 is at room_1, ball_4 is at room_3, robot_2's right_gripper_2 is free, ball_2 is at room_2, robot_3's left_gripper_3 is free.\nMy goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 13 </COUNT> robot_3 picks ball_2 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 12 </COUNT> robot_2 picks ball_3 at room_3 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 11 </COUNT> move robot_2 from room_3 to room_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 10 </COUNT> move robot_3 from room_2 to room_4\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 9 </COUNT> robot_3 drops ball_2 at room_4 with left_gripper_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 6 </COUNT> robot_2 picks ball_1 at room_1 with left_gripper_2 WRONG \n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 8 </COUNT> robot_2 drops ball_3 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 7 </COUNT> move robot_2 from room_2 to room_1\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 6 </COUNT> robot_2 picks ball_1 at room_1 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 5 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 4 </COUNT> robot_2 drops ball_1 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 3 </COUNT> move robot_1 from room_4 to room_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 2 </COUNT> robot_1 picks ball_4 at room_3 with left_gripper_1\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 1 </COUNT> move robot_1 from room_3 to room_4\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 0 </COUNT> robot_1 drops ball_4 at room_4 with left_gripper_1\n</PLAN>", "plan_length": 14, "raw_plan": ["(pick robot3 ball2 room2 lgripper3)", "(pick robot2 ball3 room3 lgripper2)", "(move robot2 room3 room2)", "(move robot3 room2 room4)", "(drop robot3 ball2 room4 lgripper3)", "(drop robot2 ball3 room2 lgripper2)", "(move robot2 room2 room1)", "(pick robot2 ball1 room1 lgripper2)", "(move robot2 room1 room2)", "(drop robot2 ball1 room2 lgripper2)", "(move robot1 room4 room3)", "(pick robot1 ball4 room3 lgripper1)", "(move robot1 room3 room4)", "(drop robot1 ball4 room4 lgripper1)"], "full_text_prompt": "I have to plan how to move objects between rooms using a robot with grippers. The robot can move between rooms and pick up or drop objects using its grippers.\nHere are the actions that can be performed:\nMove the robot from one room to another room.\nA robot pick up an object from a room.\nA robot drop an object in a room.\nThe following are the restrictions on the actions:\nA robot can move from one room to another room only if the robot is in the from-room.\nOnce the robot has moved from one room to another room, the robot is no longer in the from-room and is in the to-room.\nA robot can pick up an object from a room only if the robot is in the room and the object is also in the same room.\nA robot can pick up an object from a room only if the robot's gripper is free.\nOnce the robot has picked up an object from a room, the object is no longer in the room and is carried by the robot.\nOnce the robot has picked up an object from a room, the robot's gripper is no longer free.\nA robot can drop an object in a room only if the robot is in the room and the robot is carrying the object.\nOnce the robot has dropped an object in a room, the object is in the room and is no longer carried by the robot.\nOnce the robot has dropped an object in a room, the robot's gripper is free.As initial conditions I have that, robot_2's left_gripper_2 is free, ball_3 is at room_3, robot_3's right_gripper_3 is free, robot_1's right_gripper_1 is free, robot_1's left_gripper_1 is free, robot_1 is at room_4, robot_2 is at room_3, robot_3 is at room_2, ball_1 is at room_1, ball_4 is at room_3, robot_2's right_gripper_2 is free, ball_2 is at room_2, robot_3's left_gripper_3 is free.My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 13 </COUNT> robot_3 picks ball_2 at room_2 with left_gripper_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 12 </COUNT> robot_2 picks ball_3 at room_3 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 11 </COUNT> move robot_2 from room_3 to room_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 10 </COUNT> move robot_3 from room_2 to room_4\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 9 </COUNT> robot_3 drops ball_2 at room_4 with left_gripper_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 6 </COUNT> robot_2 picks ball_1 at room_1 with left_gripper_2 WRONG \n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 8 </COUNT> robot_2 drops ball_3 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 7 </COUNT> move robot_2 from room_2 to room_1\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 6 </COUNT> robot_2 picks ball_1 at room_1 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 5 </COUNT> move robot_2 from room_1 to room_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 4 </COUNT> robot_2 drops ball_1 at room_2 with left_gripper_2\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 3 </COUNT> move robot_1 from room_4 to room_3\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 2 </COUNT> robot_1 picks ball_4 at room_3 with left_gripper_1\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 1 </COUNT> move robot_1 from room_3 to room_4\n <GOAL> My goal is to have that ball_3 is at room_2, ball_4 is at room_4, ball_1 is at room_2, ball_2 is at room_4. <COUNT> 0 </COUNT> robot_1 drops ball_4 at room_4 with left_gripper_1\n</PLAN>"}
{"domain": "logistics", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, location_1-2 is in the city city_1, , location_4-5 is in the city city_4, , location_0-0 is an airport, , truck_3 is at location_3-1, location_0-2 is in the city city_0, , , location_1-0 is in the city city_1, , , , location_0-1 is in the city city_0, , , location_2-0 is an airport, location_3-1 is in the city city_3, , location_4-1 is in the city city_4, truck_4 is at location_4-1, location_1-1 is in the city city_1, , , , airplane_2 is at location_1-0, , , , , , truck_1 is at location_1-0, location_2-2 is in the city city_2, , , , , location_1-0 is an airport, truck_2 is at location_2-5, location_2-1 is in the city city_2, , , airplane_0 is at location_1-0, , location_3-2 is in the city city_3, , location_2-5 is in the city city_2, location_4-3 is in the city city_4, , , location_4-0 is an airport, location_0-4 is in the city city_0, , location_0-3 is in the city city_0, , location_3-3 is in the city city_3, package_0 is at location_0-5, location_4-2 is in the city city_4, location_0-5 is in the city city_0, , , location_4-0 is in the city city_4, , location_2-4 is in the city city_2, location_1-3 is in the city city_1, location_3-0 is in the city city_3, , , location_2-0 is in the city city_2, location_1-5 is in the city city_1, , location_4-4 is in the city city_4, location_3-0 is an airport, location_2-3 is in the city city_2, , , , truck_0 is at location_0-0, location_3-5 is in the city city_3, , location_1-4 is in the city city_1, location_0-0 is in the city city_0, location_3-4 is in the city city_3, , , airplane_1 is at location_2-0, .\nMy goal is to have that package_0 is at location_0-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 4 </COUNT> drive truck_0 from location_0-0 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT> drive truck_0 from location_0-3 to location_0-5 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT> load package_0 into truck_0 at location_0-5\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT> drive truck_0 from location_0-5 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT> unload package_0 from truck_0 at location_0-3\n</PLAN>", "plan_length": 5, "raw_plan": ["(drive-truck t0 l0-0 l0-3 c0)", "(drive-truck t0 l0-3 l0-5 c0)", "(load-truck p0 t0 l0-5)", "(drive-truck t0 l0-5 l0-3 c0)", "(unload-truck p0 t0 l0-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, location_1-2 is in the city city_1, , location_4-5 is in the city city_4, , location_0-0 is an airport, , truck_3 is at location_3-1, location_0-2 is in the city city_0, , , location_1-0 is in the city city_1, , , , location_0-1 is in the city city_0, , , location_2-0 is an airport, location_3-1 is in the city city_3, , location_4-1 is in the city city_4, truck_4 is at location_4-1, location_1-1 is in the city city_1, , , , airplane_2 is at location_1-0, , , , , , truck_1 is at location_1-0, location_2-2 is in the city city_2, , , , , location_1-0 is an airport, truck_2 is at location_2-5, location_2-1 is in the city city_2, , , airplane_0 is at location_1-0, , location_3-2 is in the city city_3, , location_2-5 is in the city city_2, location_4-3 is in the city city_4, , , location_4-0 is an airport, location_0-4 is in the city city_0, , location_0-3 is in the city city_0, , location_3-3 is in the city city_3, package_0 is at location_0-5, location_4-2 is in the city city_4, location_0-5 is in the city city_0, , , location_4-0 is in the city city_4, , location_2-4 is in the city city_2, location_1-3 is in the city city_1, location_3-0 is in the city city_3, , , location_2-0 is in the city city_2, location_1-5 is in the city city_1, , location_4-4 is in the city city_4, location_3-0 is an airport, location_2-3 is in the city city_2, , , , truck_0 is at location_0-0, location_3-5 is in the city city_3, , location_1-4 is in the city city_1, location_0-0 is in the city city_0, location_3-4 is in the city city_3, , , airplane_1 is at location_2-0, .My goal is to have that package_0 is at location_0-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 4 </COUNT> drive truck_0 from location_0-0 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT> drive truck_0 from location_0-3 to location_0-5 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT> load package_0 into truck_0 at location_0-5\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT> drive truck_0 from location_0-5 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT> unload package_0 from truck_0 at location_0-3\n</PLAN>"}
{"domain": "logistics", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, truck_1 is at location_1-2, location_1-0 is an airport, location_3-3 is in the city city_3, , , , , , location_1-2 is in the city city_1, , , location_2-2 is in the city city_2, , truck_2 is at location_2-0, , location_3-5 is in the city city_3, , location_4-1 is in the city city_4, truck_4 is at location_4-0, location_1-5 is in the city city_1, truck_0 is at location_0-0, location_0-1 is in the city city_0, , location_2-4 is in the city city_2, , , , , location_0-4 is in the city city_0, location_2-0 is in the city city_2, , , , , location_0-0 is in the city city_0, , location_2-0 is an airport, location_0-3 is in the city city_0, location_2-1 is in the city city_2, location_4-3 is in the city city_4, , , location_0-0 is an airport, , location_0-2 is in the city city_0, location_1-1 is in the city city_1, , location_2-3 is in the city city_2, , truck_3 is at location_3-1, airplane_2 is at location_0-0, airplane_1 is at location_2-0, , , location_2-5 is in the city city_2, location_1-0 is in the city city_1, , , , , package_0 is at location_3-0, , location_1-3 is in the city city_1, , location_3-0 is in the city city_3, location_4-4 is in the city city_4, location_4-5 is in the city city_4, , location_4-2 is in the city city_4, , , , location_1-4 is in the city city_1, location_3-2 is in the city city_3, , location_3-0 is an airport, , location_3-4 is in the city city_3, location_4-0 is an airport, , , location_0-5 is in the city city_0, , , location_4-0 is in the city city_4, , airplane_0 is at location_1-0, location_3-1 is in the city city_3.\nMy goal is to have that package_0 is at location_4-5.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 6 </COUNT> fly airplane_0 from location_1-0 to location_3-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 5 </COUNT> load package_0 into airplane_0 at location_3-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5 WRONG \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 4 </COUNT> fly airplane_0 from location_3-0 to location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 3 </COUNT> unload package_0 from airplane_0 at location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 2 </COUNT> load package_0 into truck_4 at location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5 WRONG \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 1 </COUNT> drive truck_4 from location_4-0 to location_4-5 in city_4\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5\n</PLAN>", "plan_length": 7, "raw_plan": ["(fly-airplane a0 l1-0 l3-0)", "(load-airplane p0 a0 l3-0)", "(fly-airplane a0 l3-0 l4-0)", "(unload-airplane p0 a0 l4-0)", "(load-truck p0 t4 l4-0)", "(drive-truck t4 l4-0 l4-5 c4)", "(unload-truck p0 t4 l4-5)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, truck_1 is at location_1-2, location_1-0 is an airport, location_3-3 is in the city city_3, , , , , , location_1-2 is in the city city_1, , , location_2-2 is in the city city_2, , truck_2 is at location_2-0, , location_3-5 is in the city city_3, , location_4-1 is in the city city_4, truck_4 is at location_4-0, location_1-5 is in the city city_1, truck_0 is at location_0-0, location_0-1 is in the city city_0, , location_2-4 is in the city city_2, , , , , location_0-4 is in the city city_0, location_2-0 is in the city city_2, , , , , location_0-0 is in the city city_0, , location_2-0 is an airport, location_0-3 is in the city city_0, location_2-1 is in the city city_2, location_4-3 is in the city city_4, , , location_0-0 is an airport, , location_0-2 is in the city city_0, location_1-1 is in the city city_1, , location_2-3 is in the city city_2, , truck_3 is at location_3-1, airplane_2 is at location_0-0, airplane_1 is at location_2-0, , , location_2-5 is in the city city_2, location_1-0 is in the city city_1, , , , , package_0 is at location_3-0, , location_1-3 is in the city city_1, , location_3-0 is in the city city_3, location_4-4 is in the city city_4, location_4-5 is in the city city_4, , location_4-2 is in the city city_4, , , , location_1-4 is in the city city_1, location_3-2 is in the city city_3, , location_3-0 is an airport, , location_3-4 is in the city city_3, location_4-0 is an airport, , , location_0-5 is in the city city_0, , , location_4-0 is in the city city_4, , airplane_0 is at location_1-0, location_3-1 is in the city city_3.My goal is to have that package_0 is at location_4-5.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 6 </COUNT> fly airplane_0 from location_1-0 to location_3-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 5 </COUNT> load package_0 into airplane_0 at location_3-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5 WRONG \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 4 </COUNT> fly airplane_0 from location_3-0 to location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 3 </COUNT> unload package_0 from airplane_0 at location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 2 </COUNT> load package_0 into truck_4 at location_4-0\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5 WRONG \n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 1 </COUNT> drive truck_4 from location_4-0 to location_4-5 in city_4\n <GOAL> My goal is to have that package_0 is at location_4-5. <COUNT> 0 </COUNT> unload package_0 from truck_4 at location_4-5\n</PLAN>"}
{"domain": "logistics", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, , , , , location_3-1 is in the city city_3, , , location_3-0 is in the city city_3, truck_2 is at location_2-5, location_1-5 is in the city city_1, , , , , airplane_1 is at location_0-0, , location_0-5 is in the city city_0, , , location_0-4 is in the city city_0, , , truck_4 is at location_4-5, , , location_3-5 is in the city city_3, location_0-3 is in the city city_0, truck_0 is at location_0-0, , , location_1-2 is in the city city_1, location_4-0 is an airport, location_4-3 is in the city city_4, location_4-2 is in the city city_4, location_4-4 is in the city city_4, location_3-3 is in the city city_3, location_1-0 is in the city city_1, , , location_1-4 is in the city city_1, package_0 is at location_1-2, location_0-2 is in the city city_0, location_2-4 is in the city city_2, location_3-0 is an airport, , location_4-0 is in the city city_4, , location_2-0 is an airport, , , , , location_0-0 is an airport, location_2-3 is in the city city_2, , location_3-4 is in the city city_3, , location_1-0 is an airport, , truck_3 is at location_3-0, , location_2-1 is in the city city_2, location_0-0 is in the city city_0, location_0-1 is in the city city_0, , location_1-1 is in the city city_1, location_4-5 is in the city city_4, , , , , , location_2-0 is in the city city_2, airplane_0 is at location_3-0, location_2-5 is in the city city_2, location_2-2 is in the city city_2, , , , , location_1-3 is in the city city_1, airplane_2 is at location_0-0, , , truck_1 is at location_1-2, location_3-2 is in the city city_3, , location_4-1 is in the city city_4.\nMy goal is to have that package_0 is at location_1-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 2 </COUNT> load package_0 into truck_1 at location_1-2\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT> unload package_0 from truck_1 at location_1-3 WRONG \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT> drive truck_1 from location_1-2 to location_1-3 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 0 </COUNT> unload package_0 from truck_1 at location_1-3\n</PLAN>", "plan_length": 3, "raw_plan": ["(load-truck p0 t1 l1-2)", "(drive-truck t1 l1-2 l1-3 c1)", "(unload-truck p0 t1 l1-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, , , , , location_3-1 is in the city city_3, , , location_3-0 is in the city city_3, truck_2 is at location_2-5, location_1-5 is in the city city_1, , , , , airplane_1 is at location_0-0, , location_0-5 is in the city city_0, , , location_0-4 is in the city city_0, , , truck_4 is at location_4-5, , , location_3-5 is in the city city_3, location_0-3 is in the city city_0, truck_0 is at location_0-0, , , location_1-2 is in the city city_1, location_4-0 is an airport, location_4-3 is in the city city_4, location_4-2 is in the city city_4, location_4-4 is in the city city_4, location_3-3 is in the city city_3, location_1-0 is in the city city_1, , , location_1-4 is in the city city_1, package_0 is at location_1-2, location_0-2 is in the city city_0, location_2-4 is in the city city_2, location_3-0 is an airport, , location_4-0 is in the city city_4, , location_2-0 is an airport, , , , , location_0-0 is an airport, location_2-3 is in the city city_2, , location_3-4 is in the city city_3, , location_1-0 is an airport, , truck_3 is at location_3-0, , location_2-1 is in the city city_2, location_0-0 is in the city city_0, location_0-1 is in the city city_0, , location_1-1 is in the city city_1, location_4-5 is in the city city_4, , , , , , location_2-0 is in the city city_2, airplane_0 is at location_3-0, location_2-5 is in the city city_2, location_2-2 is in the city city_2, , , , , location_1-3 is in the city city_1, airplane_2 is at location_0-0, , , truck_1 is at location_1-2, location_3-2 is in the city city_3, , location_4-1 is in the city city_4.My goal is to have that package_0 is at location_1-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 2 </COUNT> load package_0 into truck_1 at location_1-2\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT> unload package_0 from truck_1 at location_1-3 WRONG \n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 1 </COUNT> drive truck_1 from location_1-2 to location_1-3 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-3. <COUNT> 0 </COUNT> unload package_0 from truck_1 at location_1-3\n</PLAN>"}
{"domain": "logistics", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, location_1-2 is in the city city_1, location_2-3 is in the city city_2, , location_1-5 is in the city city_1, location_2-5 is in the city city_2, , , , , location_4-5 is in the city city_4, , airplane_0 is at location_1-0, , , location_4-0 is an airport, , location_3-1 is in the city city_3, , truck_3 is at location_3-3, location_4-0 is in the city city_4, , location_3-0 is in the city city_3, airplane_2 is at location_3-0, truck_0 is at location_0-3, location_1-4 is in the city city_1, , , , location_0-3 is in the city city_0, , location_2-0 is an airport, , location_2-1 is in the city city_2, location_0-1 is in the city city_0, , , location_4-2 is in the city city_4, package_0 is at location_1-1, , location_1-3 is in the city city_1, , , , location_4-4 is in the city city_4, , location_0-5 is in the city city_0, , , truck_2 is at location_2-2, location_3-2 is in the city city_3, truck_4 is at location_4-0, location_4-1 is in the city city_4, location_2-0 is in the city city_2, , location_0-0 is in the city city_0, location_3-5 is in the city city_3, location_3-4 is in the city city_3, , , truck_1 is at location_1-0, , , airplane_1 is at location_1-0, , , location_0-0 is an airport, , location_4-3 is in the city city_4, , , , location_3-0 is an airport, , location_1-0 is in the city city_1, location_0-2 is in the city city_0, location_1-0 is an airport, , , , location_2-4 is in the city city_2, location_1-1 is in the city city_1, location_2-2 is in the city city_2, , location_0-4 is in the city city_0, , , , location_3-3 is in the city city_3.\nMy goal is to have that package_0 is at location_1-2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 3 </COUNT> drive truck_1 from location_1-0 to location_1-1 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 2 </COUNT> load package_0 into truck_1 at location_1-1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT> drive truck_1 from location_1-1 to location_1-2 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT> unload package_0 from truck_1 at location_1-2 WRONG \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 0 </COUNT> unload package_0 from truck_1 at location_1-2\n</PLAN>", "plan_length": 4, "raw_plan": ["(drive-truck t1 l1-0 l1-1 c1)", "(load-truck p0 t1 l1-1)", "(drive-truck t1 l1-1 l1-2 c1)", "(unload-truck p0 t1 l1-2)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, location_1-2 is in the city city_1, location_2-3 is in the city city_2, , location_1-5 is in the city city_1, location_2-5 is in the city city_2, , , , , location_4-5 is in the city city_4, , airplane_0 is at location_1-0, , , location_4-0 is an airport, , location_3-1 is in the city city_3, , truck_3 is at location_3-3, location_4-0 is in the city city_4, , location_3-0 is in the city city_3, airplane_2 is at location_3-0, truck_0 is at location_0-3, location_1-4 is in the city city_1, , , , location_0-3 is in the city city_0, , location_2-0 is an airport, , location_2-1 is in the city city_2, location_0-1 is in the city city_0, , , location_4-2 is in the city city_4, package_0 is at location_1-1, , location_1-3 is in the city city_1, , , , location_4-4 is in the city city_4, , location_0-5 is in the city city_0, , , truck_2 is at location_2-2, location_3-2 is in the city city_3, truck_4 is at location_4-0, location_4-1 is in the city city_4, location_2-0 is in the city city_2, , location_0-0 is in the city city_0, location_3-5 is in the city city_3, location_3-4 is in the city city_3, , , truck_1 is at location_1-0, , , airplane_1 is at location_1-0, , , location_0-0 is an airport, , location_4-3 is in the city city_4, , , , location_3-0 is an airport, , location_1-0 is in the city city_1, location_0-2 is in the city city_0, location_1-0 is an airport, , , , location_2-4 is in the city city_2, location_1-1 is in the city city_1, location_2-2 is in the city city_2, , location_0-4 is in the city city_0, , , , location_3-3 is in the city city_3.My goal is to have that package_0 is at location_1-2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 3 </COUNT> drive truck_1 from location_1-0 to location_1-1 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 2 </COUNT> load package_0 into truck_1 at location_1-1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT> drive truck_1 from location_1-1 to location_1-2 in city_1\n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 1 </COUNT> unload package_0 from truck_1 at location_1-2 WRONG \n <GOAL> My goal is to have that package_0 is at location_1-2. <COUNT> 0 </COUNT> unload package_0 from truck_1 at location_1-2\n</PLAN>"}
{"domain": "logistics", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.", "input": "As initial conditions I have that, location_4-0 is in the city city_4, , , , , , , , location_3-0 is in the city city_3, location_4-1 is in the city city_4, location_3-3 is in the city city_3, location_0-2 is in the city city_0, location_1-0 is in the city city_1, , , location_2-4 is in the city city_2, , location_2-3 is in the city city_2, , , , , , , , location_3-4 is in the city city_3, , location_2-0 is an airport, , truck_2 is at location_2-5, location_1-0 is an airport, truck_4 is at location_4-5, location_1-5 is in the city city_1, truck_0 is at location_0-3, , location_0-3 is in the city city_0, location_1-1 is in the city city_1, location_3-2 is in the city city_3, location_1-3 is in the city city_1, , location_1-4 is in the city city_1, airplane_0 is at location_4-0, location_4-4 is in the city city_4, , , location_0-1 is in the city city_0, , , , , , , , truck_3 is at location_3-5, , , location_2-5 is in the city city_2, location_3-1 is in the city city_3, airplane_2 is at location_1-0, airplane_1 is at location_0-0, , package_0 is at location_0-5, location_0-5 is in the city city_0, location_2-0 is in the city city_2, , truck_1 is at location_1-0, , location_0-0 is an airport, location_4-5 is in the city city_4, , , location_0-4 is in the city city_0, location_4-2 is in the city city_4, location_4-3 is in the city city_4, location_2-1 is in the city city_2, , location_1-2 is in the city city_1, location_0-0 is in the city city_0, , , location_3-5 is in the city city_3, location_4-0 is an airport, , location_2-2 is in the city city_2, , , , location_3-0 is an airport.\nMy goal is to have that package_0 is at location_0-3.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT> drive truck_0 from location_0-3 to location_0-5 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT> load package_0 into truck_0 at location_0-5\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT> drive truck_0 from location_0-5 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT> unload package_0 from truck_0 at location_0-3\n</PLAN>", "plan_length": 4, "raw_plan": ["(drive-truck t0 l0-3 l0-5 c0)", "(load-truck p0 t0 l0-5)", "(drive-truck t0 l0-5 l0-3 c0)", "(unload-truck p0 t0 l0-3)"], "full_text_prompt": "I have to plan logistics to transport packages within cities via trucks and between cities via airplanes. Locations within a city are directly connected (trucks can move between any two such locations), and so are the cities. In each city there is exactly one truck and each city has one location that serves as an airport.\nHere are the actions that can be performed:\nLoad a package into a truck.\nLoad a package into an airplane.\nUnload a package from a truck.\nUnload a package from an airplane.\nDrive a truck from one location to another location.\nFly an airplane from one city to another city.\nThe following are the restrictions on the actions:\nA package can be loaded into a truck only if the package and the truck are in the same location.\nOnce a package is loaded into a truck, the package is not at the location and is in the truck.\nA package can be loaded into an airplane only if the package and the airplane are in the same location.\nOnce a package is loaded into an airplane, the package is not at the location and is in the airplane.\nA package can be unloaded from a truck only if the package is in the truck.\nOnce a package is unloaded from a truck, the package is not in the truck and is at the location of the truck.\nA package can be unloaded from an airplane only if the package in the airplane.\nOnce a package is unloaded from an airplane, the package is not in the airplane and is at the location of the airplane.\nA truck can be driven from one location to another if the truck is at the from-location and both from-location and to-location are locations in the same city.\nOnce a truck is driven from one location to another, it is not at the from-location and is at the to-location.\nAn airplane can be flown from one city to another if the from-location and the to-location are airports and the airplane is at the from-location.\nOnce an airplane is flown from one city to another the airplane is not at the from-location and is at the to-location.As initial conditions I have that, location_4-0 is in the city city_4, , , , , , , , location_3-0 is in the city city_3, location_4-1 is in the city city_4, location_3-3 is in the city city_3, location_0-2 is in the city city_0, location_1-0 is in the city city_1, , , location_2-4 is in the city city_2, , location_2-3 is in the city city_2, , , , , , , , location_3-4 is in the city city_3, , location_2-0 is an airport, , truck_2 is at location_2-5, location_1-0 is an airport, truck_4 is at location_4-5, location_1-5 is in the city city_1, truck_0 is at location_0-3, , location_0-3 is in the city city_0, location_1-1 is in the city city_1, location_3-2 is in the city city_3, location_1-3 is in the city city_1, , location_1-4 is in the city city_1, airplane_0 is at location_4-0, location_4-4 is in the city city_4, , , location_0-1 is in the city city_0, , , , , , , , truck_3 is at location_3-5, , , location_2-5 is in the city city_2, location_3-1 is in the city city_3, airplane_2 is at location_1-0, airplane_1 is at location_0-0, , package_0 is at location_0-5, location_0-5 is in the city city_0, location_2-0 is in the city city_2, , truck_1 is at location_1-0, , location_0-0 is an airport, location_4-5 is in the city city_4, , , location_0-4 is in the city city_0, location_4-2 is in the city city_4, location_4-3 is in the city city_4, location_2-1 is in the city city_2, , location_1-2 is in the city city_1, location_0-0 is in the city city_0, , , location_3-5 is in the city city_3, location_4-0 is an airport, , location_2-2 is in the city city_2, , , , location_3-0 is an airport.My goal is to have that package_0 is at location_0-3.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 3 </COUNT> drive truck_0 from location_0-3 to location_0-5 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 2 </COUNT> load package_0 into truck_0 at location_0-5\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 1 </COUNT> drive truck_0 from location_0-5 to location_0-3 in city_0\n <GOAL> My goal is to have that package_0 is at location_0-3. <COUNT> 0 </COUNT> unload package_0 from truck_0 at location_0-3\n</PLAN>"}
{"domain": "satellite", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, the calibration target of instrument_10 is star_1, the calibration target of instrument_11 is ground_station_3, instrument_8 supports thermograph_mode_0, instrument_7 supports thermograph_mode_0, satellite_1 is power-available, instrument_16 supports thermograph_mode_0, the calibration target of instrument_14 is ground_station_3, instrument_2 is on board satellite_1, instrument_11 is on board satellite_4, the calibration target of instrument_7 is ground_station_4, instrument_3 supports thermograph_mode_0, instrument_5 supports thermograph_mode_0, instrument_14 supports thermograph_mode_0, instrument_8 is on board satellite_3, instrument_2 supports thermograph_mode_0, instrument_3 is on board satellite_1, instrument_5 is on board satellite_2, instrument_13 supports thermograph_mode_0, instrument_9 is on board satellite_3, instrument_10 supports thermograph_mode_0, instrument_0 supports thermograph_mode_0, satellite_5 is power-available, instrument_11 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, instrument_1 is on board satellite_1, instrument_4 is on board satellite_2, the calibration target of instrument_6 is ground_station_4, satellite_2 is pointing to star_2, instrument_0 is on board satellite_0, the calibration target of instrument_9 is star_1, the calibration target of instrument_0 is star_0, satellite_0 is power-available, satellite_0 is pointing to star_0, the calibration target of instrument_8 is star_2, instrument_7 is on board satellite_2, instrument_10 is on board satellite_3, instrument_14 is on board satellite_5, instrument_9 supports thermograph_mode_0, satellite_1 is pointing to planet_5, instrument_16 is on board satellite_5, satellite_4 is power-available, the calibration target of instrument_13 is ground_station_3, instrument_12 is on board satellite_4, the calibration target of instrument_12 is star_1, instrument_12 supports thermograph_mode_0, instrument_13 is on board satellite_5, instrument_6 is on board satellite_2, the calibration target of instrument_3 is ground_station_4, satellite_3 is power-available, satellite_4 is pointing to planet_5, the calibration target of instrument_5 is star_2, instrument_4 supports thermograph_mode_0, the calibration target of instrument_1 is ground_station_4, the calibration target of instrument_15 is star_0, satellite_5 is pointing to planet_5, instrument_1 supports thermograph_mode_0, the calibration target of instrument_16 is star_1, satellite_2 is power-available, the calibration target of instrument_2 is star_0, instrument_15 is on board satellite_5, satellite_3 is pointing to star_0, the calibration target of instrument_4 is ground_station_4, instrument_15 supports thermograph_mode_0.\nMy goal is to have that planet_5 has image in thermograph_mode_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 4 </COUNT> switch on instrument_13 on satellite_5\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 3 </COUNT> turn satellite_5 from ground_station_3 to planet_5\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 2 </COUNT> calibrate instrument_13 on satellite_5 pointing to calibration target ground_station_3\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_5 from planet_5 to ground_station_3\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 0 </COUNT> take image of planet_5 using instrument_13 on satellite_5 with thermograph_mode_0\n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument13 satellite5)", "(turn_to satellite5 groundstation3 planet5)", "(calibrate satellite5 instrument13 groundstation3)", "(turn_to satellite5 planet5 groundstation3)", "(take_image satellite5 planet5 instrument13 thermograph0)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, the calibration target of instrument_10 is star_1, the calibration target of instrument_11 is ground_station_3, instrument_8 supports thermograph_mode_0, instrument_7 supports thermograph_mode_0, satellite_1 is power-available, instrument_16 supports thermograph_mode_0, the calibration target of instrument_14 is ground_station_3, instrument_2 is on board satellite_1, instrument_11 is on board satellite_4, the calibration target of instrument_7 is ground_station_4, instrument_3 supports thermograph_mode_0, instrument_5 supports thermograph_mode_0, instrument_14 supports thermograph_mode_0, instrument_8 is on board satellite_3, instrument_2 supports thermograph_mode_0, instrument_3 is on board satellite_1, instrument_5 is on board satellite_2, instrument_13 supports thermograph_mode_0, instrument_9 is on board satellite_3, instrument_10 supports thermograph_mode_0, instrument_0 supports thermograph_mode_0, satellite_5 is power-available, instrument_11 supports thermograph_mode_0, instrument_6 supports thermograph_mode_0, instrument_1 is on board satellite_1, instrument_4 is on board satellite_2, the calibration target of instrument_6 is ground_station_4, satellite_2 is pointing to star_2, instrument_0 is on board satellite_0, the calibration target of instrument_9 is star_1, the calibration target of instrument_0 is star_0, satellite_0 is power-available, satellite_0 is pointing to star_0, the calibration target of instrument_8 is star_2, instrument_7 is on board satellite_2, instrument_10 is on board satellite_3, instrument_14 is on board satellite_5, instrument_9 supports thermograph_mode_0, satellite_1 is pointing to planet_5, instrument_16 is on board satellite_5, satellite_4 is power-available, the calibration target of instrument_13 is ground_station_3, instrument_12 is on board satellite_4, the calibration target of instrument_12 is star_1, instrument_12 supports thermograph_mode_0, instrument_13 is on board satellite_5, instrument_6 is on board satellite_2, the calibration target of instrument_3 is ground_station_4, satellite_3 is power-available, satellite_4 is pointing to planet_5, the calibration target of instrument_5 is star_2, instrument_4 supports thermograph_mode_0, the calibration target of instrument_1 is ground_station_4, the calibration target of instrument_15 is star_0, satellite_5 is pointing to planet_5, instrument_1 supports thermograph_mode_0, the calibration target of instrument_16 is star_1, satellite_2 is power-available, the calibration target of instrument_2 is star_0, instrument_15 is on board satellite_5, satellite_3 is pointing to star_0, the calibration target of instrument_4 is ground_station_4, instrument_15 supports thermograph_mode_0.My goal is to have that planet_5 has image in thermograph_mode_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 4 </COUNT> switch on instrument_13 on satellite_5\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 3 </COUNT> turn satellite_5 from ground_station_3 to planet_5\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 2 </COUNT> calibrate instrument_13 on satellite_5 pointing to calibration target ground_station_3\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_5 from planet_5 to ground_station_3\n <GOAL> My goal is to have that planet_5 has image in thermograph_mode_0. <COUNT> 0 </COUNT> take image of planet_5 using instrument_13 on satellite_5 with thermograph_mode_0\n</PLAN>"}
{"domain": "satellite", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, instrument_2 supports spectrograph_mode_1, the calibration target of instrument_9 is star_1, instrument_12 supports spectrograph_mode_1, instrument_12 supports infrared_mode_0, satellite_0 is power-available, instrument_1 is on board satellite_0, the calibration target of instrument_6 is star_0, instrument_4 supports infrared_mode_0, instrument_6 supports infrared_mode_0, instrument_9 supports infrared_mode_0, instrument_5 supports thermograph_mode_2, instrument_7 is on board satellite_1, the calibration target of instrument_10 is star_1, instrument_10 supports infrared_mode_0, the calibration target of instrument_8 is star_1, instrument_3 supports infrared_mode_0, instrument_7 supports infrared_mode_0, satellite_2 is pointing to star_1, the calibration target of instrument_0 is star_1, the calibration target of instrument_7 is star_1, instrument_2 supports infrared_mode_0, instrument_11 supports thermograph_mode_2, the calibration target of instrument_4 is star_0, instrument_11 supports spectrograph_mode_1, instrument_6 is on board satellite_1, instrument_4 is on board satellite_1, instrument_11 is on board satellite_2, instrument_1 supports spectrograph_mode_1, instrument_8 supports thermograph_mode_2, instrument_6 supports spectrograph_mode_1, instrument_3 supports spectrograph_mode_1, the calibration target of instrument_5 is star_0, the calibration target of instrument_12 is star_1, instrument_11 supports infrared_mode_0, instrument_4 supports thermograph_mode_2, instrument_7 supports thermograph_mode_2, instrument_2 is on board satellite_0, instrument_3 is on board satellite_0, instrument_0 is on board satellite_0, instrument_12 is on board satellite_2, the calibration target of instrument_1 is star_1, instrument_5 supports spectrograph_mode_1, satellite_1 is pointing to star_2, the calibration target of instrument_3 is star_0, instrument_0 supports thermograph_mode_2, instrument_8 supports spectrograph_mode_1, instrument_8 supports infrared_mode_0, the calibration target of instrument_11 is star_1, instrument_10 supports spectrograph_mode_1, instrument_8 is on board satellite_1, satellite_2 is power-available, instrument_7 supports spectrograph_mode_1, instrument_10 is on board satellite_2, instrument_9 supports thermograph_mode_2, satellite_1 is power-available, satellite_0 is pointing to star_2, instrument_9 is on board satellite_1, instrument_5 is on board satellite_1, the calibration target of instrument_2 is star_1.\nMy goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 4 </COUNT> switch on instrument_10 on satellite_2\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT> calibrate instrument_10 on satellite_2 pointing to calibration target star_1\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT> turn satellite_2 from star_2 to star_1\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT> take image of star_2 using instrument_10 on satellite_2 with infrared_mode_0\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> turn satellite_0 from star_1 to star_2\n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument10 satellite2)", "(calibrate satellite2 instrument10 star1)", "(turn_to satellite2 star2 star1)", "(take_image satellite2 star2 instrument10 infrared0)", "(turn_to satellite0 star1 star2)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, instrument_2 supports spectrograph_mode_1, the calibration target of instrument_9 is star_1, instrument_12 supports spectrograph_mode_1, instrument_12 supports infrared_mode_0, satellite_0 is power-available, instrument_1 is on board satellite_0, the calibration target of instrument_6 is star_0, instrument_4 supports infrared_mode_0, instrument_6 supports infrared_mode_0, instrument_9 supports infrared_mode_0, instrument_5 supports thermograph_mode_2, instrument_7 is on board satellite_1, the calibration target of instrument_10 is star_1, instrument_10 supports infrared_mode_0, the calibration target of instrument_8 is star_1, instrument_3 supports infrared_mode_0, instrument_7 supports infrared_mode_0, satellite_2 is pointing to star_1, the calibration target of instrument_0 is star_1, the calibration target of instrument_7 is star_1, instrument_2 supports infrared_mode_0, instrument_11 supports thermograph_mode_2, the calibration target of instrument_4 is star_0, instrument_11 supports spectrograph_mode_1, instrument_6 is on board satellite_1, instrument_4 is on board satellite_1, instrument_11 is on board satellite_2, instrument_1 supports spectrograph_mode_1, instrument_8 supports thermograph_mode_2, instrument_6 supports spectrograph_mode_1, instrument_3 supports spectrograph_mode_1, the calibration target of instrument_5 is star_0, the calibration target of instrument_12 is star_1, instrument_11 supports infrared_mode_0, instrument_4 supports thermograph_mode_2, instrument_7 supports thermograph_mode_2, instrument_2 is on board satellite_0, instrument_3 is on board satellite_0, instrument_0 is on board satellite_0, instrument_12 is on board satellite_2, the calibration target of instrument_1 is star_1, instrument_5 supports spectrograph_mode_1, satellite_1 is pointing to star_2, the calibration target of instrument_3 is star_0, instrument_0 supports thermograph_mode_2, instrument_8 supports spectrograph_mode_1, instrument_8 supports infrared_mode_0, the calibration target of instrument_11 is star_1, instrument_10 supports spectrograph_mode_1, instrument_8 is on board satellite_1, satellite_2 is power-available, instrument_7 supports spectrograph_mode_1, instrument_10 is on board satellite_2, instrument_9 supports thermograph_mode_2, satellite_1 is power-available, satellite_0 is pointing to star_2, instrument_9 is on board satellite_1, instrument_5 is on board satellite_1, the calibration target of instrument_2 is star_1.My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 4 </COUNT> switch on instrument_10 on satellite_2\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT> calibrate instrument_10 on satellite_2 pointing to calibration target star_1\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT> turn satellite_2 from star_2 to star_1\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT> take image of star_2 using instrument_10 on satellite_2 with infrared_mode_0\n <GOAL> My goal is to have that star_2 has image in infrared_mode_0, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> turn satellite_0 from star_1 to star_2\n</PLAN>"}
{"domain": "satellite", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, the calibration target of instrument_1 is star_0, satellite_0 is pointing to star_0, satellite_1 is power-available, the calibration target of instrument_0 is star_0, satellite_1 is pointing to star_0, satellite_0 is power-available, the calibration target of instrument_2 is star_0, instrument_1 supports infrared_mode_1, instrument_0 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, instrument_1 is on board satellite_0, instrument_0 is on board satellite_0, instrument_1 supports infrared_mode_2, instrument_2 is on board satellite_1, instrument_0 supports infrared_mode_2, instrument_2 supports infrared_mode_1.\nMy goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0 WRONG \n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 4 </COUNT> switch on instrument_0 on satellite_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 3 </COUNT> turn satellite_0 from star_1 to star_0 WRONG \n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 3 </COUNT> calibrate instrument_0 on satellite_0 pointing to calibration target star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 2 </COUNT> turn satellite_1 from star_1 to star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 0 </COUNT> take image of star_1 using instrument_0 on satellite_0 with thermograph_mode_0\n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument0 satellite0)", "(calibrate satellite0 instrument0 star0)", "(turn_to satellite1 star1 star0)", "(turn_to satellite0 star1 star0)", "(take_image satellite0 star1 instrument0 thermograph0)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, the calibration target of instrument_1 is star_0, satellite_0 is pointing to star_0, satellite_1 is power-available, the calibration target of instrument_0 is star_0, satellite_1 is pointing to star_0, satellite_0 is power-available, the calibration target of instrument_2 is star_0, instrument_1 supports infrared_mode_1, instrument_0 supports thermograph_mode_0, instrument_1 supports thermograph_mode_0, instrument_1 is on board satellite_0, instrument_0 is on board satellite_0, instrument_1 supports infrared_mode_2, instrument_2 is on board satellite_1, instrument_0 supports infrared_mode_2, instrument_2 supports infrared_mode_1.My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0 WRONG \n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 4 </COUNT> switch on instrument_0 on satellite_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 3 </COUNT> turn satellite_0 from star_1 to star_0 WRONG \n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 3 </COUNT> calibrate instrument_0 on satellite_0 pointing to calibration target star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 2 </COUNT> turn satellite_1 from star_1 to star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0\n <GOAL> My goal is to have that satellite_1 is pointing to star_1, star_1 has image in thermograph_mode_0. <COUNT> 0 </COUNT> take image of star_1 using instrument_0 on satellite_0 with thermograph_mode_0\n</PLAN>"}
{"domain": "satellite", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, instrument_5 supports infrared_mode_1, instrument_5 is on board satellite_3, the calibration target of instrument_5 is star_0, instrument_5 supports spectrograph_mode_0, instrument_1 supports infrared_mode_1, instrument_2 is on board satellite_1, instrument_4 supports infrared_mode_1, satellite_2 is pointing to star_1, instrument_5 supports spectrograph_mode_2, satellite_3 is pointing to star_1, instrument_3 is on board satellite_2, instrument_3 supports spectrograph_mode_0, instrument_0 is on board satellite_0, the calibration target of instrument_2 is star_0, satellite_3 is power-available, instrument_1 supports spectrograph_mode_0, instrument_1 supports spectrograph_mode_2, satellite_0 is pointing to star_0, instrument_0 supports infrared_mode_1, the calibration target of instrument_3 is star_0, satellite_2 is power-available, the calibration target of instrument_0 is star_0, instrument_4 is on board satellite_3, the calibration target of instrument_1 is star_0, satellite_1 is pointing to star_0, satellite_1 is power-available, instrument_2 supports spectrograph_mode_0, instrument_2 supports infrared_mode_1, instrument_1 is on board satellite_0, instrument_2 supports spectrograph_mode_2, instrument_0 supports spectrograph_mode_0, satellite_0 is power-available, the calibration target of instrument_4 is star_0, instrument_4 supports spectrograph_mode_0.\nMy goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> switch on instrument_0 on satellite_0 WRONG \n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT> switch on instrument_0 on satellite_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT> calibrate instrument_0 on satellite_0 pointing to calibration target star_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> take image of star_1 using instrument_0 on satellite_0 with infrared_mode_1\n</PLAN>", "plan_length": 4, "raw_plan": ["(switch_on instrument0 satellite0)", "(calibrate satellite0 instrument0 star0)", "(turn_to satellite0 star1 star0)", "(take_image satellite0 star1 instrument0 infrared1)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, instrument_5 supports infrared_mode_1, instrument_5 is on board satellite_3, the calibration target of instrument_5 is star_0, instrument_5 supports spectrograph_mode_0, instrument_1 supports infrared_mode_1, instrument_2 is on board satellite_1, instrument_4 supports infrared_mode_1, satellite_2 is pointing to star_1, instrument_5 supports spectrograph_mode_2, satellite_3 is pointing to star_1, instrument_3 is on board satellite_2, instrument_3 supports spectrograph_mode_0, instrument_0 is on board satellite_0, the calibration target of instrument_2 is star_0, satellite_3 is power-available, instrument_1 supports spectrograph_mode_0, instrument_1 supports spectrograph_mode_2, satellite_0 is pointing to star_0, instrument_0 supports infrared_mode_1, the calibration target of instrument_3 is star_0, satellite_2 is power-available, the calibration target of instrument_0 is star_0, instrument_4 is on board satellite_3, the calibration target of instrument_1 is star_0, satellite_1 is pointing to star_0, satellite_1 is power-available, instrument_2 supports spectrograph_mode_0, instrument_2 supports infrared_mode_1, instrument_1 is on board satellite_0, instrument_2 supports spectrograph_mode_2, instrument_0 supports spectrograph_mode_0, satellite_0 is power-available, the calibration target of instrument_4 is star_0, instrument_4 supports spectrograph_mode_0.My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> switch on instrument_0 on satellite_0 WRONG \n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 3 </COUNT> switch on instrument_0 on satellite_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 2 </COUNT> calibrate instrument_0 on satellite_0 pointing to calibration target star_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 1 </COUNT> turn satellite_0 from star_1 to star_0\n <GOAL> My goal is to have that satellite_2 is pointing to star_1, satellite_3 is pointing to star_1, star_1 has image in infrared_mode_1, satellite_0 is pointing to star_1. <COUNT> 0 </COUNT> take image of star_1 using instrument_0 on satellite_0 with infrared_mode_1\n</PLAN>"}
{"domain": "satellite", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.", "input": "As initial conditions I have that, the calibration target of instrument_8 is star_0, the calibration target of instrument_5 is star_0, instrument_4 supports image_mode_2, satellite_3 is power-available, the calibration target of instrument_9 is star_0, instrument_1 is on board satellite_1, the calibration target of instrument_4 is ground_station_1, instrument_2 supports thermograph_mode_0, instrument_6 supports image_mode_2, instrument_9 supports thermograph_mode_0, instrument_5 is on board satellite_1, instrument_0 supports thermograph_mode_0, instrument_8 is on board satellite_2, satellite_0 is pointing to star_2, instrument_7 supports image_mode_2, satellite_2 is power-available, satellite_1 is power-available, instrument_2 is on board satellite_1, instrument_10 is on board satellite_3, instrument_9 is on board satellite_2, instrument_3 is on board satellite_1, instrument_3 supports thermograph_mode_0, instrument_5 supports thermograph_mode_3, satellite_1 is pointing to star_2, instrument_7 is on board satellite_2, satellite_0 is power-available, the calibration target of instrument_2 is ground_station_1, instrument_0 supports infrared_mode_1, instrument_0 is on board satellite_0, instrument_10 supports thermograph_mode_0, the calibration target of instrument_7 is ground_station_1, instrument_1 supports thermograph_mode_0, instrument_10 supports image_mode_2, instrument_1 supports image_mode_2, the calibration target of instrument_0 is ground_station_1, instrument_9 supports infrared_mode_1, instrument_4 is on board satellite_1, the calibration target of instrument_6 is ground_station_1, the calibration target of instrument_10 is star_0, instrument_8 supports thermograph_mode_0, the calibration target of instrument_3 is ground_station_1, instrument_6 supports thermograph_mode_0, instrument_9 supports thermograph_mode_3, satellite_2 is pointing to ground_station_1, instrument_6 supports infrared_mode_1, instrument_6 is on board satellite_2, instrument_1 supports infrared_mode_1, instrument_2 supports image_mode_2, instrument_7 supports thermograph_mode_3, instrument_10 supports infrared_mode_1, satellite_3 is pointing to ground_station_1, the calibration target of instrument_1 is star_0, instrument_3 supports image_mode_2.\nMy goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 4 </COUNT> switch on instrument_6 on satellite_2\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 3 </COUNT> calibrate instrument_6 on satellite_2 pointing to calibration target ground_station_1\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT> turn satellite_2 from star_2 to ground_station_1 WRONG \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 2 </COUNT> turn satellite_2 from star_2 to ground_station_1\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT> take image of star_2 using instrument_6 on satellite_2 with image_mode_2\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 0 </COUNT> turn satellite_0 from star_0 to star_2\n</PLAN>", "plan_length": 5, "raw_plan": ["(switch_on instrument6 satellite2)", "(calibrate satellite2 instrument6 groundstation1)", "(turn_to satellite2 star2 groundstation1)", "(take_image satellite2 star2 instrument6 image2)", "(turn_to satellite0 star0 star2)"], "full_text_prompt": "I have to plan the operations of satellites in space. These satellites are equipped with various instruments that can be used to take images of different directions in space using specific modes. The satellites can be turned, their instruments can be switched on and off, calibrated, and used to take images.\nHere are the actions that can be performed:\nTurn a satellite to a direction.\nSwitch on an instrument on a satellite.\nSwitch off an instrument on a satellite.\nCalibrate an instrument on a satellite by pointing it to a calibration target.\nTake an image of a direction using an instrument with a specific mode.\nThe following are the restrictions on the actions:\nA satellite can be turned from a previous direction to a new direction only if the satellite is currently pointing to the previous direction.\nOnce the satellite is turned to a new direction, the satellite is no longer pointing to the previous direction but is pointing to the new direction.\nAn instrument can be switched on on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched on on a satellite only if the instrument is power-available.\nOnce the instrument is switched on on a satellite, the instrument is power-on.\nOnce the instrument is switched on on a satellite, the instrument is no longer power-available.\nOnce the instrument is switched on on a satellite, the instrument becomes not calibrated.\nAn instrument can be switched off on a satellite only if the instrument is on board the satellite.\nAn instrument can be switched off on a satellite only if the instrument is power-on.\nOnce the instrument is switched off on a satellite, the instrument is power-available.\nOnce the instrument is switched off on a satellite, the instrument is no longer power-on.\nAn instrument can be calibrated on a satellite only if the instrument is on board the satellite.\nAn instrument can be calibrated on a satellite only if the instrument is power-on.\nAn instrument can be calibrated on a satellite only if the instrument is pointing to the calibration target.\nOnce the instrument is calibrated on a satellite, the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is on board the satellite.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is power-on.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument is calibrated.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the satellite is pointing to the direction.\nAn image of a direction with a specific mode can be taken using an instrument on a satellite only if the instrument supports the mode.\nOnce an image of a direction with a specific mode is taken using an instrument on a satellite, we will have the image.As initial conditions I have that, the calibration target of instrument_8 is star_0, the calibration target of instrument_5 is star_0, instrument_4 supports image_mode_2, satellite_3 is power-available, the calibration target of instrument_9 is star_0, instrument_1 is on board satellite_1, the calibration target of instrument_4 is ground_station_1, instrument_2 supports thermograph_mode_0, instrument_6 supports image_mode_2, instrument_9 supports thermograph_mode_0, instrument_5 is on board satellite_1, instrument_0 supports thermograph_mode_0, instrument_8 is on board satellite_2, satellite_0 is pointing to star_2, instrument_7 supports image_mode_2, satellite_2 is power-available, satellite_1 is power-available, instrument_2 is on board satellite_1, instrument_10 is on board satellite_3, instrument_9 is on board satellite_2, instrument_3 is on board satellite_1, instrument_3 supports thermograph_mode_0, instrument_5 supports thermograph_mode_3, satellite_1 is pointing to star_2, instrument_7 is on board satellite_2, satellite_0 is power-available, the calibration target of instrument_2 is ground_station_1, instrument_0 supports infrared_mode_1, instrument_0 is on board satellite_0, instrument_10 supports thermograph_mode_0, the calibration target of instrument_7 is ground_station_1, instrument_1 supports thermograph_mode_0, instrument_10 supports image_mode_2, instrument_1 supports image_mode_2, the calibration target of instrument_0 is ground_station_1, instrument_9 supports infrared_mode_1, instrument_4 is on board satellite_1, the calibration target of instrument_6 is ground_station_1, the calibration target of instrument_10 is star_0, instrument_8 supports thermograph_mode_0, the calibration target of instrument_3 is ground_station_1, instrument_6 supports thermograph_mode_0, instrument_9 supports thermograph_mode_3, satellite_2 is pointing to ground_station_1, instrument_6 supports infrared_mode_1, instrument_6 is on board satellite_2, instrument_1 supports infrared_mode_1, instrument_2 supports image_mode_2, instrument_7 supports thermograph_mode_3, instrument_10 supports infrared_mode_1, satellite_3 is pointing to ground_station_1, the calibration target of instrument_1 is star_0, instrument_3 supports image_mode_2.My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 4 </COUNT> switch on instrument_6 on satellite_2\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 3 </COUNT> calibrate instrument_6 on satellite_2 pointing to calibration target ground_station_1\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT> turn satellite_2 from star_2 to ground_station_1 WRONG \n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 2 </COUNT> turn satellite_2 from star_2 to ground_station_1\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 1 </COUNT> take image of star_2 using instrument_6 on satellite_2 with image_mode_2\n <GOAL> My goal is to have that satellite_0 is pointing to star_0, star_2 has image in image_mode_2. <COUNT> 0 </COUNT> turn satellite_0 from star_0 to star_2\n</PLAN>"}
