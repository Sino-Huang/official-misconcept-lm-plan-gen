{"domain": "mystery_blocksworld", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.", "input": "As initial conditions I have that, planet object a, harmony, province object b, object b craves object c, planet object c, province object a.\nMy goal is to have that object a craves object c.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object c. <COUNT> 3 </COUNT> feast object b from object c\n <GOAL> My goal is to have that object a craves object c. <COUNT> 2 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object c. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object c. <COUNT> 0 </COUNT> overcome object a from object c\n</PLAN>", "plan_length": 4, "raw_plan": ["(feast b c)", "(succumb b)", "(attack a)", "(overcome a c)"], "full_text_prompt": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.As initial conditions I have that, planet object a, harmony, province object b, object b craves object c, planet object c, province object a.My goal is to have that object a craves object c.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object c. <COUNT> 3 </COUNT> feast object b from object c\n <GOAL> My goal is to have that object a craves object c. <COUNT> 2 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object c. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object c. <COUNT> 0 </COUNT> overcome object a from object c\n</PLAN>"}
{"domain": "mystery_blocksworld", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.", "input": "As initial conditions I have that, harmony, province object c, object b craves object a, province object b, planet object a, planet object c.\nMy goal is to have that object a craves object b.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object b. <COUNT> 1 </COUNT> attack object a WRONG \n <GOAL> My goal is to have that object a craves object b. <COUNT> 3 </COUNT> feast object b from object a\n <GOAL> My goal is to have that object a craves object b. <COUNT> 2 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object b. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object b. <COUNT> 0 </COUNT> overcome object a from object b\n</PLAN>", "plan_length": 4, "raw_plan": ["(feast b a)", "(succumb b)", "(attack a)", "(overcome a b)"], "full_text_prompt": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.As initial conditions I have that, harmony, province object c, object b craves object a, province object b, planet object a, planet object c.My goal is to have that object a craves object b.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object b. <COUNT> 1 </COUNT> attack object a WRONG \n <GOAL> My goal is to have that object a craves object b. <COUNT> 3 </COUNT> feast object b from object a\n <GOAL> My goal is to have that object a craves object b. <COUNT> 2 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object b. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object b. <COUNT> 0 </COUNT> overcome object a from object b\n</PLAN>"}
{"domain": "mystery_blocksworld", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.", "input": "As initial conditions I have that, object b craves object d, province object a, planet object c, province object c, planet object d, harmony, object a craves object b.\nMy goal is to have that object a craves object d, object c craves object b, object d craves object c.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 9 </COUNT> feast object a from object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> succumb object a WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 8 </COUNT> succumb object a\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 7 </COUNT> feast object b from object d\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 6 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 0 </COUNT> overcome object a from object d WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 5 </COUNT> attack object c\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 4 </COUNT> overcome object a from object d WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 4 </COUNT> overcome object c from object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 3 </COUNT> attack object d\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> attack object a WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 2 </COUNT> overcome object d from object c\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 0 </COUNT> overcome object a from object d\n</PLAN>", "plan_length": 10, "raw_plan": ["(feast a b)", "(succumb a)", "(feast b d)", "(succumb b)", "(attack c)", "(overcome c b)", "(attack d)", "(overcome d c)", "(attack a)", "(overcome a d)"], "full_text_prompt": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.As initial conditions I have that, object b craves object d, province object a, planet object c, province object c, planet object d, harmony, object a craves object b.My goal is to have that object a craves object d, object c craves object b, object d craves object c.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 9 </COUNT> feast object a from object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> succumb object a WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 8 </COUNT> succumb object a\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 7 </COUNT> feast object b from object d\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 6 </COUNT> succumb object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 0 </COUNT> overcome object a from object d WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 5 </COUNT> attack object c\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 4 </COUNT> overcome object a from object d WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 4 </COUNT> overcome object c from object b\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 3 </COUNT> attack object d\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> attack object a WRONG \n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 2 </COUNT> overcome object d from object c\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 1 </COUNT> attack object a\n <GOAL> My goal is to have that object a craves object d, object c craves object b, object d craves object c. <COUNT> 0 </COUNT> overcome object a from object d\n</PLAN>"}
{"domain": "mystery_blocksworld", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.", "input": "As initial conditions I have that, planet object b, province object a, object c craves object b, harmony, province object c, planet object a.\nMy goal is to have that object b craves object a.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object b craves object a. <COUNT> 3 </COUNT> feast object c from object b\n <GOAL> My goal is to have that object b craves object a. <COUNT> 1 </COUNT> attack object b WRONG \n <GOAL> My goal is to have that object b craves object a. <COUNT> 2 </COUNT> succumb object c\n <GOAL> My goal is to have that object b craves object a. <COUNT> 1 </COUNT> attack object b\n <GOAL> My goal is to have that object b craves object a. <COUNT> 0 </COUNT> overcome object b from object a\n</PLAN>", "plan_length": 4, "raw_plan": ["(feast c b)", "(succumb c)", "(attack b)", "(overcome b a)"], "full_text_prompt": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.As initial conditions I have that, planet object b, province object a, object c craves object b, harmony, province object c, planet object a.My goal is to have that object b craves object a.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object b craves object a. <COUNT> 3 </COUNT> feast object c from object b\n <GOAL> My goal is to have that object b craves object a. <COUNT> 1 </COUNT> attack object b WRONG \n <GOAL> My goal is to have that object b craves object a. <COUNT> 2 </COUNT> succumb object c\n <GOAL> My goal is to have that object b craves object a. <COUNT> 1 </COUNT> attack object b\n <GOAL> My goal is to have that object b craves object a. <COUNT> 0 </COUNT> overcome object b from object a\n</PLAN>"}
{"domain": "mystery_blocksworld", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.", "input": "As initial conditions I have that, harmony, province object c, planet object c, object b craves object d, province object a, object a craves object b, planet object d.\nMy goal is to have that object b craves object d, object d craves object a.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 7 </COUNT> feast object a from object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 6 </COUNT> succumb object a\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 5 </COUNT> feast object b from object d\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 4 </COUNT> succumb object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 3 </COUNT> overcome object b from object d WRONG \n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 3 </COUNT> attack object d\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 2 </COUNT> overcome object d from object a\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 1 </COUNT> attack object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 0 </COUNT> overcome object b from object d\n</PLAN>", "plan_length": 8, "raw_plan": ["(feast a b)", "(succumb a)", "(feast b d)", "(succumb b)", "(attack d)", "(overcome d a)", "(attack b)", "(overcome b d)"], "full_text_prompt": "I am playing with a set of objects.\nHere are the actions that can be performed:\nAttack object\nFeast object from another object\nSuccumb object\nOvercome object from another object\nThe following are the restrictions on the actions:\nI can only attack or feast one object at a time.\nI can only attack or feast an object if there is harmony.\nI can only attack an object if the object is a planet and the object is a province. An object is a province if the object does not crave any other object and if the object is not being attacked.\nI can only feast an object from on top of another object if the object I am feasting craves the other object.\nI can only feast an object from on top of another object if the object I am feasting is a province.\nOnce I attack or feast an object, there is pain with the object.\nI can only succumb an object if there is pain with the object.\nI can only overcome an object from another object if there is pain with the object being overcome.\nI can only overcome an object from another object if the object onto which I am overcoming the object is a province.\nOnce I succumb or overcome an object, there is harmony.\nOnce you overcome an object from a second object, the second object is no longer a province.As initial conditions I have that, harmony, province object c, planet object c, object b craves object d, province object a, object a craves object b, planet object d.My goal is to have that object b craves object d, object d craves object a.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 7 </COUNT> feast object a from object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 6 </COUNT> succumb object a\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 5 </COUNT> feast object b from object d\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 4 </COUNT> succumb object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 3 </COUNT> overcome object b from object d WRONG \n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 3 </COUNT> attack object d\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 2 </COUNT> overcome object d from object a\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 1 </COUNT> attack object b\n <GOAL> My goal is to have that object b craves object d, object d craves object a. <COUNT> 0 </COUNT> overcome object b from object d\n</PLAN>"}
{"domain": "obfuscated_deceptive_logistics", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.", "input": "As initial conditions I have that, sneeze_1 is next to texture_1-0, , texture_0-0 is a spring, texture_0-0 collects stupendous_0, , texture_1-0 is a spring, , , , , texture_1-0 collects stupendous_1, hand_0 is next to texture_0-0, , , cats_0 is next to texture_0-0, sneeze_0 is next to texture_0-0.\nMy goal is to have that hand_0 is next to texture_1-0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 2 </COUNT> sip hand_0 into cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 1 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_0 at texture_1-0\n</PLAN>", "plan_length": 3, "raw_plan": ["(sip p0 a0 l0-0)", "(memory a0 l0-0 l1-0)", "(paltry p0 a0 l1-0)"], "full_text_prompt": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.As initial conditions I have that, sneeze_1 is next to texture_1-0, , texture_0-0 is a spring, texture_0-0 collects stupendous_0, , texture_1-0 is a spring, , , , , texture_1-0 collects stupendous_1, hand_0 is next to texture_0-0, , , cats_0 is next to texture_0-0, sneeze_0 is next to texture_0-0.My goal is to have that hand_0 is next to texture_1-0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 2 </COUNT> sip hand_0 into cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 1 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_0 at texture_1-0\n</PLAN>"}
{"domain": "obfuscated_deceptive_logistics", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.", "input": "As initial conditions I have that, texture_2-0 is a spring, , , , cats_1 is next to texture_3-0, texture_0-0 collects stupendous_0, , , texture_1-0 is a spring, , , texture_3-0 is a spring, , sneeze_2 is next to texture_2-0, hand_0 is next to texture_2-0, , , sneeze_3 is next to texture_3-0, texture_0-0 is a spring, texture_1-0 collects stupendous_1, texture_3-0 collects stupendous_3, , cats_2 is next to texture_1-0, , , sneeze_0 is next to texture_0-0, , , texture_2-0 collects stupendous_2, cats_0 is next to texture_3-0, cats_3 is next to texture_3-0, , , sneeze_1 is next to texture_1-0.\nMy goal is to have that hand_0 is next to texture_0-0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 4 </COUNT> memory cats_3 from texture_3-0 to texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 3 </COUNT> paltry hand_0 from cats_3 at texture_0-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 3 </COUNT> memory cats_3 from texture_0-0 to texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 2 </COUNT> sip hand_0 into cats_3 at texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 1 </COUNT> memory cats_3 from texture_2-0 to texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_3 at texture_0-0\n</PLAN>", "plan_length": 5, "raw_plan": ["(memory a3 l3-0 l0-0)", "(memory a3 l0-0 l2-0)", "(sip p0 a3 l2-0)", "(memory a3 l2-0 l0-0)", "(paltry p0 a3 l0-0)"], "full_text_prompt": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.As initial conditions I have that, texture_2-0 is a spring, , , , cats_1 is next to texture_3-0, texture_0-0 collects stupendous_0, , , texture_1-0 is a spring, , , texture_3-0 is a spring, , sneeze_2 is next to texture_2-0, hand_0 is next to texture_2-0, , , sneeze_3 is next to texture_3-0, texture_0-0 is a spring, texture_1-0 collects stupendous_1, texture_3-0 collects stupendous_3, , cats_2 is next to texture_1-0, , , sneeze_0 is next to texture_0-0, , , texture_2-0 collects stupendous_2, cats_0 is next to texture_3-0, cats_3 is next to texture_3-0, , , sneeze_1 is next to texture_1-0.My goal is to have that hand_0 is next to texture_0-0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 4 </COUNT> memory cats_3 from texture_3-0 to texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 3 </COUNT> paltry hand_0 from cats_3 at texture_0-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 3 </COUNT> memory cats_3 from texture_0-0 to texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 2 </COUNT> sip hand_0 into cats_3 at texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 1 </COUNT> memory cats_3 from texture_2-0 to texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_0-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_3 at texture_0-0\n</PLAN>"}
{"domain": "obfuscated_deceptive_logistics", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.", "input": "As initial conditions I have that, , , sneeze_0 is next to texture_0-0, , , texture_1-0 collects stupendous_1, , , , hand_0 is next to texture_0-0, texture_1-0 is a spring, hand_5 is next to texture_2-0, , sneeze_1 is next to texture_1-0, texture_0-0 is a spring, hand_3 is next to texture_1-0, hand_2 is next to texture_1-0, , hand_1 is next to texture_1-0, , cats_0 is next to texture_2-0, texture_0-0 collects stupendous_0, , sneeze_2 is next to texture_2-0, texture_2-0 is a spring, hand_4 is next to texture_2-0, , , , texture_2-0 collects stupendous_2, , .\nMy goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 8 </COUNT> sip hand_5 into cats_0 at texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 7 </COUNT> sip hand_4 into cats_0 at texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 6 </COUNT> memory cats_0 from texture_2-0 to texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 5 </COUNT> paltry hand_5 from cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 4 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_0 at texture_2-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 3 </COUNT> paltry hand_4 from cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 2 </COUNT> sip hand_2 into cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 0 </COUNT> memory cats_0 from texture_1-0 to texture_2-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 1 </COUNT> memory cats_0 from texture_1-0 to texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 0 </COUNT> paltry hand_2 from cats_0 at texture_2-0\n</PLAN>", "plan_length": 9, "raw_plan": ["(sip p5 a0 l2-0)", "(sip p4 a0 l2-0)", "(memory a0 l2-0 l0-0)", "(paltry p5 a0 l0-0)", "(memory a0 l0-0 l1-0)", "(paltry p4 a0 l1-0)", "(sip p2 a0 l1-0)", "(memory a0 l1-0 l2-0)", "(paltry p2 a0 l2-0)"], "full_text_prompt": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.As initial conditions I have that, , , sneeze_0 is next to texture_0-0, , , texture_1-0 collects stupendous_1, , , , hand_0 is next to texture_0-0, texture_1-0 is a spring, hand_5 is next to texture_2-0, , sneeze_1 is next to texture_1-0, texture_0-0 is a spring, hand_3 is next to texture_1-0, hand_2 is next to texture_1-0, , hand_1 is next to texture_1-0, , cats_0 is next to texture_2-0, texture_0-0 collects stupendous_0, , sneeze_2 is next to texture_2-0, texture_2-0 is a spring, hand_4 is next to texture_2-0, , , , texture_2-0 collects stupendous_2, , .My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 8 </COUNT> sip hand_5 into cats_0 at texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 7 </COUNT> sip hand_4 into cats_0 at texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 6 </COUNT> memory cats_0 from texture_2-0 to texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 5 </COUNT> paltry hand_5 from cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 4 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_0 at texture_2-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 3 </COUNT> paltry hand_4 from cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 2 </COUNT> sip hand_2 into cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 0 </COUNT> memory cats_0 from texture_1-0 to texture_2-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 1 </COUNT> memory cats_0 from texture_1-0 to texture_2-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_5 is next to texture_0-0, hand_0 is next to texture_0-0, hand_3 is next to texture_1-0, hand_2 is next to texture_2-0, hand_1 is next to texture_1-0. <COUNT> 0 </COUNT> paltry hand_2 from cats_0 at texture_2-0\n</PLAN>"}
{"domain": "obfuscated_deceptive_logistics", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.", "input": "As initial conditions I have that, texture_2-0 collects stupendous_2, , , , sneeze_2 is next to texture_2-0, texture_0-0 is a spring, , sneeze_1 is next to texture_1-0, , texture_0-0 collects stupendous_0, , sneeze_0 is next to texture_0-0, texture_2-0 is a spring, , texture_1-0 collects stupendous_1, , , hand_3 is next to texture_1-0, , , sneeze_3 is next to texture_3-0, texture_4-0 is a spring, texture_3-0 is a spring, hand_1 is next to texture_0-0, , hand_0 is next to texture_2-0, , texture_3-0 collects stupendous_3, texture_4-0 collects stupendous_4, cats_2 is next to texture_0-0, cats_3 is next to texture_1-0, , , hand_2 is next to texture_0-0, cats_1 is next to texture_2-0, sneeze_4 is next to texture_4-0, cats_0 is next to texture_4-0, , texture_1-0 is a spring, , , , , , , .\nMy goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 8 </COUNT> sip hand_3 into cats_3 at texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 7 </COUNT> memory cats_3 from texture_1-0 to texture_3-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 6 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 6 </COUNT> paltry hand_3 from cats_3 at texture_3-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 5 </COUNT> sip hand_2 into cats_2 at texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 4 </COUNT> memory cats_2 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_0 from cats_1 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 0 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_2 at texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 2 </COUNT> sip hand_0 into cats_1 at texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 1 </COUNT> memory cats_1 from texture_2-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_1 at texture_1-0\n</PLAN>", "plan_length": 9, "raw_plan": ["(sip p3 a3 l1-0)", "(memory a3 l1-0 l3-0)", "(paltry p3 a3 l3-0)", "(sip p2 a2 l0-0)", "(memory a2 l0-0 l1-0)", "(paltry p2 a2 l1-0)", "(sip p0 a1 l2-0)", "(memory a1 l2-0 l1-0)", "(paltry p0 a1 l1-0)"], "full_text_prompt": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.As initial conditions I have that, texture_2-0 collects stupendous_2, , , , sneeze_2 is next to texture_2-0, texture_0-0 is a spring, , sneeze_1 is next to texture_1-0, , texture_0-0 collects stupendous_0, , sneeze_0 is next to texture_0-0, texture_2-0 is a spring, , texture_1-0 collects stupendous_1, , , hand_3 is next to texture_1-0, , , sneeze_3 is next to texture_3-0, texture_4-0 is a spring, texture_3-0 is a spring, hand_1 is next to texture_0-0, , hand_0 is next to texture_2-0, , texture_3-0 collects stupendous_3, texture_4-0 collects stupendous_4, cats_2 is next to texture_0-0, cats_3 is next to texture_1-0, , , hand_2 is next to texture_0-0, cats_1 is next to texture_2-0, sneeze_4 is next to texture_4-0, cats_0 is next to texture_4-0, , texture_1-0 is a spring, , , , , , , .My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 8 </COUNT> sip hand_3 into cats_3 at texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 7 </COUNT> memory cats_3 from texture_1-0 to texture_3-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 6 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 6 </COUNT> paltry hand_3 from cats_3 at texture_3-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 5 </COUNT> sip hand_2 into cats_2 at texture_0-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 4 </COUNT> memory cats_2 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_0 from cats_1 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 0 </COUNT> paltry hand_2 from cats_2 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 3 </COUNT> paltry hand_2 from cats_2 at texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 2 </COUNT> sip hand_0 into cats_1 at texture_2-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 1 </COUNT> memory cats_1 from texture_2-0 to texture_1-0\n <GOAL> My goal is to have that hand_0 is next to texture_1-0, hand_2 is next to texture_1-0, hand_1 is next to texture_0-0, hand_3 is next to texture_3-0. <COUNT> 0 </COUNT> paltry hand_0 from cats_1 at texture_1-0\n</PLAN>"}
{"domain": "obfuscated_deceptive_logistics", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.", "input": "As initial conditions I have that, cats_1 is next to texture_1-0, sneeze_0 is next to texture_0-0, , , sneeze_1 is next to texture_1-1, , texture_1-1 collects stupendous_1, , , , hand_3 is next to texture_1-1, cats_0 is next to texture_0-0, texture_0-0 collects stupendous_0, , , hand_1 is next to texture_1-0, texture_1-0 is a spring, hand_2 is next to texture_1-1, , , , texture_0-0 is a spring, hand_4 is next to texture_1-0, , hand_5 is next to texture_1-1, texture_1-0 collects stupendous_1, , texture_0-1 collects stupendous_0, , , hand_0 is next to texture_0-0, .\nMy goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0.", "output": "My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 8 </COUNT> paltry hand_0 from cats_0 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 8 </COUNT> clip hand_5 into sneeze_1 at texture_1-1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 7 </COUNT> sip hand_0 into cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 6 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 5 </COUNT> paltry hand_0 from cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 4 </COUNT> wretched sneeze_1 from texture_1-1 to texture_1-0 in stupendous_1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 3 </COUNT> tightfisted hand_5 from sneeze_1 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 1 </COUNT> wretched sneeze_1 from texture_1-0 to texture_1-1 in stupendous_1 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 2 </COUNT> clip hand_0 into sneeze_1 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 1 </COUNT> wretched sneeze_1 from texture_1-0 to texture_1-1 in stupendous_1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 0 </COUNT> tightfisted hand_0 from sneeze_1 at texture_1-1\n</PLAN>", "plan_length": 9, "raw_plan": ["(clip p5 t1 l1-1)", "(sip p0 a0 l0-0)", "(memory a0 l0-0 l1-0)", "(paltry p0 a0 l1-0)", "(wretched t1 l1-1 l1-0 c1)", "(tightfisted p5 t1 l1-0)", "(clip p0 t1 l1-0)", "(wretched t1 l1-0 l1-1 c1)", "(tightfisted p0 t1 l1-1)"], "full_text_prompt": "I am playing with a set of objects to transport hands within textures via sneezes and between stupendous via cats. Textures within a stupendous are directly connected (sneezes can move between any two such textures), and so are the stupendous. In each stupendous there is exactly one sneeze and each stupendous has one texture that serves as a spring.\nHere are the actions that can be performed:\nClip a hand into a sneeze.\nSip a hand into a cat.\nTightfisted a hand from a sneeze.\nPaltry a hand from a cat.\nWretched a sneeze from one texture to another texture.\nMemory a cat from one stupendous to another stupendous.\nThe following are the restrictions on the actions:\nA hand can be clipped into a sneeze only if the hand and the sneeze are next to the same texture.\nOnce a hand is clipped into a sneeze, the hand is not next to the texture and is a vase of the sneeze.\nA hand can be sipped into a cat only if the hand and the cat are next to the same texture.\nOnce a hand is sipped into a cat, the hand is not next to the texture and is a vase of the cat.\nA hand can be tightfisted from a sneeze only if the hand is a vase of the sneeze.\nOnce a hand is tightfisted from a sneeze, the hand is not a vase of the sneeze and is next to the texture of the sneeze.\nA hand can be paltry from a cat only if the hand in the cat.\nOnce a hand is paltry from a cat, the hand is not a vase of the cat and is next to the texture of the cat.\nA sneeze can be wretched from one texture to another if the sneeze is next to the from-texture and both from-texture and to-texture are textures in the same stupendous.\nOnce a sneeze is wretched from one texture to another, it is not next to the from-texture and is next to the to-texture.\nA cat can be memoried from one stupendous to another if the from-texture and the to-texture are springs and the cat is next to the from-texture.\nOnce a cat is memoried from one stupendous to another the cat is not next to the from-texture and is next to the to-texture.As initial conditions I have that, cats_1 is next to texture_1-0, sneeze_0 is next to texture_0-0, , , sneeze_1 is next to texture_1-1, , texture_1-1 collects stupendous_1, , , , hand_3 is next to texture_1-1, cats_0 is next to texture_0-0, texture_0-0 collects stupendous_0, , , hand_1 is next to texture_1-0, texture_1-0 is a spring, hand_2 is next to texture_1-1, , , , texture_0-0 is a spring, hand_4 is next to texture_1-0, , hand_5 is next to texture_1-1, texture_1-0 collects stupendous_1, , texture_0-1 collects stupendous_0, , , hand_0 is next to texture_0-0, .My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0.My plan is as follows:\n<PLAN>\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 8 </COUNT> paltry hand_0 from cats_0 at texture_1-0 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 8 </COUNT> clip hand_5 into sneeze_1 at texture_1-1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 7 </COUNT> sip hand_0 into cats_0 at texture_0-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 6 </COUNT> memory cats_0 from texture_0-0 to texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 5 </COUNT> paltry hand_0 from cats_0 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 4 </COUNT> wretched sneeze_1 from texture_1-1 to texture_1-0 in stupendous_1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 3 </COUNT> tightfisted hand_5 from sneeze_1 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 1 </COUNT> wretched sneeze_1 from texture_1-0 to texture_1-1 in stupendous_1 WRONG \n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 2 </COUNT> clip hand_0 into sneeze_1 at texture_1-0\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 1 </COUNT> wretched sneeze_1 from texture_1-0 to texture_1-1 in stupendous_1\n <GOAL> My goal is to have that hand_4 is next to texture_1-0, hand_1 is next to texture_1-0, hand_0 is next to texture_1-1, hand_3 is next to texture_1-1, hand_2 is next to texture_1-1, hand_5 is next to texture_1-0. <COUNT> 0 </COUNT> tightfisted hand_0 from sneeze_1 at texture_1-1\n</PLAN>"}
