{"domain": "barman", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_63 is clean, shot_155 is clean, shot_156 is clean, shot_193 is clean, cocktail_292 has ingredient_363 as its first ingredient, cocktail_292 has ingredient_214 as its second ingredient, dispenser_127 dispenses ingredient_363, dispenser_348 dispenses ingredient_214, shaker_63 is empty, shot_155 is empty, shot_156 is empty, shot_193 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_63 is on the table, shot_155 is on the table, shot_156 is on the table, shot_193 is on the table, shaker_63's zero fill level is at level_0, shaker_63's fill level is at level_0.\nMy goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292.", "output": "My plan is as follows:\n<PLAN>\npour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_63 using left_hand\ngrasp the shaker_63 using left_hand WRONG \ngrasp the shot_193 using right_hand\nleave the shaker_63 using left_hand\nfill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty\ngrasp the shaker_63 using left_hand\npour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1\nleave the shaker_63 using left_hand\nclean the shot_193 on right_hand used for ingredient_214 when left_hand is empty\nfill the shot_155 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty WRONG \nfill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty\nleave the shot_193 using right_hand WRONG \ngrasp the shaker_63 using left_hand\npour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2\nleave the shot_193 using right_hand\nshake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty\npour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1\npour from shaker_63 to shot_156 containing level_0 using left_hand from level_0 to level_0 WRONG \npour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0\n</PLAN>", "plan_length": 15, "raw_plan": ["(grasp left shaker63)", "(grasp right shot193)", "(leave left shaker63)", "(fill-shot shot193 ingredient214 right left dispenser348)", "(grasp left shaker63)", "(pour-shot-to-clean-shaker shot193 ingredient214 shaker63 right l0 l1)", "(leave left shaker63)", "(clean-shot shot193 ingredient214 right left)", "(fill-shot shot193 ingredient363 right left dispenser127)", "(grasp left shaker63)", "(pour-shot-to-used-shaker shot193 ingredient363 shaker63 right l1 l2)", "(leave right shot193)", "(shake cocktail292 ingredient363 ingredient214 shaker63 left right)", "(pour-shaker-to-shot cocktail292 shot155 left shaker63 l2 l1)", "(pour-shaker-to-shot cocktail292 shot156 left shaker63 l1 l0)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_63 is clean, shot_155 is clean, shot_156 is clean, shot_193 is clean, cocktail_292 has ingredient_363 as its first ingredient, cocktail_292 has ingredient_214 as its second ingredient, dispenser_127 dispenses ingredient_363, dispenser_348 dispenses ingredient_214, shaker_63 is empty, shot_155 is empty, shot_156 is empty, shot_193 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_63 is on the table, shot_155 is on the table, shot_156 is on the table, shot_193 is on the table, shaker_63's zero fill level is at level_0, shaker_63's fill level is at level_0.My goal is to have that shot_155 contains cocktail_292, shot_156 contains cocktail_292.My plan is as follows:\n<PLAN>\npour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_63 using left_hand\ngrasp the shaker_63 using left_hand WRONG \ngrasp the shot_193 using right_hand\nleave the shaker_63 using left_hand\nfill the shot_193 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty\ngrasp the shaker_63 using left_hand\npour from shot_193 containing ingredient_214 to clean shaker_63 using right_hand from level_0 to level_1\nleave the shaker_63 using left_hand\nclean the shot_193 on right_hand used for ingredient_214 when left_hand is empty\nfill the shot_155 on right_hand with ingredient_214 using dispenser_348 when left_hand is empty WRONG \nfill the shot_193 on right_hand with ingredient_363 using dispenser_127 when left_hand is empty\nleave the shot_193 using right_hand WRONG \ngrasp the shaker_63 using left_hand\npour from shot_193 containing ingredient_363 to used shaker_63 using right_hand from level_1 to level_2\nleave the shot_193 using right_hand\nshake shaker_63 on left_hand containing ingredient_363 and ingredient_214 to get cocktail_292 when right_hand is empty\npour from shaker_63 to shot_155 containing cocktail_292 using left_hand from level_2 to level_1\npour from shaker_63 to shot_156 containing level_0 using left_hand from level_0 to level_0 WRONG \npour from shaker_63 to shot_156 containing cocktail_292 using left_hand from level_1 to level_0\n</PLAN>"}
{"domain": "barman", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_119 is clean, shot_189 is clean, shot_234 is clean, cocktail_107 has ingredient_348 as its first ingredient, cocktail_107 has ingredient_24 as its second ingredient, dispenser_127 dispenses ingredient_314, dispenser_149 dispenses ingredient_348, dispenser_308 dispenses ingredient_267, dispenser_366 dispenses ingredient_24, shaker_119 is empty, shot_189 is empty, shot_234 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_119 is on the table, shot_189 is on the table, shot_234 is on the table, shaker_119's zero fill level is at level_0, shaker_119's fill level is at level_0.\nMy goal is to have that shot_234 contains cocktail_107.", "output": "My plan is as follows:\n<PLAN>\nshake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty WRONG \ngrasp the shot_189 using left_hand\nfill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty\npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \npour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1\npour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2 WRONG \npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \nclean the shot_189 on left_hand used for ingredient_24 when right_hand is empty\nfill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty\npour from shot_189 containing ingredient_24 to used shaker_119 using right_hand from level_1 to level_2 WRONG \npour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2\nleave the shot_189 using left_hand\ngrasp the shaker_119 using left_hand\nshake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty\npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot189)", "(fill-shot shot189 ingredient24 left right dispenser366)", "(pour-shot-to-clean-shaker shot189 ingredient24 shaker119 left l0 l1)", "(clean-shot shot189 ingredient24 left right)", "(fill-shot shot189 ingredient348 left right dispenser149)", "(pour-shot-to-used-shaker shot189 ingredient348 shaker119 left l1 l2)", "(leave left shot189)", "(grasp left shaker119)", "(shake cocktail107 ingredient348 ingredient24 shaker119 left right)", "(pour-shaker-to-shot cocktail107 shot234 left shaker119 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_119 is clean, shot_189 is clean, shot_234 is clean, cocktail_107 has ingredient_348 as its first ingredient, cocktail_107 has ingredient_24 as its second ingredient, dispenser_127 dispenses ingredient_314, dispenser_149 dispenses ingredient_348, dispenser_308 dispenses ingredient_267, dispenser_366 dispenses ingredient_24, shaker_119 is empty, shot_189 is empty, shot_234 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_119 is on the table, shot_189 is on the table, shot_234 is on the table, shaker_119's zero fill level is at level_0, shaker_119's fill level is at level_0.My goal is to have that shot_234 contains cocktail_107.My plan is as follows:\n<PLAN>\nshake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty WRONG \ngrasp the shot_189 using left_hand\nfill the shot_189 on left_hand with ingredient_24 using dispenser_366 when right_hand is empty\npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \npour from shot_189 containing ingredient_24 to clean shaker_119 using left_hand from level_0 to level_1\npour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2 WRONG \npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1 WRONG \nclean the shot_189 on left_hand used for ingredient_24 when right_hand is empty\nfill the shot_189 on left_hand with ingredient_348 using dispenser_149 when right_hand is empty\npour from shot_189 containing ingredient_24 to used shaker_119 using right_hand from level_1 to level_2 WRONG \npour from shot_189 containing ingredient_348 to used shaker_119 using left_hand from level_1 to level_2\nleave the shot_189 using left_hand\ngrasp the shaker_119 using left_hand\nshake shaker_119 on left_hand containing ingredient_348 and ingredient_24 to get cocktail_107 when right_hand is empty\npour from shaker_119 to shot_234 containing cocktail_107 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_245 is clean, shot_108 is clean, shot_32 is clean, cocktail_367 has ingredient_19 as its first ingredient, cocktail_367 has ingredient_376 as its second ingredient, dispenser_167 dispenses ingredient_376, dispenser_357 dispenses ingredient_125, dispenser_490 dispenses ingredient_19, dispenser_51 dispenses ingredient_466, shaker_245 is empty, shot_108 is empty, shot_32 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_245 is on the table, shot_108 is on the table, shot_32 is on the table, shaker_245's zero fill level is at level_0, shaker_245's fill level is at level_0.\nMy goal is to have that shot_32 contains cocktail_367.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shot_108 using left_hand\nfill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty\nshake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty WRONG \npour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1\nleave the shot_108 using left_hand WRONG \nclean the shot_108 on left_hand used for ingredient_19 when right_hand is empty\nfill the shot_108 on right_hand with ingredient_19 using dispenser_490 when right_hand is empty WRONG \nfill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty\npour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2\nleave the shot_108 using left_hand\nfill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty WRONG \ngrasp the shaker_245 using left_hand\nshake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty\npour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot108)", "(fill-shot shot108 ingredient19 left right dispenser490)", "(pour-shot-to-clean-shaker shot108 ingredient19 shaker245 left l0 l1)", "(clean-shot shot108 ingredient19 left right)", "(fill-shot shot108 ingredient376 left right dispenser167)", "(pour-shot-to-used-shaker shot108 ingredient376 shaker245 left l1 l2)", "(leave left shot108)", "(grasp left shaker245)", "(shake cocktail367 ingredient19 ingredient376 shaker245 left right)", "(pour-shaker-to-shot cocktail367 shot32 left shaker245 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_245 is clean, shot_108 is clean, shot_32 is clean, cocktail_367 has ingredient_19 as its first ingredient, cocktail_367 has ingredient_376 as its second ingredient, dispenser_167 dispenses ingredient_376, dispenser_357 dispenses ingredient_125, dispenser_490 dispenses ingredient_19, dispenser_51 dispenses ingredient_466, shaker_245 is empty, shot_108 is empty, shot_32 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_245 is on the table, shot_108 is on the table, shot_32 is on the table, shaker_245's zero fill level is at level_0, shaker_245's fill level is at level_0.My goal is to have that shot_32 contains cocktail_367.My plan is as follows:\n<PLAN>\ngrasp the shot_108 using left_hand\nfill the shot_108 on left_hand with ingredient_19 using dispenser_490 when right_hand is empty\nshake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty WRONG \npour from shot_108 containing ingredient_19 to clean shaker_245 using left_hand from level_0 to level_1\nleave the shot_108 using left_hand WRONG \nclean the shot_108 on left_hand used for ingredient_19 when right_hand is empty\nfill the shot_108 on right_hand with ingredient_19 using dispenser_490 when right_hand is empty WRONG \nfill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty\npour from shot_108 containing ingredient_376 to used shaker_245 using left_hand from level_1 to level_2\nleave the shot_108 using left_hand\nfill the shot_108 on left_hand with ingredient_376 using dispenser_167 when right_hand is empty WRONG \ngrasp the shaker_245 using left_hand\nshake shaker_245 on left_hand containing ingredient_19 and ingredient_376 to get cocktail_367 when right_hand is empty\npour from shaker_245 to shot_32 containing cocktail_367 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_55 is clean, shot_123 is clean, shot_135 is clean, cocktail_419 has ingredient_103 as its first ingredient, cocktail_419 has ingredient_256 as its second ingredient, dispenser_100 dispenses ingredient_256, dispenser_441 dispenses ingredient_103, dispenser_491 dispenses ingredient_393, shaker_55 is empty, shot_123 is empty, shot_135 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_55 is on the table, shot_123 is on the table, shot_135 is on the table, shaker_55's zero fill level is at level_0, shaker_55's fill level is at level_0.\nMy goal is to have that shot_135 contains cocktail_419.", "output": "My plan is as follows:\n<PLAN>\nclean the shot_123 on left_hand used for ingredient_103 when right_hand is empty WRONG \ngrasp the shot_123 using left_hand\nfill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty\npour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1\nleave the shot_123 using left_hand WRONG \nclean the shot_123 on left_hand used for ingredient_103 when right_hand is empty\nfill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty WRONG \npour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2\ngrasp the shaker_55 using left_hand WRONG \nleave the shot_123 using left_hand\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty WRONG \ngrasp the right_hand using right_hand WRONG \ngrasp the shaker_55 using left_hand\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty\npour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1 WRONG \npour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 10, "raw_plan": ["(grasp left shot123)", "(fill-shot shot123 ingredient103 left right dispenser441)", "(pour-shot-to-clean-shaker shot123 ingredient103 shaker55 left l0 l1)", "(clean-shot shot123 ingredient103 left right)", "(fill-shot shot123 ingredient256 left right dispenser100)", "(pour-shot-to-used-shaker shot123 ingredient256 shaker55 left l1 l2)", "(leave left shot123)", "(grasp left shaker55)", "(shake cocktail419 ingredient103 ingredient256 shaker55 left right)", "(pour-shaker-to-shot cocktail419 shot135 left shaker55 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_55 is clean, shot_123 is clean, shot_135 is clean, cocktail_419 has ingredient_103 as its first ingredient, cocktail_419 has ingredient_256 as its second ingredient, dispenser_100 dispenses ingredient_256, dispenser_441 dispenses ingredient_103, dispenser_491 dispenses ingredient_393, shaker_55 is empty, shot_123 is empty, shot_135 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_55 is on the table, shot_123 is on the table, shot_135 is on the table, shaker_55's zero fill level is at level_0, shaker_55's fill level is at level_0.My goal is to have that shot_135 contains cocktail_419.My plan is as follows:\n<PLAN>\nclean the shot_123 on left_hand used for ingredient_103 when right_hand is empty WRONG \ngrasp the shot_123 using left_hand\nfill the shot_123 on left_hand with ingredient_103 using dispenser_441 when right_hand is empty\npour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1\nleave the shot_123 using left_hand WRONG \nclean the shot_123 on left_hand used for ingredient_103 when right_hand is empty\nfill the shot_123 on left_hand with ingredient_256 using dispenser_100 when right_hand is empty\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty WRONG \npour from shot_123 containing ingredient_256 to used shaker_55 using left_hand from level_1 to level_2\ngrasp the shaker_55 using left_hand WRONG \nleave the shot_123 using left_hand\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty WRONG \ngrasp the right_hand using right_hand WRONG \ngrasp the shaker_55 using left_hand\nshake shaker_55 on left_hand containing ingredient_103 and ingredient_256 to get cocktail_419 when right_hand is empty\npour from shot_123 containing ingredient_103 to clean shaker_55 using left_hand from level_0 to level_1 WRONG \npour from shaker_55 to shot_135 containing cocktail_419 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_43 is clean, shot_377 is clean, shot_53 is clean, cocktail_488 has ingredient_350 as its first ingredient, cocktail_488 has ingredient_182 as its second ingredient, dispenser_289 dispenses ingredient_350, dispenser_313 dispenses ingredient_182, shaker_43 is empty, shot_377 is empty, shot_53 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_43 is on the table, shot_377 is on the table, shot_53 is on the table, shaker_43's zero fill level is at level_0, shaker_43's fill level is at level_0.\nMy goal is to have that shot_377 contains cocktail_488.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shaker_43 using left_hand WRONG \ngrasp the shaker_43 using left_hand\ngrasp the shot_53 using right_hand\nleave the shaker_43 using right_hand WRONG \nleave the shaker_43 using left_hand\nfill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty\ngrasp the right_hand using right_hand WRONG \ngrasp the shaker_43 using left_hand\npour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1\nleave the shaker_43 using left_hand\nclean the shot_53 on right_hand used for ingredient_182 when left_hand is empty\nfill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty\npour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_43 using left_hand\npour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2\nleave the shot_53 using right_hand\nshake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty\npour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 14, "raw_plan": ["(grasp left shaker43)", "(grasp right shot53)", "(leave left shaker43)", "(fill-shot shot53 ingredient182 right left dispenser313)", "(grasp left shaker43)", "(pour-shot-to-clean-shaker shot53 ingredient182 shaker43 right l0 l1)", "(leave left shaker43)", "(clean-shot shot53 ingredient182 right left)", "(fill-shot shot53 ingredient350 right left dispenser289)", "(grasp left shaker43)", "(pour-shot-to-used-shaker shot53 ingredient350 shaker43 right l1 l2)", "(leave right shot53)", "(shake cocktail488 ingredient350 ingredient182 shaker43 left right)", "(pour-shaker-to-shot cocktail488 shot377 left shaker43 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_43 is clean, shot_377 is clean, shot_53 is clean, cocktail_488 has ingredient_350 as its first ingredient, cocktail_488 has ingredient_182 as its second ingredient, dispenser_289 dispenses ingredient_350, dispenser_313 dispenses ingredient_182, shaker_43 is empty, shot_377 is empty, shot_53 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_43 is on the table, shot_377 is on the table, shot_53 is on the table, shaker_43's zero fill level is at level_0, shaker_43's fill level is at level_0.My goal is to have that shot_377 contains cocktail_488.My plan is as follows:\n<PLAN>\ngrasp the shaker_43 using left_hand WRONG \ngrasp the shaker_43 using left_hand\ngrasp the shot_53 using right_hand\nleave the shaker_43 using right_hand WRONG \nleave the shaker_43 using left_hand\nfill the shot_53 on right_hand with ingredient_182 using dispenser_313 when left_hand is empty\ngrasp the right_hand using right_hand WRONG \ngrasp the shaker_43 using left_hand\npour from shot_53 containing ingredient_182 to clean shaker_43 using right_hand from level_0 to level_1\nleave the shaker_43 using left_hand\nclean the shot_53 on right_hand used for ingredient_182 when left_hand is empty\nfill the shot_53 on right_hand with ingredient_350 using dispenser_289 when left_hand is empty\npour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_43 using left_hand\npour from shot_53 containing ingredient_350 to used shaker_43 using right_hand from level_1 to level_2\nleave the shot_53 using right_hand\nshake shaker_43 on left_hand containing ingredient_350 and ingredient_182 to get cocktail_488 when right_hand is empty\npour from shaker_43 to shot_377 containing cocktail_488 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table, the white block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block.", "output": "My plan is as follows:\n<PLAN>\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nstack the yellow block on top of the blue block WRONG \npick up the yellow block\nstack the yellow block on top of the blue block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack b a)", "(stack b c)", "(pick-up d)", "(stack d b)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table, the white block is on the table.My goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block.My plan is as follows:\n<PLAN>\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nstack the yellow block on top of the blue block WRONG \npick up the yellow block\nstack the yellow block on top of the blue block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block, the yellow block is on the table, the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block.", "output": "My plan is as follows:\n<PLAN>\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack a c)", "(put-down a)", "(unstack c b)", "(stack c d)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block, the yellow block is on the table, the white block is on the table.My goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block.My plan is as follows:\n<PLAN>\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the blue block, the blue block is on the table, the orange block is on the table, the white block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block.", "output": "My plan is as follows:\n<PLAN>\npick up the red block WRONG \nunstack the yellow block from on top of the blue block\npick up the blue block WRONG \nstack the white block on top of the blue block WRONG \nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the yellow block WRONG \nstack the yellow block on top of the red block WRONG \nunstack the red block from on top of the white block\nput down the red block WRONG \nput down the red block\npick up the white block\nstack the white block on top of the blue block\nstack the yellow block on top of the red block WRONG \npick up the red block\nstack the red block on top of the white block\npick up the yellow block WRONG \npick up the yellow block\nstack the yellow block on top of the red block\n</PLAN>", "plan_length": 14, "raw_plan": ["(unstack d b)", "(stack d a)", "(pick-up b)", "(stack b c)", "(unstack d a)", "(put-down d)", "(unstack a e)", "(put-down a)", "(pick-up e)", "(stack e b)", "(pick-up a)", "(stack a e)", "(pick-up d)", "(stack d a)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the blue block, the blue block is on the table, the orange block is on the table, the white block is on the table.My goal is to have that the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block.My plan is as follows:\n<PLAN>\npick up the red block WRONG \nunstack the yellow block from on top of the blue block\npick up the blue block WRONG \nstack the white block on top of the blue block WRONG \nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the yellow block WRONG \nstack the yellow block on top of the red block WRONG \nunstack the red block from on top of the white block\nput down the red block WRONG \nput down the red block\npick up the white block\nstack the white block on top of the blue block\nstack the yellow block on top of the red block WRONG \npick up the red block\nstack the red block on top of the white block\npick up the yellow block WRONG \npick up the yellow block\nstack the yellow block on top of the red block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the white block, the blue block is on the table, the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block.", "output": "My plan is as follows:\n<PLAN>\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack c b)", "(stack c a)", "(pick-up b)", "(stack b c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the white block, the blue block is on the table, the white block is on the table.My goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block.My plan is as follows:\n<PLAN>\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table, the white block is on the table.\nMy goal is to have that the white block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the white block\nstack the white block on top of the orange block\n</PLAN>", "plan_length": 4, "raw_plan": ["(unstack d c)", "(put-down d)", "(pick-up e)", "(stack e c)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table, the white block is on the table.My goal is to have that the white block is on top of the orange block.My plan is as follows:\n<PLAN>\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the white block\nstack the white block on top of the orange block\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_128 is at kitchen, tray_291 is at kitchen, tray_484 is at kitchen, bread_94 is at kitchen, content_331 is at kitchen, child_394 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_394 is waiting for sandwich at table_383.\nMy goal is to have that child_394 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a regular sandwich_2 using bread_94 and content_331\nput sandwich_2 on tray_484\nmove tray_484 from kitchen to table_383\nuse tray_484 to serve regular sandwich_2 to child_394 at table_383\n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread94 content331)", "(put_on_tray sandw2 tray484)", "(move_tray tray484 kitchen table383)", "(serve_sandwich sandw2 child394 tray484 table383)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_128 is at kitchen, tray_291 is at kitchen, tray_484 is at kitchen, bread_94 is at kitchen, content_331 is at kitchen, child_394 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_394 is waiting for sandwich at table_383.My goal is to have that child_394 has been served.My plan is as follows:\n<PLAN>\nmake a regular sandwich_2 using bread_94 and content_331\nput sandwich_2 on tray_484\nmove tray_484 from kitchen to table_383\nuse tray_484 to serve regular sandwich_2 to child_394 at table_383\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_108 is at kitchen, bread_374 is at kitchen, bread_420 is at kitchen, bread_445 is at kitchen, content_124 is at kitchen, content_39 is at kitchen, content_472 is at kitchen, child_128 is not allergic to gluten, child_263 is not allergic to gluten, child_43 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, child_128 is waiting for sandwich at table_228, child_263 is waiting for sandwich at table_108, child_43 is waiting for sandwich at table_228.\nMy goal is to have that child_128 has been served, child_263 has been served, child_43 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a regular sandwich_6 using bread_374 and content_124\nput sandwich_6 on tray_108\nmove tray_108 from kitchen to table_108\nuse tray_108 to serve regular sandwich_6 to child_263 at table_108\nmove tray_108 from table_108 to table_228\nmake a regular sandwich_5 using bread_420 and content_39\nmove tray_108 from table_228 to kitchen\nput sandwich_5 on sandwich_5 WRONG \nput sandwich_5 on tray_108\nmove tray_108 from kitchen to table_108 WRONG \nmove tray_108 from kitchen to table_228\nuse tray_108 to serve regular sandwich_5 to child_128 at table_228\nmake a regular sandwich_4 using bread_445 and content_472\nmove tray_108 from table_228 to table_228 WRONG \nmove tray_108 from table_228 to kitchen\nput sandwich_4 on tray_108\nmove tray_108 from kitchen to table_228\nuse tray_108 to serve regular sandwich_4 to child_43 at table_228\n</PLAN>", "plan_length": 15, "raw_plan": ["(make_sandwich sandw6 bread374 content124)", "(put_on_tray sandw6 tray108)", "(move_tray tray108 kitchen table108)", "(serve_sandwich sandw6 child263 tray108 table108)", "(move_tray tray108 table108 table228)", "(make_sandwich sandw5 bread420 content39)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw5 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw5 child128 tray108 table228)", "(make_sandwich sandw4 bread445 content472)", "(move_tray tray108 table228 kitchen)", "(put_on_tray sandw4 tray108)", "(move_tray tray108 kitchen table228)", "(serve_sandwich sandw4 child43 tray108 table228)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_108 is at kitchen, bread_374 is at kitchen, bread_420 is at kitchen, bread_445 is at kitchen, content_124 is at kitchen, content_39 is at kitchen, content_472 is at kitchen, child_128 is not allergic to gluten, child_263 is not allergic to gluten, child_43 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, child_128 is waiting for sandwich at table_228, child_263 is waiting for sandwich at table_108, child_43 is waiting for sandwich at table_228.My goal is to have that child_128 has been served, child_263 has been served, child_43 has been served.My plan is as follows:\n<PLAN>\nmake a regular sandwich_6 using bread_374 and content_124\nput sandwich_6 on tray_108\nmove tray_108 from kitchen to table_108\nuse tray_108 to serve regular sandwich_6 to child_263 at table_108\nmove tray_108 from table_108 to table_228\nmake a regular sandwich_5 using bread_420 and content_39\nmove tray_108 from table_228 to kitchen\nput sandwich_5 on sandwich_5 WRONG \nput sandwich_5 on tray_108\nmove tray_108 from kitchen to table_108 WRONG \nmove tray_108 from kitchen to table_228\nuse tray_108 to serve regular sandwich_5 to child_128 at table_228\nmake a regular sandwich_4 using bread_445 and content_472\nmove tray_108 from table_228 to table_228 WRONG \nmove tray_108 from table_228 to kitchen\nput sandwich_4 on tray_108\nmove tray_108 from kitchen to table_228\nuse tray_108 to serve regular sandwich_4 to child_43 at table_228\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_403 is at kitchen, tray_456 is at kitchen, tray_474 is at kitchen, bread_274 is at kitchen, content_183 is at kitchen, child_425 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_425 is waiting for sandwich at table_320.\nMy goal is to have that child_425 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a regular sandwich_2 using bread_274 and content_183\nput sandwich_2 on tray_474\nmove tray_474 from kitchen to table_320\nuse tray_474 to serve regular sandwich_2 to child_425 at table_320\n</PLAN>", "plan_length": 4, "raw_plan": ["(make_sandwich sandw2 bread274 content183)", "(put_on_tray sandw2 tray474)", "(move_tray tray474 kitchen table320)", "(serve_sandwich sandw2 child425 tray474 table320)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_403 is at kitchen, tray_456 is at kitchen, tray_474 is at kitchen, bread_274 is at kitchen, content_183 is at kitchen, child_425 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, child_425 is waiting for sandwich at table_320.My goal is to have that child_425 has been served.My plan is as follows:\n<PLAN>\nmake a regular sandwich_2 using bread_274 and content_183\nput sandwich_2 on tray_474\nmove tray_474 from kitchen to table_320\nuse tray_474 to serve regular sandwich_2 to child_425 at table_320\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_213 is at kitchen, tray_438 is at kitchen, tray_62 is at kitchen, bread_166 is at kitchen, bread_99 is at kitchen, content_217 is at kitchen, content_63 is at kitchen, child_167 is not allergic to gluten, child_441 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, child_167 is waiting for sandwich at table_404, child_441 is waiting for sandwich at table_46.\nMy goal is to have that child_167 has been served, child_441 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a regular sandwich_4 using bread_166 and content_217\nput sandwich_3 on tray_438 WRONG \nput sandwich_4 on tray_62\nmove tray_62 from kitchen to table_404\nuse tray_62 to serve regular sandwich_4 to child_167 at table_404\nmake a regular sandwich_3 using bread_99 and content_63\nput sandwich_3 on tray_438\nmove tray_438 from kitchen to table_46\nuse tray_438 to serve regular sandwich_3 to child_441 at table_46\n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread166 content217)", "(put_on_tray sandw4 tray62)", "(move_tray tray62 kitchen table404)", "(serve_sandwich sandw4 child167 tray62 table404)", "(make_sandwich sandw3 bread99 content63)", "(put_on_tray sandw3 tray438)", "(move_tray tray438 kitchen table46)", "(serve_sandwich sandw3 child441 tray438 table46)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_213 is at kitchen, tray_438 is at kitchen, tray_62 is at kitchen, bread_166 is at kitchen, bread_99 is at kitchen, content_217 is at kitchen, content_63 is at kitchen, child_167 is not allergic to gluten, child_441 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, child_167 is waiting for sandwich at table_404, child_441 is waiting for sandwich at table_46.My goal is to have that child_167 has been served, child_441 has been served.My plan is as follows:\n<PLAN>\nmake a regular sandwich_4 using bread_166 and content_217\nput sandwich_3 on tray_438 WRONG \nput sandwich_4 on tray_62\nmove tray_62 from kitchen to table_404\nuse tray_62 to serve regular sandwich_4 to child_167 at table_404\nmake a regular sandwich_3 using bread_99 and content_63\nput sandwich_3 on tray_438\nmove tray_438 from kitchen to table_46\nuse tray_438 to serve regular sandwich_3 to child_441 at table_46\n</PLAN>"}
{"domain": "childsnack", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, tray_235 is at kitchen, tray_31 is at kitchen, tray_365 is at kitchen, bread_269 is at kitchen, bread_393 is at kitchen, content_157 is at kitchen, content_338 is at kitchen, child_416 is not allergic to gluten, child_463 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, child_416 is waiting for sandwich at table_232, child_463 is waiting for sandwich at table_31.\nMy goal is to have that child_416 has been served, child_463 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a regular sandwich_4 using bread_269 and content_157\nput sandwich_4 on tray_365\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31 WRONG \nmove tray_365 from kitchen to table_232\nput sandwich_3 on tray_31 WRONG \nuse tray_365 to serve regular sandwich_4 to child_416 at table_232\nmake a regular sandwich_3 using bread_393 and content_338\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31 WRONG \nmove tray_31 from kitchen to table_31 WRONG \nput sandwich_3 on tray_31\nmove tray_31 from kitchen to table_31\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31\n</PLAN>", "plan_length": 8, "raw_plan": ["(make_sandwich sandw4 bread269 content157)", "(put_on_tray sandw4 tray365)", "(move_tray tray365 kitchen table232)", "(serve_sandwich sandw4 child416 tray365 table232)", "(make_sandwich sandw3 bread393 content338)", "(put_on_tray sandw3 tray31)", "(move_tray tray31 kitchen table31)", "(serve_sandwich sandw3 child463 tray31 table31)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, tray_235 is at kitchen, tray_31 is at kitchen, tray_365 is at kitchen, bread_269 is at kitchen, bread_393 is at kitchen, content_157 is at kitchen, content_338 is at kitchen, child_416 is not allergic to gluten, child_463 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, child_416 is waiting for sandwich at table_232, child_463 is waiting for sandwich at table_31.My goal is to have that child_416 has been served, child_463 has been served.My plan is as follows:\n<PLAN>\nmake a regular sandwich_4 using bread_269 and content_157\nput sandwich_4 on tray_365\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31 WRONG \nmove tray_365 from kitchen to table_232\nput sandwich_3 on tray_31 WRONG \nuse tray_365 to serve regular sandwich_4 to child_416 at table_232\nmake a regular sandwich_3 using bread_393 and content_338\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31 WRONG \nmove tray_31 from kitchen to table_31 WRONG \nput sandwich_3 on tray_31\nmove tray_31 from kitchen to table_31\nuse tray_31 to serve regular sandwich_3 to child_463 at table_31\n</PLAN>"}
{"domain": "depots", "instance_id": "4040", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at depot_0, crate_1 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at distributor_0, hoist_6 is at distributor_1, hoist_7 is at distributor_2, hoist_8 is at distributor_2, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at distributor_0, pallet_6 is at distributor_1, pallet_7 is at distributor_2, truck_0 is at depot_0, truck_1 is at depot_0, truck_2 is at distributor_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, crate_0 is clear, crate_1 is clear, pallet_2 is clear, pallet_3 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, crate_0 is on pallet_0, crate_1 is on pallet_1.\nMy goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.", "output": "My plan is as follows:\n<PLAN>\nUse hoist_0 to load crate_0 into truck_1 at depot_0 WRONG \nUse hoist_0 to lift crate_0 from pallet_0 at depot_0\nUse hoist_0 to load crate_0 into truck_1 at depot_0\ndrive truck_1 from depot_0 to distributor_0\nUse hoist_5 to unload crate_0 from truck_1 at distributor_0\nUse hoist_5 to drop crate_0 to pallet_5 at distributor_0\n</PLAN>", "plan_length": 5, "raw_plan": ["(lift hoist0 crate0 pallet0 depot0)", "(load hoist0 crate0 truck1 depot0)", "(drive truck1 depot0 distributor0)", "(unload hoist5 crate0 truck1 distributor0)", "(drop hoist5 crate0 pallet5 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at depot_0, crate_1 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at distributor_0, hoist_6 is at distributor_1, hoist_7 is at distributor_2, hoist_8 is at distributor_2, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at distributor_0, pallet_6 is at distributor_1, pallet_7 is at distributor_2, truck_0 is at depot_0, truck_1 is at depot_0, truck_2 is at distributor_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, crate_0 is clear, crate_1 is clear, pallet_2 is clear, pallet_3 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, crate_0 is on pallet_0, crate_1 is on pallet_1.My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_1.My plan is as follows:\n<PLAN>\nUse hoist_0 to load crate_0 into truck_1 at depot_0 WRONG \nUse hoist_0 to lift crate_0 from pallet_0 at depot_0\nUse hoist_0 to load crate_0 into truck_1 at depot_0\ndrive truck_1 from depot_0 to distributor_0\nUse hoist_5 to unload crate_0 from truck_1 at distributor_0\nUse hoist_5 to drop crate_0 to pallet_5 at distributor_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4000", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_0, crate_1 is at distributor_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at distributor_0, hoist_5 is at distributor_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at distributor_0, pallet_5 is at distributor_1, truck_0 is at depot_0, truck_1 is at depot_3, truck_2 is at distributor_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_1 is clear, pallet_2 is clear, pallet_3 is clear, crate_0 is on pallet_4, crate_1 is on pallet_5.\nMy goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1.", "output": "My plan is as follows:\n<PLAN>\nUse hoist_1 to drop crate_1 to pallet_1 at depot_1 WRONG \ndrive truck_2 from distributor_0 to depot_1\nUse hoist_4 to lift crate_0 from pallet_4 at distributor_0\ndrive truck_0 from depot_0 to depot_2\nUse hoist_5 to lift crate_1 from pallet_5 at distributor_1\ndrive truck_0 from depot_1 to distributor_1 WRONG \ndrive truck_2 from depot_1 to distributor_1\nUse hoist_1 to load crate_0 into truck_2 at distributor_0 WRONG \nUse hoist_5 to load crate_1 into truck_2 at distributor_1\ndrive truck_2 from distributor_1 to depot_1\nUse hoist_1 to unload crate_1 from truck_2 at depot_1\nUse hoist_1 to drop crate_1 to pallet_1 at depot_1\nUse hoist_2 to unload crate_0 from truck_0 at depot_2 WRONG \ndrive truck_0 from depot_2 to distributor_0\nUse hoist_4 to load crate_0 into truck_0 at distributor_0\ndrive truck_0 from distributor_0 to depot_2\nUse hoist_2 to drop crate_0 to pallet_2 at depot_2 WRONG \nUse hoist_2 to unload crate_0 from truck_0 at depot_2\nUse hoist_2 to drop crate_0 to pallet_2 at depot_2\n</PLAN>", "plan_length": 14, "raw_plan": ["(drive truck2 distributor0 depot1)", "(lift hoist4 crate0 pallet4 distributor0)", "(drive truck0 depot0 depot2)", "(lift hoist5 crate1 pallet5 distributor1)", "(drive truck2 depot1 distributor1)", "(load hoist5 crate1 truck2 distributor1)", "(drive truck2 distributor1 depot1)", "(unload hoist1 crate1 truck2 depot1)", "(drop hoist1 crate1 pallet1 depot1)", "(drive truck0 depot2 distributor0)", "(load hoist4 crate0 truck0 distributor0)", "(drive truck0 distributor0 depot2)", "(unload hoist2 crate0 truck0 depot2)", "(drop hoist2 crate0 pallet2 depot2)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_0, crate_1 is at distributor_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at distributor_0, hoist_5 is at distributor_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at distributor_0, pallet_5 is at distributor_1, truck_0 is at depot_0, truck_1 is at depot_3, truck_2 is at distributor_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_1 is clear, pallet_2 is clear, pallet_3 is clear, crate_0 is on pallet_4, crate_1 is on pallet_5.My goal is to have that crate_0 is on pallet_2, crate_1 is on pallet_1.My plan is as follows:\n<PLAN>\nUse hoist_1 to drop crate_1 to pallet_1 at depot_1 WRONG \ndrive truck_2 from distributor_0 to depot_1\nUse hoist_4 to lift crate_0 from pallet_4 at distributor_0\ndrive truck_0 from depot_0 to depot_2\nUse hoist_5 to lift crate_1 from pallet_5 at distributor_1\ndrive truck_0 from depot_1 to distributor_1 WRONG \ndrive truck_2 from depot_1 to distributor_1\nUse hoist_1 to load crate_0 into truck_2 at distributor_0 WRONG \nUse hoist_5 to load crate_1 into truck_2 at distributor_1\ndrive truck_2 from distributor_1 to depot_1\nUse hoist_1 to unload crate_1 from truck_2 at depot_1\nUse hoist_1 to drop crate_1 to pallet_1 at depot_1\nUse hoist_2 to unload crate_0 from truck_0 at depot_2 WRONG \ndrive truck_0 from depot_2 to distributor_0\nUse hoist_4 to load crate_0 into truck_0 at distributor_0\ndrive truck_0 from distributor_0 to depot_2\nUse hoist_2 to drop crate_0 to pallet_2 at depot_2 WRONG \nUse hoist_2 to unload crate_0 from truck_0 at depot_2\nUse hoist_2 to drop crate_0 to pallet_2 at depot_2\n</PLAN>"}
{"domain": "depots", "instance_id": "4120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_4, crate_1 is at distributor_1, hoist_0 is at depot_0, hoist_1 is at distributor_0, hoist_2 is at distributor_1, hoist_3 is at distributor_2, hoist_4 is at distributor_3, hoist_5 is at distributor_4, hoist_6 is at depot_0, pallet_0 is at depot_0, pallet_1 is at distributor_0, pallet_2 is at distributor_1, pallet_3 is at distributor_2, pallet_4 is at distributor_3, pallet_5 is at distributor_4, truck_0 is at distributor_1, truck_1 is at depot_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_1 is clear, pallet_3 is clear, pallet_4 is clear, crate_0 is on pallet_5, crate_1 is on pallet_2.\nMy goal is to have that crate_0 is on crate_1, crate_1 is on pallet_0.", "output": "My plan is as follows:\n<PLAN>\nUse hoist_5 to lift crate_0 from pallet_5 at distributor_4\ndrive truck_0 from distributor_1 to depot_0 WRONG \ndrive truck_0 from distributor_1 to distributor_4\nUse hoist_5 to load crate_0 into truck_0 at distributor_4\nUse hoist_0 to drop crate_0 to crate_1 at depot_0 WRONG \ndrive truck_0 from distributor_4 to distributor_1\nUse hoist_2 to lift crate_1 from pallet_2 at distributor_1\nUse hoist_2 to load crate_1 into truck_0 at distributor_1\ndrive truck_0 from distributor_1 to depot_0\nUse hoist_0 to unload crate_0 from truck_0 at depot_0\nUse hoist_6 to unload crate_1 from truck_0 at depot_0\nUse hoist_6 to drop crate_1 to pallet_0 at depot_0\nUse hoist_0 to drop crate_1 to crate_1 at depot_0 WRONG \nUse hoist_0 to drop crate_0 to crate_1 at depot_0\n</PLAN>", "plan_length": 11, "raw_plan": ["(lift hoist5 crate0 pallet5 distributor4)", "(drive truck0 distributor1 distributor4)", "(load hoist5 crate0 truck0 distributor4)", "(drive truck0 distributor4 distributor1)", "(lift hoist2 crate1 pallet2 distributor1)", "(load hoist2 crate1 truck0 distributor1)", "(drive truck0 distributor1 depot0)", "(unload hoist0 crate0 truck0 depot0)", "(unload hoist6 crate1 truck0 depot0)", "(drop hoist6 crate1 pallet0 depot0)", "(drop hoist0 crate0 crate1 depot0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_4, crate_1 is at distributor_1, hoist_0 is at depot_0, hoist_1 is at distributor_0, hoist_2 is at distributor_1, hoist_3 is at distributor_2, hoist_4 is at distributor_3, hoist_5 is at distributor_4, hoist_6 is at depot_0, pallet_0 is at depot_0, pallet_1 is at distributor_0, pallet_2 is at distributor_1, pallet_3 is at distributor_2, pallet_4 is at distributor_3, pallet_5 is at distributor_4, truck_0 is at distributor_1, truck_1 is at depot_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_1 is clear, pallet_3 is clear, pallet_4 is clear, crate_0 is on pallet_5, crate_1 is on pallet_2.My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_0.My plan is as follows:\n<PLAN>\nUse hoist_5 to lift crate_0 from pallet_5 at distributor_4\ndrive truck_0 from distributor_1 to depot_0 WRONG \ndrive truck_0 from distributor_1 to distributor_4\nUse hoist_5 to load crate_0 into truck_0 at distributor_4\nUse hoist_0 to drop crate_0 to crate_1 at depot_0 WRONG \ndrive truck_0 from distributor_4 to distributor_1\nUse hoist_2 to lift crate_1 from pallet_2 at distributor_1\nUse hoist_2 to load crate_1 into truck_0 at distributor_1\ndrive truck_0 from distributor_1 to depot_0\nUse hoist_0 to unload crate_0 from truck_0 at depot_0\nUse hoist_6 to unload crate_1 from truck_0 at depot_0\nUse hoist_6 to drop crate_1 to pallet_0 at depot_0\nUse hoist_0 to drop crate_1 to crate_1 at depot_0 WRONG \nUse hoist_0 to drop crate_0 to crate_1 at depot_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4080", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at distributor_0, hoist_3 is at distributor_1, hoist_4 is at distributor_2, hoist_5 is at distributor_3, hoist_6 is at distributor_4, hoist_7 is at distributor_5, hoist_8 is at depot_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at distributor_0, pallet_3 is at distributor_1, pallet_4 is at distributor_2, pallet_5 is at distributor_3, pallet_6 is at distributor_4, pallet_7 is at distributor_5, truck_0 is at distributor_5, truck_1 is at distributor_1, truck_2 is at depot_1, truck_3 is at depot_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, crate_0 is on pallet_3, crate_1 is on pallet_1.\nMy goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2.", "output": "My plan is as follows:\n<PLAN>\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1\nUse hoist_3 to load crate_0 into truck_1 at distributor_1\ndrive truck_1 from distributor_1 to distributor_3\nUse hoist_5 to unload crate_0 from truck_1 at distributor_3\nUse hoist_5 to drop crate_0 to pallet_5 at distributor_3\nUse hoist_1 to lift crate_0 from pallet_1 at pallet_1 WRONG \nUse hoist_1 to lift crate_1 from pallet_1 at depot_1\nUse hoist_1 to load crate_1 into truck_2 at depot_1\nUse hoist_2 to unload crate_1 from truck_2 at distributor_0 WRONG \ndrive truck_2 from depot_1 to distributor_0\nUse hoist_2 to unload crate_1 from truck_2 at distributor_0\nUse hoist_1 to lift crate_1 from pallet_1 at depot_1 WRONG \nUse hoist_2 to drop crate_1 to pallet_2 at distributor_0\n</PLAN>", "plan_length": 10, "raw_plan": ["(lift hoist3 crate0 pallet3 distributor1)", "(load hoist3 crate0 truck1 distributor1)", "(drive truck1 distributor1 distributor3)", "(unload hoist5 crate0 truck1 distributor3)", "(drop hoist5 crate0 pallet5 distributor3)", "(lift hoist1 crate1 pallet1 depot1)", "(load hoist1 crate1 truck2 depot1)", "(drive truck2 depot1 distributor0)", "(unload hoist2 crate1 truck2 distributor0)", "(drop hoist2 crate1 pallet2 distributor0)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at distributor_0, hoist_3 is at distributor_1, hoist_4 is at distributor_2, hoist_5 is at distributor_3, hoist_6 is at distributor_4, hoist_7 is at distributor_5, hoist_8 is at depot_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at distributor_0, pallet_3 is at distributor_1, pallet_4 is at distributor_2, pallet_5 is at distributor_3, pallet_6 is at distributor_4, pallet_7 is at distributor_5, truck_0 is at distributor_5, truck_1 is at distributor_1, truck_2 is at depot_1, truck_3 is at depot_0, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, crate_0 is on pallet_3, crate_1 is on pallet_1.My goal is to have that crate_0 is on pallet_5, crate_1 is on pallet_2.My plan is as follows:\n<PLAN>\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1\nUse hoist_3 to load crate_0 into truck_1 at distributor_1\ndrive truck_1 from distributor_1 to distributor_3\nUse hoist_5 to unload crate_0 from truck_1 at distributor_3\nUse hoist_5 to drop crate_0 to pallet_5 at distributor_3\nUse hoist_1 to lift crate_0 from pallet_1 at pallet_1 WRONG \nUse hoist_1 to lift crate_1 from pallet_1 at depot_1\nUse hoist_1 to load crate_1 into truck_2 at depot_1\nUse hoist_2 to unload crate_1 from truck_2 at distributor_0 WRONG \ndrive truck_2 from depot_1 to distributor_0\nUse hoist_2 to unload crate_1 from truck_2 at distributor_0\nUse hoist_1 to lift crate_1 from pallet_1 at depot_1 WRONG \nUse hoist_2 to drop crate_1 to pallet_2 at distributor_0\n</PLAN>"}
{"domain": "depots", "instance_id": "4160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at depot_1, crate_1 is at depot_5, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at depot_5, truck_1 is at depot_5, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_10 is clear, pallet_2 is clear, pallet_3 is clear, pallet_4 is clear, pallet_6 is clear, pallet_7 is clear, pallet_8 is clear, pallet_9 is clear, crate_0 is on pallet_1, crate_1 is on pallet_5.\nMy goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.", "output": "My plan is as follows:\n<PLAN>\ndrive truck_1 from depot_5 to distributor_4\nUse hoist_5 to lift crate_1 from pallet_5 at depot_5\nUse hoist_5 to load crate_1 into truck_0 at depot_5\ndrive truck_0 from depot_5 to distributor_4\nUse hoist_1 to lift crate_0 from pallet_1 at depot_1 WRONG \nUse hoist_10 to unload crate_1 from truck_0 at distributor_4\nUse hoist_10 to drop crate_1 to pallet_10 at distributor_4\nUse hoist_1 to lift crate_0 from pallet_1 at depot_1\ndrive truck_0 from depot_1 to distributor_4 WRONG \nUse hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \ndrive truck_0 from distributor_4 to depot_1\nUse hoist_1 to load crate_0 into truck_0 at depot_1\ndrive truck_0 from depot_1 to distributor_4\nUse hoist_10 to unload crate_0 from truck_0 at distributor_4\nUse hoist_10 to drop crate_0 to crate_1 at distributor_4\n</PLAN>", "plan_length": 12, "raw_plan": ["(drive truck1 depot5 distributor4)", "(lift hoist5 crate1 pallet5 depot5)", "(load hoist5 crate1 truck0 depot5)", "(drive truck0 depot5 distributor4)", "(unload hoist10 crate1 truck0 distributor4)", "(drop hoist10 crate1 pallet10 distributor4)", "(lift hoist1 crate0 pallet1 depot1)", "(drive truck0 distributor4 depot1)", "(load hoist1 crate0 truck0 depot1)", "(drive truck0 depot1 distributor4)", "(unload hoist10 crate0 truck0 distributor4)", "(drop hoist10 crate0 crate1 distributor4)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at depot_1, crate_1 is at depot_5, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at depot_5, truck_1 is at depot_5, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, pallet_0 is clear, pallet_10 is clear, pallet_2 is clear, pallet_3 is clear, pallet_4 is clear, pallet_6 is clear, pallet_7 is clear, pallet_8 is clear, pallet_9 is clear, crate_0 is on pallet_1, crate_1 is on pallet_5.My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_10.My plan is as follows:\n<PLAN>\ndrive truck_1 from depot_5 to distributor_4\nUse hoist_5 to lift crate_1 from pallet_5 at depot_5\nUse hoist_5 to load crate_1 into truck_0 at depot_5\ndrive truck_0 from depot_5 to distributor_4\nUse hoist_1 to lift crate_0 from pallet_1 at depot_1 WRONG \nUse hoist_10 to unload crate_1 from truck_0 at distributor_4\nUse hoist_10 to drop crate_1 to pallet_10 at distributor_4\nUse hoist_1 to lift crate_0 from pallet_1 at depot_1\ndrive truck_0 from depot_1 to distributor_4 WRONG \nUse hoist_10 to drop crate_0 to crate_1 at distributor_4 WRONG \ndrive truck_0 from distributor_4 to depot_1\nUse hoist_1 to load crate_0 into truck_0 at depot_1\ndrive truck_0 from depot_1 to distributor_4\nUse hoist_10 to unload crate_0 from truck_0 at distributor_4\nUse hoist_10 to drop crate_0 to crate_1 at distributor_4\n</PLAN>"}
