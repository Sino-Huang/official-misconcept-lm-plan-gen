{"domain": "barman", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_368 is clean, shot_165 is clean, shot_464 is clean, shot_474 is clean, cocktail_1 has ingredient_303 as its first ingredient, cocktail_2 has ingredient_303 as its first ingredient, cocktail_1 has ingredient_354 as its second ingredient, cocktail_2 has ingredient_354 as its second ingredient, dispenser_236 dispenses ingredient_354, dispenser_372 dispenses ingredient_303, shaker_368 is empty, shot_165 is empty, shot_464 is empty, shot_474 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_368 is on the table, shot_165 is on the table, shot_464 is on the table, shot_474 is on the table, shaker_368's zero fill level is at level_0, shaker_368's fill level is at level_0.\nMy goal is to have that shot_464 contains cocktail_1, shot_474 contains cocktail_2.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shot_165 using left_hand\nfill the shot_165 on left_hand with ingredient_303 using dispenser_372 when right_hand is empty\npour from shot_165 containing ingredient_303 to clean shaker_368 using left_hand from level_0 to level_1\nclean the shot_165 on left_hand used for ingredient_303 when right_hand is empty\nfill the shot_165 on left_hand with ingredient_354 using dispenser_236 when right_hand is empty\nclean shaker_368 on left_hand when right_hand is empty WRONG \npour from shot_165 containing ingredient_354 to used shaker_368 using left_hand from level_1 to level_2\nleave the shot_165 using left_hand\npour from shot_464 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_368 using left_hand\nshake shaker_368 on left_hand containing ingredient_303 and ingredient_354 to get cocktail_2 when right_hand is empty\nclean the shot_464 on right_hand used for ingredient_303 when left_hand is empty WRONG \npour from shaker_368 to shot_474 containing cocktail_2 using left_hand from level_2 to level_1\nempty shaker_368 containing cocktail_2 using left_hand from level_1 to level_0\nclean shaker_368 on left_hand when right_hand is empty\nleave the shot_464 using right_hand WRONG \ngrasp the shot_464 using right_hand\nleave the shaker_368 using left_hand\nfill the shot_464 on right_hand with ingredient_354 using dispenser_236 when left_hand is empty\npour from shot_464 containing ingredient_354 to clean shaker_368 using right_hand from level_0 to level_1\nclean the shot_464 on right_hand used for ingredient_354 when left_hand is empty\npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nfill the shot_464 on right_hand with ingredient_303 using dispenser_372 when left_hand is empty\npour from shot_165 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2 WRONG \npour from shot_464 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2\nclean the shot_464 on right_hand used for ingredient_354 when right_hand is empty WRONG \nclean the shot_464 on right_hand used for ingredient_303 when left_hand is empty\ngrasp the shaker_368 using left_hand\nleave the shot_464 using right_hand\npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nshake shaker_368 on left_hand containing ingredient_303 and ingredient_354 to get cocktail_1 when right_hand is empty\npour from shaker_368 to shot_464 containing cocktail_2 using right_hand from level_2 to level_2 WRONG \npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 24, "raw_plan": ["(grasp left shot165)", "(fill-shot shot165 ingredient303 left right dispenser372)", "(pour-shot-to-clean-shaker shot165 ingredient303 shaker368 left l0 l1)", "(clean-shot shot165 ingredient303 left right)", "(fill-shot shot165 ingredient354 left right dispenser236)", "(pour-shot-to-used-shaker shot165 ingredient354 shaker368 left l1 l2)", "(leave left shot165)", "(grasp left shaker368)", "(shake cocktail2 ingredient303 ingredient354 shaker368 left right)", "(pour-shaker-to-shot cocktail2 shot474 left shaker368 l2 l1)", "(empty-shaker left shaker368 cocktail2 l1 l0)", "(clean-shaker left right shaker368)", "(grasp right shot464)", "(leave left shaker368)", "(fill-shot shot464 ingredient354 right left dispenser236)", "(pour-shot-to-clean-shaker shot464 ingredient354 shaker368 right l0 l1)", "(clean-shot shot464 ingredient354 right left)", "(fill-shot shot464 ingredient303 right left dispenser372)", "(pour-shot-to-used-shaker shot464 ingredient303 shaker368 right l1 l2)", "(clean-shot shot464 ingredient303 right left)", "(grasp left shaker368)", "(leave right shot464)", "(shake cocktail1 ingredient303 ingredient354 shaker368 left right)", "(pour-shaker-to-shot cocktail1 shot464 left shaker368 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_368 is clean, shot_165 is clean, shot_464 is clean, shot_474 is clean, cocktail_1 has ingredient_303 as its first ingredient, cocktail_2 has ingredient_303 as its first ingredient, cocktail_1 has ingredient_354 as its second ingredient, cocktail_2 has ingredient_354 as its second ingredient, dispenser_236 dispenses ingredient_354, dispenser_372 dispenses ingredient_303, shaker_368 is empty, shot_165 is empty, shot_464 is empty, shot_474 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_368 is on the table, shot_165 is on the table, shot_464 is on the table, shot_474 is on the table, shaker_368's zero fill level is at level_0, shaker_368's fill level is at level_0.My goal is to have that shot_464 contains cocktail_1, shot_474 contains cocktail_2.My plan is as follows:\n<PLAN>\ngrasp the shot_165 using left_hand\nfill the shot_165 on left_hand with ingredient_303 using dispenser_372 when right_hand is empty\npour from shot_165 containing ingredient_303 to clean shaker_368 using left_hand from level_0 to level_1\nclean the shot_165 on left_hand used for ingredient_303 when right_hand is empty\nfill the shot_165 on left_hand with ingredient_354 using dispenser_236 when right_hand is empty\nclean shaker_368 on left_hand when right_hand is empty WRONG \npour from shot_165 containing ingredient_354 to used shaker_368 using left_hand from level_1 to level_2\nleave the shot_165 using left_hand\npour from shot_464 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2 WRONG \ngrasp the shaker_368 using left_hand\nshake shaker_368 on left_hand containing ingredient_303 and ingredient_354 to get cocktail_2 when right_hand is empty\nclean the shot_464 on right_hand used for ingredient_303 when left_hand is empty WRONG \npour from shaker_368 to shot_474 containing cocktail_2 using left_hand from level_2 to level_1\nempty shaker_368 containing cocktail_2 using left_hand from level_1 to level_0\nclean shaker_368 on left_hand when right_hand is empty\nleave the shot_464 using right_hand WRONG \ngrasp the shot_464 using right_hand\nleave the shaker_368 using left_hand\nfill the shot_464 on right_hand with ingredient_354 using dispenser_236 when left_hand is empty\npour from shot_464 containing ingredient_354 to clean shaker_368 using right_hand from level_0 to level_1\nclean the shot_464 on right_hand used for ingredient_354 when left_hand is empty\npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nfill the shot_464 on right_hand with ingredient_303 using dispenser_372 when left_hand is empty\npour from shot_165 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2 WRONG \npour from shot_464 containing ingredient_303 to used shaker_368 using right_hand from level_1 to level_2\nclean the shot_464 on right_hand used for ingredient_354 when right_hand is empty WRONG \nclean the shot_464 on right_hand used for ingredient_303 when left_hand is empty\ngrasp the shaker_368 using left_hand\nleave the shot_464 using right_hand\npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nshake shaker_368 on left_hand containing ingredient_303 and ingredient_354 to get cocktail_1 when right_hand is empty\npour from shaker_368 to shot_464 containing cocktail_2 using right_hand from level_2 to level_2 WRONG \npour from shaker_368 to shot_464 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, shot_4 is clean, cocktail_1 has ingredient_3 as its first ingredient, cocktail_2 has ingredient_3 as its first ingredient, cocktail_1 has ingredient_1 as its second ingredient, cocktail_2 has ingredient_2 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, dispenser_3 dispenses ingredient_3, dispenser_4 dispenses ingredient_4, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, shot_4 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shot_4 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.\nMy goal is to have that shot_1 contains cocktail_2, shot_2 contains cocktail_1, shot_3 contains cocktail_1.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shaker_1 using left_hand\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \ngrasp the shot_3 using left_hand WRONG \ngrasp the shot_4 using right_hand\ngrasp the shaker_1 using left_hand WRONG \nleave the shaker_1 using left_hand\nfill the shot_4 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_4 containing ingredient_2 to clean shaker_1 using left_hand from level_1 to level_1 WRONG \npour from shot_4 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nleave the shaker_1 using left_hand\nclean the shot_4 on right_hand used for ingredient_1 when left_hand is empty\nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shaker_1 to shot_2 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \npour from shot_4 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\npour from shot_4 containing ingredient_2 to clean shaker_1 using right_hand from level_0 to level_1 WRONG \nleave the shaker_1 using left_hand\nclean the shot_4 on right_hand used for ingredient_3 when left_hand is empty\nfill the shot_4 on right_hand with ingredient_2 using dispenser_2 when left_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \ngrasp the shaker_1 using right_hand WRONG \ngrasp the shaker_1 using left_hand\nleave the shot_4 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty\npour from shaker_1 to shot_2 containing cocktail_1 using left_hand from level_2 to level_1\npour from shaker_1 to shot_3 containing cocktail_1 using left_hand from level_1 to level_0\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nempty shaker_1 containing cocktail_1 using left_hand from level_0 to level_0\nclean shaker_1 on left_hand when right_hand is empty\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \nleave the shaker_1 using left_hand WRONG \ngrasp the shot_4 using right_hand\nleave the shaker_1 using left_hand\nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty WRONG \npour from shot_4 containing ingredient_2 to clean shaker_1 using right_hand from level_0 to level_1\nclean the shot_4 on right_hand used for ingredient_2 when left_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nleave the shot_4 using right_hand WRONG \nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used ingredient_3 using left_hand from level_0 to level_2 WRONG \npour from shot_4 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_2 using left_hand WRONG \nleave the shot_4 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 31, "raw_plan": ["(grasp left shaker1)", "(grasp right shot4)", "(leave left shaker1)", "(fill-shot shot4 ingredient1 right left dispenser1)", "(grasp left shaker1)", "(pour-shot-to-clean-shaker shot4 ingredient1 shaker1 right l0 l1)", "(leave left shaker1)", "(clean-shot shot4 ingredient1 right left)", "(fill-shot shot4 ingredient3 right left dispenser3)", "(grasp left shaker1)", "(pour-shot-to-used-shaker shot4 ingredient3 shaker1 right l1 l2)", "(leave left shaker1)", "(clean-shot shot4 ingredient3 right left)", "(fill-shot shot4 ingredient2 right left dispenser2)", "(grasp left shaker1)", "(leave right shot4)", "(shake cocktail1 ingredient3 ingredient1 shaker1 left right)", "(pour-shaker-to-shot cocktail1 shot2 left shaker1 l2 l1)", "(pour-shaker-to-shot cocktail1 shot3 left shaker1 l1 l0)", "(empty-shaker left shaker1 cocktail1 l0 l0)", "(clean-shaker left right shaker1)", "(grasp right shot4)", "(leave left shaker1)", "(pour-shot-to-clean-shaker shot4 ingredient2 shaker1 right l0 l1)", "(clean-shot shot4 ingredient2 right left)", "(fill-shot shot4 ingredient3 right left dispenser3)", "(grasp left shaker1)", "(pour-shot-to-used-shaker shot4 ingredient3 shaker1 right l1 l2)", "(leave right shot4)", "(shake cocktail2 ingredient3 ingredient2 shaker1 left right)", "(pour-shaker-to-shot cocktail2 shot1 left shaker1 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, shot_4 is clean, cocktail_1 has ingredient_3 as its first ingredient, cocktail_2 has ingredient_3 as its first ingredient, cocktail_1 has ingredient_1 as its second ingredient, cocktail_2 has ingredient_2 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, dispenser_3 dispenses ingredient_3, dispenser_4 dispenses ingredient_4, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, shot_4 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shot_4 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.My goal is to have that shot_1 contains cocktail_2, shot_2 contains cocktail_1, shot_3 contains cocktail_1.My plan is as follows:\n<PLAN>\ngrasp the shaker_1 using left_hand\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \ngrasp the shot_3 using left_hand WRONG \ngrasp the shot_4 using right_hand\ngrasp the shaker_1 using left_hand WRONG \nleave the shaker_1 using left_hand\nfill the shot_4 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_4 containing ingredient_2 to clean shaker_1 using left_hand from level_1 to level_1 WRONG \npour from shot_4 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nleave the shaker_1 using left_hand\nclean the shot_4 on right_hand used for ingredient_1 when left_hand is empty\nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shaker_1 to shot_2 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \npour from shot_4 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\npour from shot_4 containing ingredient_2 to clean shaker_1 using right_hand from level_0 to level_1 WRONG \nleave the shaker_1 using left_hand\nclean the shot_4 on right_hand used for ingredient_3 when left_hand is empty\nfill the shot_4 on right_hand with ingredient_2 using dispenser_2 when left_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \ngrasp the shaker_1 using right_hand WRONG \ngrasp the shaker_1 using left_hand\nleave the shot_4 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty\npour from shaker_1 to shot_2 containing cocktail_1 using left_hand from level_2 to level_1\npour from shaker_1 to shot_3 containing cocktail_1 using left_hand from level_1 to level_0\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nempty shaker_1 containing cocktail_1 using left_hand from level_0 to level_0\nclean shaker_1 on left_hand when right_hand is empty\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \nleave the shaker_1 using left_hand WRONG \ngrasp the shot_4 using right_hand\nleave the shaker_1 using left_hand\nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty WRONG \npour from shot_4 containing ingredient_2 to clean shaker_1 using right_hand from level_0 to level_1\nclean the shot_4 on right_hand used for ingredient_2 when left_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty WRONG \nleave the shot_4 using right_hand WRONG \nfill the shot_4 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used ingredient_3 using left_hand from level_0 to level_2 WRONG \npour from shot_4 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_2 using left_hand WRONG \nleave the shot_4 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_2 to get cocktail_2 when right_hand is empty\npour from shaker_1 to shot_1 containing cocktail_2 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, shot_4 is clean, cocktail_1 has ingredient_1 as its first ingredient, cocktail_1 has ingredient_2 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, shot_4 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shot_4 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.\nMy goal is to have that shot_1 contains cocktail_1, shot_2 contains ingredient_1, shot_3 contains ingredient_1.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shot_2 using left_hand\nfill the shot_2 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\nleave the shaker_1 using right_hand WRONG \nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty WRONG \ngrasp the shaker_1 using right_hand\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty WRONG \npour from shot_2 containing ingredient_1 to clean shaker_1 using left_hand from level_0 to level_1\nleave the shot_2 using left_hand\ngrasp the shot_3 using left_hand\npour from shaker_1 to shot_1 containing cocktail_1 using right_hand from level_2 to level_1 WRONG \nleave the shaker_1 using right_hand\nfill the shot_3 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\ngrasp the shaker_1 using right_hand\nleave the shot_3 using left_hand\ngrasp the shot_4 using left_hand\nleave the shaker_1 using right_hand\nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty\ngrasp the shaker_1 using right_hand\npour from shot_4 containing ingredient_2 to used shaker_1 using left_hand from level_1 to level_2\nleave the shot_4 using left_hand\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty\ngrasp the shot_2 using left_hand\npour from shaker_1 to shot_3 containing cocktail_1 using right_hand from level_2 to level_1 WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using right_hand from level_2 to level_1\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty WRONG \nleave the shaker_1 using right_hand\nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty WRONG \nrefill the shot_2 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\n</PLAN>", "plan_length": 21, "raw_plan": ["(grasp left shot2)", "(fill-shot shot2 ingredient1 left right dispenser1)", "(grasp right shaker1)", "(pour-shot-to-clean-shaker shot2 ingredient1 shaker1 left l0 l1)", "(leave left shot2)", "(grasp left shot3)", "(leave right shaker1)", "(fill-shot shot3 ingredient1 left right dispenser1)", "(grasp right shaker1)", "(leave left shot3)", "(grasp left shot4)", "(leave right shaker1)", "(fill-shot shot4 ingredient2 left right dispenser2)", "(grasp right shaker1)", "(pour-shot-to-used-shaker shot4 ingredient2 shaker1 left l1 l2)", "(leave left shot4)", "(shake cocktail1 ingredient1 ingredient2 shaker1 right left)", "(grasp left shot2)", "(pour-shaker-to-shot cocktail1 shot1 right shaker1 l2 l1)", "(leave right shaker1)", "(refill-shot shot2 ingredient1 left right dispenser1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, shot_4 is clean, cocktail_1 has ingredient_1 as its first ingredient, cocktail_1 has ingredient_2 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, shot_4 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shot_4 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.My goal is to have that shot_1 contains cocktail_1, shot_2 contains ingredient_1, shot_3 contains ingredient_1.My plan is as follows:\n<PLAN>\ngrasp the shot_2 using left_hand\nfill the shot_2 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\nleave the shaker_1 using right_hand WRONG \nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty WRONG \ngrasp the shaker_1 using right_hand\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty WRONG \npour from shot_2 containing ingredient_1 to clean shaker_1 using left_hand from level_0 to level_1\nleave the shot_2 using left_hand\ngrasp the shot_3 using left_hand\npour from shaker_1 to shot_1 containing cocktail_1 using right_hand from level_2 to level_1 WRONG \nleave the shaker_1 using right_hand\nfill the shot_3 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\ngrasp the shaker_1 using right_hand\nleave the shot_3 using left_hand\ngrasp the shot_4 using left_hand\nleave the shaker_1 using right_hand\nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty\ngrasp the shaker_1 using right_hand\npour from shot_4 containing ingredient_2 to used shaker_1 using left_hand from level_1 to level_2\nleave the shot_4 using left_hand\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty\ngrasp the shot_2 using left_hand\npour from shaker_1 to shot_3 containing cocktail_1 using right_hand from level_2 to level_1 WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using right_hand from level_2 to level_1\nshake shaker_1 on right_hand containing ingredient_1 and ingredient_2 to get cocktail_1 when left_hand is empty WRONG \nleave the shaker_1 using right_hand\nfill the shot_4 on left_hand with ingredient_2 using dispenser_2 when right_hand is empty WRONG \nrefill the shot_2 on left_hand with ingredient_1 using dispenser_1 when right_hand is empty\n</PLAN>"}
{"domain": "barman", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_449 is clean, shot_288 is clean, shot_311 is clean, shot_445 is clean, cocktail_1 has ingredient_302 as its first ingredient, cocktail_2 has ingredient_302 as its first ingredient, cocktail_1 has ingredient_311 as its second ingredient, cocktail_2 has ingredient_311 as its second ingredient, dispenser_175 dispenses ingredient_311, dispenser_354 dispenses ingredient_302, shaker_449 is empty, shot_288 is empty, shot_311 is empty, shot_445 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_449 is on the table, shot_288 is on the table, shot_311 is on the table, shot_445 is on the table, shaker_449's zero fill level is at level_0, shaker_449's fill level is at level_0.\nMy goal is to have that shot_288 contains cocktail_1, shot_445 contains cocktail_2.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shaker_449 using left_hand\ngrasp the shot_445 using right_hand\nleave the shaker_449 using left_hand\nclean shaker_449 on left_hand when right_hand is empty WRONG \nleave the shot_311 using right_hand WRONG \nfill the shot_445 on right_hand with ingredient_302 using dispenser_354 when left_hand is empty\nfill the shot_311 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty WRONG \ngrasp the shaker_449 using left_hand\npour from shot_311 containing ingredient_302 to clean ingredient_302 using right_hand from level_0 to level_2 WRONG \npour from shot_445 containing ingredient_302 to clean shaker_449 using right_hand from level_0 to level_1\nleave the shaker_449 using left_hand\nleave the shaker_449 using left_hand WRONG \nclean the shot_445 on right_hand used for ingredient_302 when left_hand is empty\nfill the shot_445 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty\nclean the shot_445 on right_hand used for ingredient_311 when left_hand is empty WRONG \npour from shot_445 containing ingredient_311 to used shaker_449 using right_hand from level_1 to level_2\nclean the shot_445 on right_hand used for ingredient_311 when left_hand is empty\ngrasp the shaker_449 using left_hand\nleave the shot_288 using right_hand WRONG \nleave the shot_445 using right_hand\nshake shaker_449 on left_hand containing ingredient_302 and ingredient_311 to get cocktail_2 when right_hand is empty\npour from shaker_449 to shot_445 containing cocktail_2 using left_hand from level_2 to level_1\nempty right_hand containing cocktail_2 using right_hand from level_0 to level_0 WRONG \nempty shaker_449 containing cocktail_2 using left_hand from level_1 to level_0\nclean shaker_449 on left_hand when right_hand is empty\ngrasp the shot_311 using right_hand\nleave the shaker_449 using left_hand\ngrasp the shaker_449 using left_hand WRONG \nclean the shot_311 on right_hand used for ingredient_302 when left_hand is empty WRONG \nfill the shot_288 on left_hand with ingredient_302 using dispenser_175 when left_hand is empty WRONG \nfill the shot_311 on right_hand with ingredient_302 using dispenser_354 when left_hand is empty\npour from shot_311 containing ingredient_302 to clean shaker_449 using right_hand from level_0 to level_1\nclean the shot_311 on right_hand used for ingredient_302 when left_hand is empty\nfill the shot_311 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty\nleave the shot_311 using right_hand WRONG \ngrasp the shaker_449 using left_hand\npour from shot_311 containing ingredient_311 to used shaker_449 using right_hand from level_1 to level_2\nleave the shot_311 using right_hand\npour from shaker_449 to shot_288 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nshake shaker_449 on left_hand containing ingredient_302 and ingredient_311 to get cocktail_1 when right_hand is empty\npour from shaker_449 to shot_288 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 28, "raw_plan": ["(grasp left shaker449)", "(grasp right shot445)", "(leave left shaker449)", "(fill-shot shot445 ingredient302 right left dispenser354)", "(grasp left shaker449)", "(pour-shot-to-clean-shaker shot445 ingredient302 shaker449 right l0 l1)", "(leave left shaker449)", "(clean-shot shot445 ingredient302 right left)", "(fill-shot shot445 ingredient311 right left dispenser175)", "(pour-shot-to-used-shaker shot445 ingredient311 shaker449 right l1 l2)", "(clean-shot shot445 ingredient311 right left)", "(grasp left shaker449)", "(leave right shot445)", "(shake cocktail2 ingredient302 ingredient311 shaker449 left right)", "(pour-shaker-to-shot cocktail2 shot445 left shaker449 l2 l1)", "(empty-shaker left shaker449 cocktail2 l1 l0)", "(clean-shaker left right shaker449)", "(grasp right shot311)", "(leave left shaker449)", "(fill-shot shot311 ingredient302 right left dispenser354)", "(pour-shot-to-clean-shaker shot311 ingredient302 shaker449 right l0 l1)", "(clean-shot shot311 ingredient302 right left)", "(fill-shot shot311 ingredient311 right left dispenser175)", "(grasp left shaker449)", "(pour-shot-to-used-shaker shot311 ingredient311 shaker449 right l1 l2)", "(leave right shot311)", "(shake cocktail1 ingredient302 ingredient311 shaker449 left right)", "(pour-shaker-to-shot cocktail1 shot288 left shaker449 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_449 is clean, shot_288 is clean, shot_311 is clean, shot_445 is clean, cocktail_1 has ingredient_302 as its first ingredient, cocktail_2 has ingredient_302 as its first ingredient, cocktail_1 has ingredient_311 as its second ingredient, cocktail_2 has ingredient_311 as its second ingredient, dispenser_175 dispenses ingredient_311, dispenser_354 dispenses ingredient_302, shaker_449 is empty, shot_288 is empty, shot_311 is empty, shot_445 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_449 is on the table, shot_288 is on the table, shot_311 is on the table, shot_445 is on the table, shaker_449's zero fill level is at level_0, shaker_449's fill level is at level_0.My goal is to have that shot_288 contains cocktail_1, shot_445 contains cocktail_2.My plan is as follows:\n<PLAN>\ngrasp the shaker_449 using left_hand\ngrasp the shot_445 using right_hand\nleave the shaker_449 using left_hand\nclean shaker_449 on left_hand when right_hand is empty WRONG \nleave the shot_311 using right_hand WRONG \nfill the shot_445 on right_hand with ingredient_302 using dispenser_354 when left_hand is empty\nfill the shot_311 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty WRONG \ngrasp the shaker_449 using left_hand\npour from shot_311 containing ingredient_302 to clean ingredient_302 using right_hand from level_0 to level_2 WRONG \npour from shot_445 containing ingredient_302 to clean shaker_449 using right_hand from level_0 to level_1\nleave the shaker_449 using left_hand\nleave the shaker_449 using left_hand WRONG \nclean the shot_445 on right_hand used for ingredient_302 when left_hand is empty\nfill the shot_445 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty\nclean the shot_445 on right_hand used for ingredient_311 when left_hand is empty WRONG \npour from shot_445 containing ingredient_311 to used shaker_449 using right_hand from level_1 to level_2\nclean the shot_445 on right_hand used for ingredient_311 when left_hand is empty\ngrasp the shaker_449 using left_hand\nleave the shot_288 using right_hand WRONG \nleave the shot_445 using right_hand\nshake shaker_449 on left_hand containing ingredient_302 and ingredient_311 to get cocktail_2 when right_hand is empty\npour from shaker_449 to shot_445 containing cocktail_2 using left_hand from level_2 to level_1\nempty right_hand containing cocktail_2 using right_hand from level_0 to level_0 WRONG \nempty shaker_449 containing cocktail_2 using left_hand from level_1 to level_0\nclean shaker_449 on left_hand when right_hand is empty\ngrasp the shot_311 using right_hand\nleave the shaker_449 using left_hand\ngrasp the shaker_449 using left_hand WRONG \nclean the shot_311 on right_hand used for ingredient_302 when left_hand is empty WRONG \nfill the shot_288 on left_hand with ingredient_302 using dispenser_175 when left_hand is empty WRONG \nfill the shot_311 on right_hand with ingredient_302 using dispenser_354 when left_hand is empty\npour from shot_311 containing ingredient_302 to clean shaker_449 using right_hand from level_0 to level_1\nclean the shot_311 on right_hand used for ingredient_302 when left_hand is empty\nfill the shot_311 on right_hand with ingredient_311 using dispenser_175 when left_hand is empty\nleave the shot_311 using right_hand WRONG \ngrasp the shaker_449 using left_hand\npour from shot_311 containing ingredient_311 to used shaker_449 using right_hand from level_1 to level_2\nleave the shot_311 using right_hand\npour from shaker_449 to shot_288 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nshake shaker_449 on left_hand containing ingredient_302 and ingredient_311 to get cocktail_1 when right_hand is empty\npour from shaker_449 to shot_288 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "barman", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.", "input": "As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, cocktail_1 has ingredient_3 as its first ingredient, cocktail_2 has ingredient_1 as its first ingredient, cocktail_1 has ingredient_1 as its second ingredient, cocktail_2 has ingredient_3 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, dispenser_3 dispenses ingredient_3, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.\nMy goal is to have that shot_1 contains cocktail_1, shot_2 contains cocktail_2.", "output": "My plan is as follows:\n<PLAN>\ngrasp the shaker_1 using left_hand\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nfill the shot_3 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\ngrasp the left_hand using left_hand WRONG \ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\ngrasp the shot_3 using right_hand WRONG \nleave the shaker_1 using left_hand\nclean the shot_3 on right_hand used for ingredient_1 when left_hand is empty\nclean the shot_3 on right_hand used for ingredient_3 when left_hand is empty WRONG \nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_3 using right_hand\nshake shaker_1 on left_hand containing ingredient_1 and ingredient_3 to get cocktail_2 when right_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \npour from shaker_1 to shot_2 containing cocktail_2 using left_hand from level_2 to level_1\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nclean the shot_3 on right_hand used for ingredient_3 when left_hand is empty\nleave the shot_3 using right_hand WRONG \ngrasp the shaker_1 using left_hand\nempty shaker_1 containing cocktail_2 using left_hand from level_1 to level_0\nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty WRONG \nleave the shot_3 using right_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2 WRONG \nclean shaker_1 on left_hand when right_hand is empty\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \nfill the shot_3 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\npour from shot_3 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\ngrasp the shaker_1 using left_hand WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nclean the shot_3 on right_hand used for ingredient_1 when left_hand is empty\nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_3 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty\npour from left_hand to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>", "plan_length": 32, "raw_plan": ["(grasp left shaker1)", "(grasp right shot3)", "(leave left shaker1)", "(fill-shot shot3 ingredient1 right left dispenser1)", "(grasp left shaker1)", "(pour-shot-to-clean-shaker shot3 ingredient1 shaker1 right l0 l1)", "(leave left shaker1)", "(clean-shot shot3 ingredient1 right left)", "(fill-shot shot3 ingredient3 right left dispenser3)", "(grasp left shaker1)", "(pour-shot-to-used-shaker shot3 ingredient3 shaker1 right l1 l2)", "(leave right shot3)", "(shake cocktail2 ingredient1 ingredient3 shaker1 left right)", "(pour-shaker-to-shot cocktail2 shot2 left shaker1 l2 l1)", "(grasp right shot3)", "(leave left shaker1)", "(clean-shot shot3 ingredient3 right left)", "(grasp left shaker1)", "(empty-shaker left shaker1 cocktail2 l1 l0)", "(leave right shot3)", "(clean-shaker left right shaker1)", "(grasp right shot3)", "(leave left shaker1)", "(fill-shot shot3 ingredient1 right left dispenser1)", "(pour-shot-to-clean-shaker shot3 ingredient1 shaker1 right l0 l1)", "(clean-shot shot3 ingredient1 right left)", "(fill-shot shot3 ingredient3 right left dispenser3)", "(grasp left shaker1)", "(pour-shot-to-used-shaker shot3 ingredient3 shaker1 right l1 l2)", "(leave right shot3)", "(shake cocktail1 ingredient3 ingredient1 shaker1 left right)", "(pour-shaker-to-shot cocktail1 shot1 left shaker1 l2 l1)"], "full_text_prompt": "I have to plan the actions for a robotic bartender to prepare cocktails. The bartender has two hands and works with various containers and ingredients to mix and serve drinks.\nHere are the actions that can be performed:\nGrasp a container (shot or shaker) from the table.\nLeave a container on the table.\nFill-shot with an ingredient from a dispenser.\nRefill-shot with the same ingredient it contained before.\nEmpty a shot.\nClean a shot.\nPour the content of a shot into a clean shaker.\nPour the content of a shot into a used shaker that already contain some ingredient.\nEmpty a shaker.\nClean a shaker.\nShake the shaker to mix the ingredients.\nPour the content of a shaker into a shot.\nThe following are the restrictions on the actions:\nWe can grasp a container only if the container is on the table.\nWe can grasp a container only our hand is empty.\nOnce we grasp a container, we are holding the container and our hand is no longer empty.\nWe can leave a container on the table only if we are holding the container.\nOnce we leave a container on the table, the container is on the table and we are no longer holding the container.\nOnce we leave a container on the table, our hand becomes empty.\nWe can fill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nWe can fill a shot with an ingredient only if the shot is empty and clean.\nOnce we fill a shot with an ingredient, the shot is no longer empty and clean.\nOnce we fill a shot with an ingredient, the shot contains the ingredient and we say that the shot is used to store the ingredient.\nWe can refill a shot with an ingredient only if the shot is used to store the same ingredient.\nWe can refill a shot with an ingredient only if the shot is currently empty.\nWe can refill a shot with an ingredient only if one hand is holding the shot and the other hand is empty to manipulate the dispenser that contains the ingredient.\nOnce we refill a shot with an ingredient, the shot contains the ingredient and is no longer empty.\nWe can empty a shot only if the shot contains some ingredient.\nWe can empty a shot only if we are holding the shot.\nOnce we empty a shot, the shot no more contains any ingredient and is empty.\nWe can clean a shot only if we are holding the shot and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shot only if the shot is empty but is used to store some ingredient.\nOnce we clean a shot, the shot is clean and is considered not used to store any ingredient.\nWe can pour the content of a shot into a clean shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a clean shaker only if the shaker is clean and empty.\nOnce we pour the content of a shot into a clean shaker, the shaker contains the ingredient and thus the shaker is no longer empty.\nOnce we pour the content of a shot into a clean shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a clean shaker, the shaker's fill level will increment one level.\nWe can pour the content of a shot into a used shaker only if we are holding the shot and the shot contains some ingredient.\nWe can pour the content of a shot into a used shaker only if the shaker has not been shaken yet.\nOnce we pour the content of a shot into a used shaker, the shaker contains the ingredients.\nOnce we pour the content of a shot into a used shaker, the shot does not contain any ingredient and is empty.\nOnce we pour the content of a shot into a used shaker, the shaker's fill level will increment one level.\nWe can empty a shaker only if we are holding the shaker.\nWe can empty a shaker only if the shaker contains some cocktails.\nWe can empty a shaker only if the shaker has been shaken.\nOnce we empty a shaker, the shaker no longer contains any cocktails and is empty.\nOnce we empty a shaker, the shaker's fill level will become zero.\nOnce we empty a shaker, the shaker is considered not shaken.\nWe can clean a shaker only if we are holding the shaker and another hand is empty to manipulate the cleaning equipment.\nWe can clean a shaker only if the shaker is empty.\nOnce we clean a shaker, the shaker is clean.\nWe can shake a shaker only if we are holding the shaker and the shaker contains two types of ingredients.\nWe can shake a shaker only if the shaker has not yet shaken.\nOnce we shake a shaker, the shaker contains a cocktail that is a mixture of the two ingredients.\nOnce we shake a shaker, the shaker is considered shaken.\nWe can pour the content of a shaker into a shot only if we are holding the shaker and the shaker contains a cocktail.\nWe can pour the content of a shaker into a shot only if the shot is empty and clean.\nOnce we pour the content of a shaker into a shot, the shot contains the cocktail and the shot is not empty.\nOnce we pour the content of a shaker into a shot, the shot is not clean.\nOnce we pour the content of a shaker into a shot, the shaker's fill level will decrement one level.As initial conditions I have that, shaker_1 is clean, shot_1 is clean, shot_2 is clean, shot_3 is clean, cocktail_1 has ingredient_3 as its first ingredient, cocktail_2 has ingredient_1 as its first ingredient, cocktail_1 has ingredient_1 as its second ingredient, cocktail_2 has ingredient_3 as its second ingredient, dispenser_1 dispenses ingredient_1, dispenser_2 dispenses ingredient_2, dispenser_3 dispenses ingredient_3, shaker_1 is empty, shot_1 is empty, shot_2 is empty, shot_3 is empty, left_hand is empty, right_hand is empty, level_1 is the next level after level_0, level_2 is the next level after level_1, shaker_1 is on the table, shot_1 is on the table, shot_2 is on the table, shot_3 is on the table, shaker_1's zero fill level is at level_0, shaker_1's fill level is at level_0.My goal is to have that shot_1 contains cocktail_1, shot_2 contains cocktail_2.My plan is as follows:\n<PLAN>\ngrasp the shaker_1 using left_hand\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nfill the shot_3 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\ngrasp the left_hand using left_hand WRONG \ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\ngrasp the shot_3 using right_hand WRONG \nleave the shaker_1 using left_hand\nclean the shot_3 on right_hand used for ingredient_1 when left_hand is empty\nclean the shot_3 on right_hand used for ingredient_3 when left_hand is empty WRONG \nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_3 using right_hand\nshake shaker_1 on left_hand containing ingredient_1 and ingredient_3 to get cocktail_2 when right_hand is empty\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \npour from shaker_1 to shot_2 containing cocktail_2 using left_hand from level_2 to level_1\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nclean the shot_3 on right_hand used for ingredient_3 when left_hand is empty\nleave the shot_3 using right_hand WRONG \ngrasp the shaker_1 using left_hand\nempty shaker_1 containing cocktail_2 using left_hand from level_1 to level_0\nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty WRONG \nleave the shot_3 using right_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2 WRONG \nclean shaker_1 on left_hand when right_hand is empty\ngrasp the shot_3 using right_hand\nleave the shaker_1 using left_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty WRONG \nfill the shot_3 on right_hand with ingredient_1 using dispenser_1 when left_hand is empty\npour from shot_3 containing ingredient_1 to clean shaker_1 using right_hand from level_0 to level_1\ngrasp the shaker_1 using left_hand WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using left_hand from level_2 to level_1 WRONG \nclean the shot_3 on right_hand used for ingredient_1 when left_hand is empty\nfill the shot_3 on right_hand with ingredient_3 using dispenser_3 when left_hand is empty\ngrasp the shaker_1 using left_hand\npour from shot_3 containing ingredient_3 to used shaker_1 using right_hand from level_1 to level_2\nleave the shot_3 using right_hand\nshake shaker_1 on left_hand containing ingredient_3 and ingredient_1 to get cocktail_1 when right_hand is empty\npour from left_hand to shot_1 containing cocktail_2 using left_hand from level_2 to level_1 WRONG \npour from shaker_1 to shot_1 containing cocktail_1 using left_hand from level_2 to level_1\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the magenta block, the blue block is on top of the black block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block, the black block is on top of the yellow block, the magenta block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the magenta block, the white block is on top of the orange block, the magenta block is on top of the red block, the black block is on top of the blue block.", "output": "My plan is as follows:\n<PLAN>\nunstack the white block from on top of the orange block\nput down the white block\nunstack the black block from on top of the yellow block WRONG \nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the black block\npick up the orange block WRONG \npick up the magenta block WRONG \nput down the blue block\nunstack the black block from on top of the yellow block\nput down the black block WRONG \nstack the black block on top of the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the magenta block\nput down the red block WRONG \nput down the red block\nstack the orange block on top of the magenta block WRONG \npick up the magenta block WRONG \npick up the magenta block\nstack the magenta block on top of the red block\npick up the orange block\nstack the orange block on top of the magenta block\npick up the white block\nstack the white block on top of the orange block\nunstack the blue block from on top of the blue block WRONG \nunstack the black block from on top of the blue block\nput down the black block\nstack the black block on top of the blue block WRONG \npick up the blue block\nstack the blue block on top of the yellow block\npick up the black block\nstack the black block on top of the blue block\n</PLAN>", "plan_length": 24, "raw_plan": ["(unstack e c)", "(put-down e)", "(unstack c b)", "(put-down c)", "(unstack b g)", "(put-down b)", "(unstack g d)", "(stack g b)", "(unstack d a)", "(put-down d)", "(unstack a f)", "(put-down a)", "(pick-up f)", "(stack f a)", "(pick-up c)", "(stack c f)", "(pick-up e)", "(stack e c)", "(unstack g b)", "(put-down g)", "(pick-up b)", "(stack b d)", "(pick-up g)", "(stack g b)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the magenta block, the blue block is on top of the black block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block, the black block is on top of the yellow block, the magenta block is on the table.My goal is to have that the blue block is on top of the yellow block, the orange block is on top of the magenta block, the white block is on top of the orange block, the magenta block is on top of the red block, the black block is on top of the blue block.My plan is as follows:\n<PLAN>\nunstack the white block from on top of the orange block\nput down the white block\nunstack the black block from on top of the yellow block WRONG \nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the black block\npick up the orange block WRONG \npick up the magenta block WRONG \nput down the blue block\nunstack the black block from on top of the yellow block\nput down the black block WRONG \nstack the black block on top of the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the magenta block\nput down the red block WRONG \nput down the red block\nstack the orange block on top of the magenta block WRONG \npick up the magenta block WRONG \npick up the magenta block\nstack the magenta block on top of the red block\npick up the orange block\nstack the orange block on top of the magenta block\npick up the white block\nstack the white block on top of the orange block\nunstack the blue block from on top of the blue block WRONG \nunstack the black block from on top of the blue block\nput down the black block\nstack the black block on top of the blue block WRONG \npick up the blue block\nstack the blue block on top of the yellow block\npick up the black block\nstack the black block on top of the blue block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block, the white block is on top of the magenta block, the magenta block is on top of the blue block, the red block is on the table.\nMy goal is to have that the red block is on top of the blue block, the yellow block is on top of the magenta block, the white block is on top of the yellow block, the magenta block is on top of the orange block.", "output": "My plan is as follows:\n<PLAN>\nunstack the white block from on top of the magenta block\npick up the white block WRONG \nput down the white block\nput down the white block WRONG \npick up the magenta block WRONG \nunstack the magenta block from on top of the blue block\nput down the magenta block WRONG \nput down the magenta block\nunstack the blue block from on top of the yellow block\nput down the blue block WRONG \nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block WRONG \nstack the yellow block on top of the magenta block\nunstack the orange block from on top of the red block\nput down the orange block\nstack the white block on top of the yellow block WRONG \npick up the red block\nstack the white block on top of the yellow block WRONG \npick up the white block WRONG \nstack the red block on top of the blue block\npick up the yellow block WRONG \nunstack the yellow block from on top of the magenta block\nput down the yellow block\npick up the white block\nstack the white block on top of the yellow block\npick up the magenta block\nstack the yellow block on top of the magenta block WRONG \nstack the magenta block on top of the orange block\npick up the yellow block WRONG \nunstack the white block from on top of the yellow block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the magenta block\nstack the white block on top of the yellow block WRONG \npick up the white block\nstack the white block on top of the yellow block\n</PLAN>", "plan_length": 24, "raw_plan": ["(unstack e f)", "(put-down e)", "(unstack f b)", "(put-down f)", "(unstack b d)", "(put-down b)", "(unstack d c)", "(stack d f)", "(unstack c a)", "(put-down c)", "(pick-up a)", "(stack a b)", "(unstack d f)", "(put-down d)", "(pick-up e)", "(stack e d)", "(pick-up f)", "(stack f c)", "(unstack e d)", "(put-down e)", "(pick-up d)", "(stack d f)", "(pick-up e)", "(stack e d)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block, the white block is on top of the magenta block, the magenta block is on top of the blue block, the red block is on the table.My goal is to have that the red block is on top of the blue block, the yellow block is on top of the magenta block, the white block is on top of the yellow block, the magenta block is on top of the orange block.My plan is as follows:\n<PLAN>\nunstack the white block from on top of the magenta block\npick up the white block WRONG \nput down the white block\nput down the white block WRONG \npick up the magenta block WRONG \nunstack the magenta block from on top of the blue block\nput down the magenta block WRONG \nput down the magenta block\nunstack the blue block from on top of the yellow block\nput down the blue block WRONG \nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block WRONG \nstack the yellow block on top of the magenta block\nunstack the orange block from on top of the red block\nput down the orange block\nstack the white block on top of the yellow block WRONG \npick up the red block\nstack the white block on top of the yellow block WRONG \npick up the white block WRONG \nstack the red block on top of the blue block\npick up the yellow block WRONG \nunstack the yellow block from on top of the magenta block\nput down the yellow block\npick up the white block\nstack the white block on top of the yellow block\npick up the magenta block\nstack the yellow block on top of the magenta block WRONG \nstack the magenta block on top of the orange block\npick up the yellow block WRONG \nunstack the white block from on top of the yellow block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the magenta block\nstack the white block on top of the yellow block WRONG \npick up the white block\nstack the white block on top of the yellow block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the black block, the yellow block is on top of the cyan block, the white block is on top of the yellow block, the magenta block is on top of the green block, the black block is on top of the magenta block, the cyan block is on top of the orange block, the green block is on top of the red block, the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the green block, the yellow block is on top of the white block, the white block is on top of the blue block, the magenta block is on top of the yellow block, the cyan block is on top of the red block, the green block is on top of the magenta block.", "output": "My plan is as follows:\n<PLAN>\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the cyan block\npick up the yellow block WRONG \nput down the yellow block\npick up the cyan block WRONG \nunstack the cyan block from on top of the orange block\nput down the cyan block\nunstack the black block from on top of the black block WRONG \nunstack the orange block from on top of the black block\nput down the orange block WRONG \nput down the orange block\nunstack the black block from on top of the magenta block\nunstack the green block from on top of the red block WRONG \nput down the black block\nput down the cyan block WRONG \nunstack the magenta block from on top of the green block\nput down the magenta block\nunstack the green block from on top of the red block\nput down the green block\nunstack the red block from on top of the blue block\npick up the white block WRONG \nput down the red block\npick up the white block\nstack the white block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the white block\npick up the magenta block\nstack the yellow block on top of the yellow block WRONG \nstack the magenta block on top of the yellow block\npick up the green block\npick up the orange block WRONG \nstack the green block on top of the magenta block\nstack the cyan block on top of the red block WRONG \npick up the cyan block\nstack the cyan block on top of the red block\npick up the orange block\nstack the orange block on top of the green block\nunstack the cyan block from on top of the red block\nput down the cyan block\npick up the red block\nstack the red block on top of the orange block\npick up the cyan block\nstack the cyan block on top of the red block\n</PLAN>", "plan_length": 34, "raw_plan": ["(unstack e d)", "(put-down e)", "(unstack d h)", "(put-down d)", "(unstack h c)", "(put-down h)", "(unstack c g)", "(put-down c)", "(unstack g f)", "(put-down g)", "(unstack f i)", "(put-down f)", "(unstack i a)", "(put-down i)", "(unstack a b)", "(put-down a)", "(pick-up e)", "(stack e b)", "(pick-up d)", "(stack d e)", "(pick-up f)", "(stack f d)", "(pick-up i)", "(stack i f)", "(pick-up h)", "(stack h a)", "(pick-up c)", "(stack c i)", "(unstack h a)", "(put-down h)", "(pick-up a)", "(stack a c)", "(pick-up h)", "(stack h a)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the black block, the yellow block is on top of the cyan block, the white block is on top of the yellow block, the magenta block is on top of the green block, the black block is on top of the magenta block, the cyan block is on top of the orange block, the green block is on top of the red block, the blue block is on the table.My goal is to have that the red block is on top of the orange block, the orange block is on top of the green block, the yellow block is on top of the white block, the white block is on top of the blue block, the magenta block is on top of the yellow block, the cyan block is on top of the red block, the green block is on top of the magenta block.My plan is as follows:\n<PLAN>\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the cyan block\npick up the yellow block WRONG \nput down the yellow block\npick up the cyan block WRONG \nunstack the cyan block from on top of the orange block\nput down the cyan block\nunstack the black block from on top of the black block WRONG \nunstack the orange block from on top of the black block\nput down the orange block WRONG \nput down the orange block\nunstack the black block from on top of the magenta block\nunstack the green block from on top of the red block WRONG \nput down the black block\nput down the cyan block WRONG \nunstack the magenta block from on top of the green block\nput down the magenta block\nunstack the green block from on top of the red block\nput down the green block\nunstack the red block from on top of the blue block\npick up the white block WRONG \nput down the red block\npick up the white block\nstack the white block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the white block\npick up the magenta block\nstack the yellow block on top of the yellow block WRONG \nstack the magenta block on top of the yellow block\npick up the green block\npick up the orange block WRONG \nstack the green block on top of the magenta block\nstack the cyan block on top of the red block WRONG \npick up the cyan block\nstack the cyan block on top of the red block\npick up the orange block\nstack the orange block on top of the green block\nunstack the cyan block from on top of the red block\nput down the cyan block\npick up the red block\nstack the red block on top of the orange block\npick up the cyan block\nstack the cyan block on top of the red block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the red block is clear, the blue block is clear, the cyan block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the magenta block, the orange block is on top of the white block, the yellow block is on top of the black block, the magenta block is on top of the yellow block, the white block is on the table, the black block is on the table, the cyan block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the magenta block, the orange block is on top of the red block, the yellow block is on top of the orange block, the white block is on top of the black block, the black block is on top of the blue block, the cyan block is on top of the yellow block.", "output": "My plan is as follows:\n<PLAN>\nunstack the red block from on top of the orange block\nstack the red block on top of the white block WRONG \nput down the red block\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the blue block from on top of the magenta block\nput down the blue block\nunstack the magenta block from on top of the yellow block\nput down the magenta block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the black block\npick up the yellow block WRONG \nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the magenta block\npick up the cyan block\nstack the cyan block on top of the yellow block\nstack the cyan block on top of the yellow block WRONG \npick up the black block\nstack the black block on top of the blue block\npick up the white block\nstack the black block on top of the black block WRONG \nstack the white block on top of the black block\nunstack the cyan block from on top of the yellow block\nstack the cyan block on top of the yellow block WRONG \nput down the cyan block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the cyan block\npick up the cyan block WRONG \npick up the cyan block WRONG \nstack the cyan block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the white block\npick up the orange block\nunstack the cyan block from on top of the yellow block WRONG \nstack the orange block on top of the red block\nunstack the cyan block from on top of the yellow block\nstack the yellow block on top of the orange block WRONG \nput down the cyan block\nstack the yellow block on top of the orange block WRONG \npick up the yellow block WRONG \npick up the yellow block\nstack the yellow block on top of the orange block\npick up the cyan block\nstack the cyan block on top of the yellow block\n</PLAN>", "plan_length": 36, "raw_plan": ["(unstack a c)", "(put-down a)", "(unstack c e)", "(stack c a)", "(unstack b f)", "(put-down b)", "(unstack f d)", "(put-down f)", "(unstack d g)", "(stack d c)", "(pick-up b)", "(stack b f)", "(pick-up h)", "(stack h d)", "(pick-up g)", "(stack g b)", "(pick-up e)", "(stack e g)", "(unstack h d)", "(put-down h)", "(unstack d c)", "(put-down d)", "(pick-up h)", "(stack h d)", "(unstack c a)", "(put-down c)", "(pick-up a)", "(stack a e)", "(pick-up c)", "(stack c a)", "(unstack h d)", "(put-down h)", "(pick-up d)", "(stack d c)", "(pick-up h)", "(stack h d)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the red block is clear, the blue block is clear, the cyan block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the magenta block, the orange block is on top of the white block, the yellow block is on top of the black block, the magenta block is on top of the yellow block, the white block is on the table, the black block is on the table, the cyan block is on the table.My goal is to have that the red block is on top of the white block, the blue block is on top of the magenta block, the orange block is on top of the red block, the yellow block is on top of the orange block, the white block is on top of the black block, the black block is on top of the blue block, the cyan block is on top of the yellow block.My plan is as follows:\n<PLAN>\nunstack the red block from on top of the orange block\nstack the red block on top of the white block WRONG \nput down the red block\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the blue block from on top of the magenta block\nput down the blue block\nunstack the magenta block from on top of the yellow block\nput down the magenta block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the black block\npick up the yellow block WRONG \nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the magenta block\npick up the cyan block\nstack the cyan block on top of the yellow block\nstack the cyan block on top of the yellow block WRONG \npick up the black block\nstack the black block on top of the blue block\npick up the white block\nstack the black block on top of the black block WRONG \nstack the white block on top of the black block\nunstack the cyan block from on top of the yellow block\nstack the cyan block on top of the yellow block WRONG \nput down the cyan block\nunstack the yellow block from on top of the yellow block WRONG \nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the cyan block\npick up the cyan block WRONG \npick up the cyan block WRONG \nstack the cyan block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the white block\npick up the orange block\nunstack the cyan block from on top of the yellow block WRONG \nstack the orange block on top of the red block\nunstack the cyan block from on top of the yellow block\nstack the yellow block on top of the orange block WRONG \nput down the cyan block\nstack the yellow block on top of the orange block WRONG \npick up the yellow block WRONG \npick up the yellow block\nstack the yellow block on top of the orange block\npick up the cyan block\nstack the cyan block on top of the yellow block\n</PLAN>"}
{"domain": "blocksworld", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.", "input": "As initial conditions I have that, the magenta block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the black block, the yellow block is on top of the blue block, the white block is on top of the red block, the magenta block is on top of the yellow block, the black block is on top of the white block, the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the magenta block, the magenta block is on top of the orange block, the black block is on top of the white block.", "output": "My plan is as follows:\n<PLAN>\nunstack the magenta block from on top of the yellow block\nput down the magenta block\nunstack the yellow block from on top of the blue block\nput down the yellow block WRONG \nput down the yellow block\nunstack the blue block from on top of the black block\nunstack the blue block from on top of the yellow block WRONG \npick up the black block WRONG \nstack the blue block on top of the yellow block\nput down the white block WRONG \nunstack the black block from on top of the white block\nput down the orange block WRONG \nput down the black block\nunstack the white block from on top of the red block\nstack the white block on top of the magenta block\nunstack the orange block from on top of the orange block WRONG \nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the blue block WRONG \nstack the white block on top of the magenta block WRONG \npick up the black block\nput down the white block WRONG \nstack the black block on top of the white block\nunstack the orange block from on top of the blue block\nunstack the blue block from on top of the yellow block WRONG \npick up the orange block WRONG \nput down the orange block\npick up the black block WRONG \nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the black block from on top of the black block WRONG \nunstack the black block from on top of the white block\nput down the black block\nunstack the white block from on top of the white block WRONG \nunstack the white block from on top of the magenta block\npick up the magenta block WRONG \nput down the white block\nstack the black block on top of the white block WRONG \npick up the magenta block\nstack the magenta block on top of the orange block\npick up the white block\nstack the white block on top of the magenta block\nstack the black block on top of the white block WRONG \npick up the black block\nstack the black block on top of the white block\n</PLAN>", "plan_length": 36, "raw_plan": ["(unstack f d)", "(put-down f)", "(unstack d b)", "(put-down d)", "(unstack b g)", "(stack b d)", "(unstack g e)", "(put-down g)", "(unstack e a)", "(stack e f)", "(unstack a c)", "(put-down a)", "(pick-up c)", "(stack c b)", "(pick-up g)", "(stack g e)", "(unstack c b)", "(put-down c)", "(unstack b d)", "(put-down b)", "(pick-up d)", "(stack d a)", "(pick-up b)", "(stack b d)", "(pick-up c)", "(stack c b)", "(unstack g e)", "(put-down g)", "(unstack e f)", "(put-down e)", "(pick-up f)", "(stack f c)", "(pick-up e)", "(stack e f)", "(pick-up g)", "(stack g e)"], "full_text_prompt": "I am playing with a set of blocks where I need to arrange the blocks into stacks.\nHere are the actions that can be performed:\nPick up a block\nUnstack a block from on top of another block\nPut down a block\nStack a block on top of another block\nThe following are the restrictions on the actions:\nI can only pick up or unstack one block at a time.\nI can only pick up or unstack a block if my hand is empty.\nI can only pick up a block if the block is on the table and the block is clear. A block is clear if the block has no other blocks on top of it and if the block is not picked up.\nI can only unstack a block from on top of another block if the block I am unstacking was really on top of the other block.\nI can only unstack a block from on top of another block if the block I am unstacking is clear.\nOnce I pick up or unstack a block, I am holding the block.\nI can only put down a block that I am holding.\nI can only stack a block on top of another block if I am holding the block being stacked.\nI can only stack a block on top of another block if the block onto which I am stacking is clear.\nOnce I put down or stack a block, my hand becomes empty.\nOnce you stack a block on top of a second block, the second block is no longer clear.As initial conditions I have that, the magenta block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the black block, the yellow block is on top of the blue block, the white block is on top of the red block, the magenta block is on top of the yellow block, the black block is on top of the white block, the orange block is on the table.My goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the magenta block, the magenta block is on top of the orange block, the black block is on top of the white block.My plan is as follows:\n<PLAN>\nunstack the magenta block from on top of the yellow block\nput down the magenta block\nunstack the yellow block from on top of the blue block\nput down the yellow block WRONG \nput down the yellow block\nunstack the blue block from on top of the black block\nunstack the blue block from on top of the yellow block WRONG \npick up the black block WRONG \nstack the blue block on top of the yellow block\nput down the white block WRONG \nunstack the black block from on top of the white block\nput down the orange block WRONG \nput down the black block\nunstack the white block from on top of the red block\nstack the white block on top of the magenta block\nunstack the orange block from on top of the orange block WRONG \nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the blue block WRONG \nstack the white block on top of the magenta block WRONG \npick up the black block\nput down the white block WRONG \nstack the black block on top of the white block\nunstack the orange block from on top of the blue block\nunstack the blue block from on top of the yellow block WRONG \npick up the orange block WRONG \nput down the orange block\npick up the black block WRONG \nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the black block from on top of the black block WRONG \nunstack the black block from on top of the white block\nput down the black block\nunstack the white block from on top of the white block WRONG \nunstack the white block from on top of the magenta block\npick up the magenta block WRONG \nput down the white block\nstack the black block on top of the white block WRONG \npick up the magenta block\nstack the magenta block on top of the orange block\npick up the white block\nstack the white block on top of the magenta block\nstack the black block on top of the white block WRONG \npick up the black block\nstack the black block on top of the white block\n</PLAN>"}
{"domain": "childsnack", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_2 is allergic to gluten, child_3 is allergic to gluten, tray_1 is at kitchen, tray_2 is at kitchen, tray_3 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, bread_2 is gluten-free, bread_4 is gluten-free, content_2 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_4 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, child_1 is waiting for sandwich at table_3, child_2 is waiting for sandwich at table_3, child_3 is waiting for sandwich at table_3, child_4 is waiting for sandwich at table_1.\nMy goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served.", "output": "My plan is as follows:\n<PLAN>\nuse tray_1 to serve gluten-free sandwich_8 to child_3 at table_3 WRONG \nmake a gluten-free sandwich_1 using bread_2 and content_2\nmove tray_3 from kitchen to table_1\nput sandwich_1 on tray_2\nmove tray_1 from kitchen to table_3 WRONG \nmove tray_2 from kitchen to table_1\nmove tray_2 from table_1 to table_3\nuse tray_2 to serve gluten-free sandwich_1 to child_2 at table_3\nmake a gluten-free sandwich_8 using bread_4 and content_4\nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_8 to child_3 at table_3\nmove tray_2 from table_3 to kitchen\nmake a regular sandwich_7 using bread_4 and content_1 WRONG \nmake a regular sandwich_7 using bread_1 and content_1\nmove tray_1 from table_3 to kitchen WRONG \nput sandwich_7 on tray_2\nmove tray_2 from kitchen to table_1\nuse tray_2 to serve regular sandwich_7 to child_4 at table_1\nmove tray_1 from table_3 to kitchen WRONG \nmove tray_1 from kitchen to table_3 WRONG \nmake a regular sandwich_6 using bread_3 and content_3\nmove tray_1 from table_3 to table_3 WRONG \nmove tray_1 from table_3 to kitchen\nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_3\nput sandwich_6 on tray_1 WRONG \nuse tray_1 to serve regular sandwich_6 to child_1 at table_3\n</PLAN>", "plan_length": 21, "raw_plan": ["(make_sandwich_no_gluten sandw1 bread2 content2)", "(move_tray tray3 kitchen table1)", "(put_on_tray sandw1 tray2)", "(move_tray tray2 kitchen table1)", "(move_tray tray2 table1 table3)", "(serve_sandwich_no_gluten sandw1 child2 tray2 table3)", "(make_sandwich_no_gluten sandw8 bread4 content4)", "(put_on_tray sandw8 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table3)", "(serve_sandwich_no_gluten sandw8 child3 tray1 table3)", "(move_tray tray2 table3 kitchen)", "(make_sandwich sandw7 bread1 content1)", "(put_on_tray sandw7 tray2)", "(move_tray tray2 kitchen table1)", "(serve_sandwich sandw7 child4 tray2 table1)", "(make_sandwich sandw6 bread3 content3)", "(move_tray tray1 table3 kitchen)", "(put_on_tray sandw6 tray1)", "(move_tray tray1 kitchen table3)", "(serve_sandwich sandw6 child1 tray1 table3)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_2 is allergic to gluten, child_3 is allergic to gluten, tray_1 is at kitchen, tray_2 is at kitchen, tray_3 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, bread_2 is gluten-free, bread_4 is gluten-free, content_2 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_4 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, child_1 is waiting for sandwich at table_3, child_2 is waiting for sandwich at table_3, child_3 is waiting for sandwich at table_3, child_4 is waiting for sandwich at table_1.My goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served.My plan is as follows:\n<PLAN>\nuse tray_1 to serve gluten-free sandwich_8 to child_3 at table_3 WRONG \nmake a gluten-free sandwich_1 using bread_2 and content_2\nmove tray_3 from kitchen to table_1\nput sandwich_1 on tray_2\nmove tray_1 from kitchen to table_3 WRONG \nmove tray_2 from kitchen to table_1\nmove tray_2 from table_1 to table_3\nuse tray_2 to serve gluten-free sandwich_1 to child_2 at table_3\nmake a gluten-free sandwich_8 using bread_4 and content_4\nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_8 to child_3 at table_3\nmove tray_2 from table_3 to kitchen\nmake a regular sandwich_7 using bread_4 and content_1 WRONG \nmake a regular sandwich_7 using bread_1 and content_1\nmove tray_1 from table_3 to kitchen WRONG \nput sandwich_7 on tray_2\nmove tray_2 from kitchen to table_1\nuse tray_2 to serve regular sandwich_7 to child_4 at table_1\nmove tray_1 from table_3 to kitchen WRONG \nmove tray_1 from kitchen to table_3 WRONG \nmake a regular sandwich_6 using bread_3 and content_3\nmove tray_1 from table_3 to table_3 WRONG \nmove tray_1 from table_3 to kitchen\nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_3\nput sandwich_6 on tray_1 WRONG \nuse tray_1 to serve regular sandwich_6 to child_1 at table_3\n</PLAN>"}
{"domain": "childsnack", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_3 is allergic to gluten, child_4 is allergic to gluten, child_5 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_1 is gluten-free, bread_3 is gluten-free, bread_5 is gluten-free, content_1 is gluten-free, content_2 is gluten-free, content_3 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, child_1 is waiting for sandwich at table_1, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_2, child_4 is waiting for sandwich at table_3, child_5 is waiting for sandwich at table_1.\nMy goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_8 using bread_1 and content_1\nput sandwich_6 on sandwich_6 WRONG \nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve gluten-free sandwich_8 to child_5 at table_1\nmake a gluten-free sandwich_7 using bread_3 and content_2\nmove tray_1 from table_1 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_2 WRONG \nmove tray_1 from table_1 to table_2\nmove tray_1 from table_3 to table_1 WRONG \nuse tray_1 to serve gluten-free sandwich_6 to child_4 at table_3 WRONG \nuse tray_1 to serve gluten-free sandwich_7 to child_3 at table_2\nput sandwich_1 on tray_1 WRONG \nmake a regular sandwich_5 using bread_2 and content_4 WRONG \nmake a gluten-free sandwich_6 using bread_5 and content_3\nmove tray_1 from table_2 to kitchen\nmove tray_1 from kitchen to table_2 WRONG \nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_6 to child_4 at table_3\nput sandwich_5 on tray_1 WRONG \nmove tray_1 from table_3 to table_1\nmove tray_1 from kitchen to table_2 WRONG \nmake a regular sandwich_1 using bread_4 and content_5\nmove tray_1 from table_1 to kitchen\nput sandwich_1 on tray_1\nmove tray_1 from kitchen to table_1\nmake a regular sandwich_5 using bread_2 and content_4 WRONG \nuse tray_1 to serve regular sandwich_1 to child_1 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_5 using bread_2 and content_4\nmake a gluten-free sandwich_6 using bread_5 and content_3 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_5 on tray_1\nuse tray_1 to serve regular sandwich_5 to child_2 at table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_5 to child_2 at table_2\n</PLAN>", "plan_length": 28, "raw_plan": ["(make_sandwich_no_gluten sandw8 bread1 content1)", "(put_on_tray sandw8 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich_no_gluten sandw8 child5 tray1 table1)", "(make_sandwich_no_gluten sandw7 bread3 content2)", "(move_tray tray1 table1 kitchen)", "(put_on_tray sandw7 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table2)", "(serve_sandwich_no_gluten sandw7 child3 tray1 table2)", "(make_sandwich_no_gluten sandw6 bread5 content3)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw6 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table3)", "(serve_sandwich_no_gluten sandw6 child4 tray1 table3)", "(move_tray tray1 table3 table1)", "(make_sandwich sandw1 bread4 content5)", "(move_tray tray1 table1 kitchen)", "(put_on_tray sandw1 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw1 child1 tray1 table1)", "(move_tray tray1 table1 table2)", "(make_sandwich sandw5 bread2 content4)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw5 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw5 child2 tray1 table2)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_3 is allergic to gluten, child_4 is allergic to gluten, child_5 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_1 is gluten-free, bread_3 is gluten-free, bread_5 is gluten-free, content_1 is gluten-free, content_2 is gluten-free, content_3 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, child_1 is waiting for sandwich at table_1, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_2, child_4 is waiting for sandwich at table_3, child_5 is waiting for sandwich at table_1.My goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_8 using bread_1 and content_1\nput sandwich_6 on sandwich_6 WRONG \nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve gluten-free sandwich_8 to child_5 at table_1\nmake a gluten-free sandwich_7 using bread_3 and content_2\nmove tray_1 from table_1 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_2 WRONG \nmove tray_1 from table_1 to table_2\nmove tray_1 from table_3 to table_1 WRONG \nuse tray_1 to serve gluten-free sandwich_6 to child_4 at table_3 WRONG \nuse tray_1 to serve gluten-free sandwich_7 to child_3 at table_2\nput sandwich_1 on tray_1 WRONG \nmake a regular sandwich_5 using bread_2 and content_4 WRONG \nmake a gluten-free sandwich_6 using bread_5 and content_3\nmove tray_1 from table_2 to kitchen\nmove tray_1 from kitchen to table_2 WRONG \nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_6 to child_4 at table_3\nput sandwich_5 on tray_1 WRONG \nmove tray_1 from table_3 to table_1\nmove tray_1 from kitchen to table_2 WRONG \nmake a regular sandwich_1 using bread_4 and content_5\nmove tray_1 from table_1 to kitchen\nput sandwich_1 on tray_1\nmove tray_1 from kitchen to table_1\nmake a regular sandwich_5 using bread_2 and content_4 WRONG \nuse tray_1 to serve regular sandwich_1 to child_1 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_5 using bread_2 and content_4\nmake a gluten-free sandwich_6 using bread_5 and content_3 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_5 on tray_1\nuse tray_1 to serve regular sandwich_5 to child_2 at table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_5 to child_2 at table_2\n</PLAN>"}
{"domain": "childsnack", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_5 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_1 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_4 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_10 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_2, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_1, child_4 is waiting for sandwich at table_2, child_5 is waiting for sandwich at table_2.\nMy goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_1 using bread_1 and content_4\nmove tray_1 from kitchen to table_1 WRONG \nput sandwich_1 on tray_1\nmove table_2 from kitchen to table_2 WRONG \nmove tray_1 from kitchen to table_1\nmove tray_1 from table_2 to table_2 WRONG \nmove tray_1 from table_1 to table_2\nput sandwich_7 on tray_1 WRONG \nuse tray_1 to serve gluten-free sandwich_1 to child_5 at table_2\nmove tray_1 from kitchen to table_1 WRONG \nmake a regular sandwich_9 using bread_2 and content_1\nmove tray_1 from kitchen to table_2 WRONG \nmove tray_1 from table_2 to kitchen\nmove tray_1 from table_2 to kitchen WRONG \nmake a regular sandwich_6 using bread_5 and content_5 WRONG \nput sandwich_9 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_9 to child_3 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_9 using bread_4 and content_3 WRONG \nmake a regular sandwich_8 using bread_3 and content_2\nmove tray_1 from table_2 to kitchen\nput sandwich_8 on tray_1\nmove tray_1 from tray_1 to table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_8 to child_1 at table_2\nmake a regular sandwich_7 using bread_4 and content_3\nmove tray_1 from table_2 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_7 to child_2 at table_2\nmake a regular sandwich_6 using bread_5 and content_5\nput sandwich_6 on tray_1 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_6 on tray_1\nuse tray_1 to serve regular sandwich_6 to child_4 at table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_6 to child_4 at table_2\n</PLAN>", "plan_length": 26, "raw_plan": ["(make_sandwich_no_gluten sandw1 bread1 content4)", "(put_on_tray sandw1 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table2)", "(serve_sandwich_no_gluten sandw1 child5 tray1 table2)", "(make_sandwich sandw9 bread2 content1)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw9 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw9 child3 tray1 table1)", "(move_tray tray1 table1 table2)", "(make_sandwich sandw8 bread3 content2)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw8 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw8 child1 tray1 table2)", "(make_sandwich sandw7 bread4 content3)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw7 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw7 child2 tray1 table2)", "(make_sandwich sandw6 bread5 content5)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw6 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw6 child4 tray1 table2)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_5 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_1 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_4 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_10 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_2, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_1, child_4 is waiting for sandwich at table_2, child_5 is waiting for sandwich at table_2.My goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_1 using bread_1 and content_4\nmove tray_1 from kitchen to table_1 WRONG \nput sandwich_1 on tray_1\nmove table_2 from kitchen to table_2 WRONG \nmove tray_1 from kitchen to table_1\nmove tray_1 from table_2 to table_2 WRONG \nmove tray_1 from table_1 to table_2\nput sandwich_7 on tray_1 WRONG \nuse tray_1 to serve gluten-free sandwich_1 to child_5 at table_2\nmove tray_1 from kitchen to table_1 WRONG \nmake a regular sandwich_9 using bread_2 and content_1\nmove tray_1 from kitchen to table_2 WRONG \nmove tray_1 from table_2 to kitchen\nmove tray_1 from table_2 to kitchen WRONG \nmake a regular sandwich_6 using bread_5 and content_5 WRONG \nput sandwich_9 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_9 to child_3 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_9 using bread_4 and content_3 WRONG \nmake a regular sandwich_8 using bread_3 and content_2\nmove tray_1 from table_2 to kitchen\nput sandwich_8 on tray_1\nmove tray_1 from tray_1 to table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_8 to child_1 at table_2\nmake a regular sandwich_7 using bread_4 and content_3\nmove tray_1 from table_2 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_7 to child_2 at table_2\nmake a regular sandwich_6 using bread_5 and content_5\nput sandwich_6 on tray_1 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_6 on tray_1\nuse tray_1 to serve regular sandwich_6 to child_4 at table_2 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_6 to child_4 at table_2\n</PLAN>"}
{"domain": "childsnack", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_4 is allergic to gluten, child_6 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, bread_6 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, content_6 is at kitchen, bread_3 is gluten-free, bread_6 is gluten-free, content_1 is gluten-free, content_6 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_5 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_2, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_3, child_4 is waiting for sandwich at table_1, child_5 is waiting for sandwich at table_1, child_6 is waiting for sandwich at table_3.\nMy goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served, child_6 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_9 using bread_3 and content_1\nput sandwich_9 on tray_1\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nmove tray_1 from kitchen to table_1\nuse tray_1 to serve gluten-free sandwich_9 to child_4 at table_1\nmake a gluten-free sandwich_8 using bread_6 and content_6\nmove tray_1 from table_1 to kitchen\nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3\nmake a regular sandwich_7 using bread_5 and content_5\nmove tray_1 from table_3 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_1 using bread_2 and content_3\nmove tray_1 from table_2 to kitchen\nput sandwich_1 on tray_1\nuse tray_1 to serve regular sandwich_1 to child_1 at table_2 WRONG \nmove tray_1 from kitchen to table_3 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nuse tray_1 to serve regular sandwich_1 to child_1 at table_2\nput sandwich_6 on tray_1 WRONG \nmake a regular sandwich_7 using bread_5 and content_3 WRONG \nmake a regular sandwich_6 using bread_1 and content_2\nmove kitchen from table_1 to kitchen WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nuse tray_1 to serve regular sandwich_6 to child_2 at table_2\nmake a regular sandwich_5 using bread_4 and content_4 WRONG \nmove table_2 from table_1 to table_2 WRONG \nmove tray_1 from table_2 to table_3\nmake a regular sandwich_5 using bread_4 and content_4\nmove tray_1 from table_3 to kitchen\nput sandwich_5 on tray_1\nmove tray_1 from kitchen to table_3\nuse tray_1 to serve regular sandwich_5 to child_3 at table_3\n</PLAN>", "plan_length": 32, "raw_plan": ["(make_sandwich_no_gluten sandw9 bread3 content1)", "(put_on_tray sandw9 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich_no_gluten sandw9 child4 tray1 table1)", "(make_sandwich_no_gluten sandw8 bread6 content6)", "(move_tray tray1 table1 kitchen)", "(put_on_tray sandw8 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table3)", "(serve_sandwich_no_gluten sandw8 child6 tray1 table3)", "(make_sandwich sandw7 bread5 content5)", "(move_tray tray1 table3 kitchen)", "(put_on_tray sandw7 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw7 child5 tray1 table1)", "(move_tray tray1 table1 table2)", "(make_sandwich sandw1 bread2 content3)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw1 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw1 child1 tray1 table2)", "(make_sandwich sandw6 bread1 content2)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw6 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw6 child2 tray1 table2)", "(move_tray tray1 table2 table3)", "(make_sandwich sandw5 bread4 content4)", "(move_tray tray1 table3 kitchen)", "(put_on_tray sandw5 tray1)", "(move_tray tray1 kitchen table3)", "(serve_sandwich sandw5 child3 tray1 table3)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_4 is allergic to gluten, child_6 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, bread_6 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, content_6 is at kitchen, bread_3 is gluten-free, bread_6 is gluten-free, content_1 is gluten-free, content_6 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_5 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_2, child_2 is waiting for sandwich at table_2, child_3 is waiting for sandwich at table_3, child_4 is waiting for sandwich at table_1, child_5 is waiting for sandwich at table_1, child_6 is waiting for sandwich at table_3.My goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served, child_6 has been served.My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_9 using bread_3 and content_1\nput sandwich_9 on tray_1\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nmove tray_1 from kitchen to table_1\nuse tray_1 to serve gluten-free sandwich_9 to child_4 at table_1\nmake a gluten-free sandwich_8 using bread_6 and content_6\nmove tray_1 from table_1 to kitchen\nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_3\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3\nmake a regular sandwich_7 using bread_5 and content_5\nmove tray_1 from table_3 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_1 using bread_2 and content_3\nmove tray_1 from table_2 to kitchen\nput sandwich_1 on tray_1\nuse tray_1 to serve regular sandwich_1 to child_1 at table_2 WRONG \nmove tray_1 from kitchen to table_3 WRONG \nmove tray_1 from kitchen to table_2\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nuse tray_1 to serve regular sandwich_1 to child_1 at table_2\nput sandwich_6 on tray_1 WRONG \nmake a regular sandwich_7 using bread_5 and content_3 WRONG \nmake a regular sandwich_6 using bread_1 and content_2\nmove kitchen from table_1 to kitchen WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve gluten-free sandwich_8 to child_6 at table_3 WRONG \nuse tray_1 to serve regular sandwich_6 to child_2 at table_2\nmake a regular sandwich_5 using bread_4 and content_4 WRONG \nmove table_2 from table_1 to table_2 WRONG \nmove tray_1 from table_2 to table_3\nmake a regular sandwich_5 using bread_4 and content_4\nmove tray_1 from table_3 to kitchen\nput sandwich_5 on tray_1\nmove tray_1 from kitchen to table_3\nuse tray_1 to serve regular sandwich_5 to child_3 at table_3\n</PLAN>"}
{"domain": "childsnack", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.", "input": "As initial conditions I have that, child_4 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_5 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_5 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_1, child_2 is waiting for sandwich at table_1, child_3 is waiting for sandwich at table_2, child_4 is waiting for sandwich at table_2, child_5 is waiting for sandwich at table_1.\nMy goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.", "output": "My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_1 using bread_5 and content_4\nput sandwich_1 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_2\nmove tray_1 from kitchen to table_2 WRONG \nuse tray_1 to serve gluten-free sandwich_1 to child_4 at table_2\nmake a regular sandwich_9 using bread_1 and content_1\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_9 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_9 to child_3 at table_2 WRONG \nuse tray_1 to serve regular sandwich_9 to child_1 at table_1\nmake a regular sandwich_8 using bread_4 and content_2 WRONG \nmake a regular sandwich_8 using bread_2 and content_2\nmove tray_1 from table_1 to kitchen\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_8 to child_2 at table_1\nmake a regular sandwich_7 using bread_3 and content_3\nmove tray_1 from table_1 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nput sandwich_6 on tray_1 WRONG \nuse tray_1 to serve regular sandwich_7 to child_5 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_6 using bread_4 and content_5\nmove tray_1 from table_2 to kitchen\nput sandwich_1 on sandwich_1 WRONG \nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_6 to child_3 at table_2\n</PLAN>", "plan_length": 26, "raw_plan": ["(make_sandwich_no_gluten sandw1 bread5 content4)", "(put_on_tray sandw1 tray1)", "(move_tray tray1 kitchen table1)", "(move_tray tray1 table1 table2)", "(serve_sandwich_no_gluten sandw1 child4 tray1 table2)", "(make_sandwich sandw9 bread1 content1)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw9 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw9 child1 tray1 table1)", "(make_sandwich sandw8 bread2 content2)", "(move_tray tray1 table1 kitchen)", "(put_on_tray sandw8 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw8 child2 tray1 table1)", "(make_sandwich sandw7 bread3 content3)", "(move_tray tray1 table1 kitchen)", "(put_on_tray sandw7 tray1)", "(move_tray tray1 kitchen table1)", "(serve_sandwich sandw7 child5 tray1 table1)", "(move_tray tray1 table1 table2)", "(make_sandwich sandw6 bread4 content5)", "(move_tray tray1 table2 kitchen)", "(put_on_tray sandw6 tray1)", "(move_tray tray1 kitchen table2)", "(serve_sandwich sandw6 child3 tray1 table2)"], "full_text_prompt": "I have to plan how to make and serve sandwiches for a group of children, taking into account that some of them are allergic to gluten. There are two types of sandwiches: regular and gluten-free.\nHere are the actions that can be performed:\nMake a gluten-free sandwich.\nMake a regular sandwich.\nPut a sandwich on a tray.\nServe a gluten-free sandwich to an allergic child.\nServe a regular sandwich to a child.\nMove a tray between kitchen and tables.\nThe following are the restrictions on the actions:\nWe can make a gluten-free sandwich only if there is a bread at kitchen and the bread is gluten-free.\nWe can make a gluten-free sandwich only if there is a content at kitchen and the content is gluten-free.\nOnce we make a gluten-free sandwich, the bread and content are no longer at kitchen.\nOnce we make a gluten-free sandwich, the sandwich is at kitchen and is gluten-free.\nWe can make a regular sandwich only if there is a bread at kitchen.\nWe can make a regular sandwich only if there is a content at kitchen.\nOnce we make a regular sandwich, the bread and content are no longer at kitchen.\nOnce we make a regular sandwich, the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the sandwich is at kitchen.\nWe can put a sandwich on a tray only if the tray is also at kitchen.\nOnce we put a sandwich on a tray, the sandwich is no longer at kitchen but is on the tray.\nWe can serve a gluten-free sandwich to an allergic child only if the child is allergic to gluten.\nWe can serve a gluten-free sandwich to an allergic child only if the sandwich is on a tray and the sandwich is gluten-free.\nWe can serve a gluten-free sandwich to an allergic child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the tray is at the table where the child is waiting.\nOnce we serve a gluten-free sandwich to an allergic child, the sandwich is no longer on the tray.\nOnce we serve a gluten-free sandwich to an allergic child, we say the child has been served.\nWe can serve a regular sandwich to a child only if the child is not allergic to gluten.\nWe can serve a regular sandwich to a child only if the child is waiting for the sandwich at the table.\nWe can serve a regular sandwich to a child only if the sandwich is on a tray and the tray is at the table where the child is waiting.\nOnce we serve a regular sandwich to a child, the sandwich is no longer on the tray.\nOnce we serve a regular sandwich to a child, we say the child has been served.\nWe can move a tray from from-place to to-place only if the tray is at from-place.\nOnce we move a tray from from-place to to-place, the tray is no longer at from-place but is at to-place.As initial conditions I have that, child_4 is allergic to gluten, tray_1 is at kitchen, bread_1 is at kitchen, bread_2 is at kitchen, bread_3 is at kitchen, bread_4 is at kitchen, bread_5 is at kitchen, content_1 is at kitchen, content_2 is at kitchen, content_3 is at kitchen, content_4 is at kitchen, content_5 is at kitchen, bread_5 is gluten-free, content_4 is gluten-free, child_1 is not allergic to gluten, child_2 is not allergic to gluten, child_3 is not allergic to gluten, child_5 is not allergic to gluten, sandwich_1 is not ready yet, sandwich_2 is not ready yet, sandwich_3 is not ready yet, sandwich_4 is not ready yet, sandwich_5 is not ready yet, sandwich_6 is not ready yet, sandwich_7 is not ready yet, sandwich_8 is not ready yet, sandwich_9 is not ready yet, child_1 is waiting for sandwich at table_1, child_2 is waiting for sandwich at table_1, child_3 is waiting for sandwich at table_2, child_4 is waiting for sandwich at table_2, child_5 is waiting for sandwich at table_1.My goal is to have that child_1 has been served, child_2 has been served, child_3 has been served, child_4 has been served, child_5 has been served.My plan is as follows:\n<PLAN>\nmake a gluten-free sandwich_1 using bread_5 and content_4\nput sandwich_1 on tray_1\nmove tray_1 from kitchen to table_1\nmove tray_1 from table_1 to table_2\nmove tray_1 from kitchen to table_2 WRONG \nuse tray_1 to serve gluten-free sandwich_1 to child_4 at table_2\nmake a regular sandwich_9 using bread_1 and content_1\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nmove tray_1 from table_2 to kitchen\nput sandwich_9 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_9 to child_3 at table_2 WRONG \nuse tray_1 to serve regular sandwich_9 to child_1 at table_1\nmake a regular sandwich_8 using bread_4 and content_2 WRONG \nmake a regular sandwich_8 using bread_2 and content_2\nmove tray_1 from table_1 to kitchen\nuse tray_1 to serve regular sandwich_7 to child_5 at table_1 WRONG \nput sandwich_8 on tray_1\nmove tray_1 from kitchen to table_1\nuse tray_1 to serve regular sandwich_8 to child_2 at table_1\nmake a regular sandwich_7 using bread_3 and content_3\nmove tray_1 from table_1 to kitchen\nput sandwich_7 on tray_1\nmove tray_1 from kitchen to table_1\nput sandwich_6 on tray_1 WRONG \nuse tray_1 to serve regular sandwich_7 to child_5 at table_1\nmove tray_1 from table_1 to table_2\nmake a regular sandwich_6 using bread_4 and content_5\nmove tray_1 from table_2 to kitchen\nput sandwich_1 on sandwich_1 WRONG \nput sandwich_6 on tray_1\nmove tray_1 from kitchen to table_2\nuse tray_1 to serve regular sandwich_6 to child_3 at table_2\n</PLAN>"}
{"domain": "depots", "instance_id": "40", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at depot_3, crate_2 is at depot_3, crate_3 is at distributor_0, crate_4 is at depot_1, crate_5 is at depot_0, crate_6 is at distributor_0, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at distributor_2, truck_1 is at depot_0, truck_2 is at depot_2, truck_3 is at distributor_4, truck_4 is at distributor_2, truck_5 is at distributor_4, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_2 is clear, crate_4 is clear, crate_5 is clear, crate_6 is clear, pallet_10 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_8 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_3, crate_2 is on crate_1, crate_3 is on pallet_6, crate_4 is on pallet_1, crate_5 is on pallet_0, crate_6 is on crate_3.\nMy goal is to have that crate_0 is on crate_4, crate_2 is on pallet_10, crate_4 is on pallet_5, crate_5 is on pallet_4, crate_6 is on pallet_8.", "output": "My plan is as follows:\n<PLAN>\ndrive truck_5 from distributor_4 to depot_1\ndrive truck_3 from distributor_4 to depot_3 WRONG \ndrive truck_5 from depot_1 to depot_5 WRONG \nUse hoist_0 to lift crate_5 from pallet_0 at depot_0\nUse hoist_7 to load crate_0 into truck_0 at depot_5 WRONG \nUse hoist_0 to load crate_5 into truck_1 at depot_0\ndrive truck_0 from depot_5 to depot_5 WRONG \ndrive truck_1 from depot_0 to depot_4\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_1 WRONG \nUse hoist_4 to unload crate_5 from truck_1 at depot_4\nUse hoist_4 to drop crate_5 to pallet_4 at depot_4\nUse hoist_3 to lift crate_2 from crate_1 at depot_3\nUse hoist_6 to lift crate_6 from crate_3 at distributor_0\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_1\ndrive truck_5 from depot_1 to distributor_1\ndrive truck_0 from distributor_0 to distributor_2 WRONG \nUse hoist_7 to load crate_0 into truck_5 at distributor_1\ndrive truck_5 from distributor_1 to depot_1\ndrive truck_3 from distributor_4 to depot_3\nUse hoist_3 to load crate_2 into truck_3 at depot_3\nUse hoist_1 to lift crate_4 from pallet_1 at depot_1 WRONG \ndrive truck_3 from depot_3 to distributor_4\nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \nUse hoist_1 to load crate_4 into truck_5 at depot_1 WRONG \nUse hoist_10 to unload crate_2 from truck_3 at distributor_4\ndrive truck_5 from depot_1 to depot_5 WRONG \nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \nUse hoist_10 to drop crate_2 to pallet_10 at distributor_4\ndrive truck_0 from distributor_2 to distributor_0\nUse hoist_6 to load crate_6 into truck_0 at distributor_0\ndrive truck_0 from distributor_0 to distributor_2\nUse hoist_5 to drop crate_0 to crate_4 at depot_5 WRONG \nUse hoist_8 to unload crate_6 from truck_0 at distributor_2\nUse hoist_8 to drop crate_6 to pallet_8 at distributor_2\nUse hoist_1 to lift crate_4 from pallet_1 at depot_1\nUse hoist_1 to load crate_4 into truck_5 at depot_1\nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \ndrive truck_5 from depot_1 to depot_5\nUse hoist_5 to unload crate_4 from truck_5 at depot_5\nUse hoist_5 to drop crate_4 to pallet_5 at depot_5\nUse hoist_5 to unload crate_0 from truck_5 at depot_5\nUse hoist_5 to drop crate_0 to crate_4 at depot_5\n</PLAN>", "plan_length": 29, "raw_plan": ["(drive truck5 distributor4 depot1)", "(lift hoist0 crate5 pallet0 depot0)", "(load hoist0 crate5 truck1 depot0)", "(drive truck1 depot0 depot4)", "(unload hoist4 crate5 truck1 depot4)", "(drop hoist4 crate5 pallet4 depot4)", "(lift hoist3 crate2 crate1 depot3)", "(lift hoist6 crate6 crate3 distributor0)", "(lift hoist7 crate0 pallet7 distributor1)", "(drive truck5 depot1 distributor1)", "(load hoist7 crate0 truck5 distributor1)", "(drive truck5 distributor1 depot1)", "(drive truck3 distributor4 depot3)", "(load hoist3 crate2 truck3 depot3)", "(drive truck3 depot3 distributor4)", "(unload hoist10 crate2 truck3 distributor4)", "(drop hoist10 crate2 pallet10 distributor4)", "(drive truck0 distributor2 distributor0)", "(load hoist6 crate6 truck0 distributor0)", "(drive truck0 distributor0 distributor2)", "(unload hoist8 crate6 truck0 distributor2)", "(drop hoist8 crate6 pallet8 distributor2)", "(lift hoist1 crate4 pallet1 depot1)", "(load hoist1 crate4 truck5 depot1)", "(drive truck5 depot1 depot5)", "(unload hoist5 crate4 truck5 depot5)", "(drop hoist5 crate4 pallet5 depot5)", "(unload hoist5 crate0 truck5 depot5)", "(drop hoist5 crate0 crate4 depot5)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at depot_3, crate_2 is at depot_3, crate_3 is at distributor_0, crate_4 is at depot_1, crate_5 is at depot_0, crate_6 is at distributor_0, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at distributor_2, truck_1 is at depot_0, truck_2 is at depot_2, truck_3 is at distributor_4, truck_4 is at distributor_2, truck_5 is at distributor_4, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_2 is clear, crate_4 is clear, crate_5 is clear, crate_6 is clear, pallet_10 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_8 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_3, crate_2 is on crate_1, crate_3 is on pallet_6, crate_4 is on pallet_1, crate_5 is on pallet_0, crate_6 is on crate_3.My goal is to have that crate_0 is on crate_4, crate_2 is on pallet_10, crate_4 is on pallet_5, crate_5 is on pallet_4, crate_6 is on pallet_8.My plan is as follows:\n<PLAN>\ndrive truck_5 from distributor_4 to depot_1\ndrive truck_3 from distributor_4 to depot_3 WRONG \ndrive truck_5 from depot_1 to depot_5 WRONG \nUse hoist_0 to lift crate_5 from pallet_0 at depot_0\nUse hoist_7 to load crate_0 into truck_0 at depot_5 WRONG \nUse hoist_0 to load crate_5 into truck_1 at depot_0\ndrive truck_0 from depot_5 to depot_5 WRONG \ndrive truck_1 from depot_0 to depot_4\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_1 WRONG \nUse hoist_4 to unload crate_5 from truck_1 at depot_4\nUse hoist_4 to drop crate_5 to pallet_4 at depot_4\nUse hoist_3 to lift crate_2 from crate_1 at depot_3\nUse hoist_6 to lift crate_6 from crate_3 at distributor_0\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_1\ndrive truck_5 from depot_1 to distributor_1\ndrive truck_0 from distributor_0 to distributor_2 WRONG \nUse hoist_7 to load crate_0 into truck_5 at distributor_1\ndrive truck_5 from distributor_1 to depot_1\ndrive truck_3 from distributor_4 to depot_3\nUse hoist_3 to load crate_2 into truck_3 at depot_3\nUse hoist_1 to lift crate_4 from pallet_1 at depot_1 WRONG \ndrive truck_3 from depot_3 to distributor_4\nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \nUse hoist_1 to load crate_4 into truck_5 at depot_1 WRONG \nUse hoist_10 to unload crate_2 from truck_3 at distributor_4\ndrive truck_5 from depot_1 to depot_5 WRONG \nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \nUse hoist_10 to drop crate_2 to pallet_10 at distributor_4\ndrive truck_0 from distributor_2 to distributor_0\nUse hoist_6 to load crate_6 into truck_0 at distributor_0\ndrive truck_0 from distributor_0 to distributor_2\nUse hoist_5 to drop crate_0 to crate_4 at depot_5 WRONG \nUse hoist_8 to unload crate_6 from truck_0 at distributor_2\nUse hoist_8 to drop crate_6 to pallet_8 at distributor_2\nUse hoist_1 to lift crate_4 from pallet_1 at depot_1\nUse hoist_1 to load crate_4 into truck_5 at depot_1\nUse hoist_5 to unload crate_0 from truck_5 at depot_5 WRONG \ndrive truck_5 from depot_1 to depot_5\nUse hoist_5 to unload crate_4 from truck_5 at depot_5\nUse hoist_5 to drop crate_4 to pallet_5 at depot_5\nUse hoist_5 to unload crate_0 from truck_5 at depot_5\nUse hoist_5 to drop crate_0 to crate_4 at depot_5\n</PLAN>"}
{"domain": "depots", "instance_id": "0", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at distributor_2, crate_2 is at distributor_1, crate_3 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at distributor_0, hoist_3 is at distributor_1, hoist_4 is at distributor_2, hoist_5 is at depot_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at distributor_0, pallet_3 is at distributor_1, pallet_4 is at distributor_2, truck_0 is at distributor_2, truck_1 is at distributor_2, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, crate_1 is clear, crate_2 is clear, crate_3 is clear, pallet_0 is clear, pallet_2 is clear, crate_0 is on pallet_3, crate_1 is on pallet_4, crate_2 is on crate_0, crate_3 is on pallet_1.\nMy goal is to have that crate_0 is on pallet_1, crate_1 is on pallet_3, crate_2 is on pallet_4, crate_3 is on pallet_2.", "output": "My plan is as follows:\n<PLAN>\nUse hoist_1 to lift crate_3 from pallet_1 at depot_1\ndrive truck_1 from distributor_2 to depot_1\nUse hoist_2 to load crate_1 into truck_0 at truck_1 WRONG \nUse hoist_1 to load crate_3 into truck_1 at depot_1\nUse hoist_3 to unload crate_1 from truck_0 at distributor_1 WRONG \ndrive truck_0 from distributor_2 to distributor_1\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1 WRONG \ndrive truck_1 from depot_1 to distributor_0\nUse hoist_4 to load crate_1 into truck_0 at distributor_2 WRONG \nUse hoist_2 to unload crate_3 from truck_1 at distributor_0\nUse hoist_4 to drop crate_1 to pallet_3 at distributor_2 WRONG \nUse hoist_2 to drop crate_3 to pallet_2 at distributor_0\nUse hoist_3 to lift crate_2 from crate_0 at distributor_1\nUse hoist_3 to load crate_2 into truck_0 at distributor_1\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1\nUse hoist_3 to load crate_2 into truck_1 at distributor_1 WRONG \nUse hoist_3 to load crate_0 into truck_0 at distributor_1\nUse hoist_4 to lift crate_1 from pallet_4 at distributor_2\ndrive truck_0 from depot_1 to distributor_1 WRONG \ndrive truck_0 from distributor_1 to depot_1\ndrive truck_0 from distributor_1 to distributor_2 WRONG \nUse hoist_5 to unload crate_0 from truck_0 at depot_1\ndrive truck_0 from depot_1 to distributor_1\nUse hoist_5 to drop crate_0 to pallet_1 at depot_1\nUse hoist_4 to load crate_1 into truck_0 at distributor_2 WRONG \ndrive truck_0 from distributor_1 to distributor_2\nUse hoist_4 to load crate_1 into truck_0 at distributor_2\nUse hoist_4 to unload crate_2 from truck_0 at distributor_2\ndrive truck_0 from distributor_2 to distributor_1\nUse hoist_3 to drop crate_1 to pallet_3 at distributor_1 WRONG \nUse hoist_4 to drop crate_2 to pallet_4 at distributor_2 WRONG \nUse hoist_3 to unload crate_1 from truck_0 at distributor_1\nUse hoist_3 to drop crate_1 to pallet_3 at distributor_1\nUse hoist_4 to drop crate_2 to pallet_4 at distributor_2\n</PLAN>", "plan_length": 23, "raw_plan": ["(lift hoist1 crate3 pallet1 depot1)", "(drive truck1 distributor2 depot1)", "(load hoist1 crate3 truck1 depot1)", "(drive truck0 distributor2 distributor1)", "(drive truck1 depot1 distributor0)", "(unload hoist2 crate3 truck1 distributor0)", "(drop hoist2 crate3 pallet2 distributor0)", "(lift hoist3 crate2 crate0 distributor1)", "(load hoist3 crate2 truck0 distributor1)", "(lift hoist3 crate0 pallet3 distributor1)", "(load hoist3 crate0 truck0 distributor1)", "(lift hoist4 crate1 pallet4 distributor2)", "(drive truck0 distributor1 depot1)", "(unload hoist5 crate0 truck0 depot1)", "(drive truck0 depot1 distributor1)", "(drop hoist5 crate0 pallet1 depot1)", "(drive truck0 distributor1 distributor2)", "(load hoist4 crate1 truck0 distributor2)", "(unload hoist4 crate2 truck0 distributor2)", "(drive truck0 distributor2 distributor1)", "(unload hoist3 crate1 truck0 distributor1)", "(drop hoist3 crate1 pallet3 distributor1)", "(drop hoist4 crate2 pallet4 distributor2)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_1, crate_1 is at distributor_2, crate_2 is at distributor_1, crate_3 is at depot_1, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at distributor_0, hoist_3 is at distributor_1, hoist_4 is at distributor_2, hoist_5 is at depot_1, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at distributor_0, pallet_3 is at distributor_1, pallet_4 is at distributor_2, truck_0 is at distributor_2, truck_1 is at distributor_2, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, crate_1 is clear, crate_2 is clear, crate_3 is clear, pallet_0 is clear, pallet_2 is clear, crate_0 is on pallet_3, crate_1 is on pallet_4, crate_2 is on crate_0, crate_3 is on pallet_1.My goal is to have that crate_0 is on pallet_1, crate_1 is on pallet_3, crate_2 is on pallet_4, crate_3 is on pallet_2.My plan is as follows:\n<PLAN>\nUse hoist_1 to lift crate_3 from pallet_1 at depot_1\ndrive truck_1 from distributor_2 to depot_1\nUse hoist_2 to load crate_1 into truck_0 at truck_1 WRONG \nUse hoist_1 to load crate_3 into truck_1 at depot_1\nUse hoist_3 to unload crate_1 from truck_0 at distributor_1 WRONG \ndrive truck_0 from distributor_2 to distributor_1\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1 WRONG \ndrive truck_1 from depot_1 to distributor_0\nUse hoist_4 to load crate_1 into truck_0 at distributor_2 WRONG \nUse hoist_2 to unload crate_3 from truck_1 at distributor_0\nUse hoist_4 to drop crate_1 to pallet_3 at distributor_2 WRONG \nUse hoist_2 to drop crate_3 to pallet_2 at distributor_0\nUse hoist_3 to lift crate_2 from crate_0 at distributor_1\nUse hoist_3 to load crate_2 into truck_0 at distributor_1\nUse hoist_3 to lift crate_0 from pallet_3 at distributor_1\nUse hoist_3 to load crate_2 into truck_1 at distributor_1 WRONG \nUse hoist_3 to load crate_0 into truck_0 at distributor_1\nUse hoist_4 to lift crate_1 from pallet_4 at distributor_2\ndrive truck_0 from depot_1 to distributor_1 WRONG \ndrive truck_0 from distributor_1 to depot_1\ndrive truck_0 from distributor_1 to distributor_2 WRONG \nUse hoist_5 to unload crate_0 from truck_0 at depot_1\ndrive truck_0 from depot_1 to distributor_1\nUse hoist_5 to drop crate_0 to pallet_1 at depot_1\nUse hoist_4 to load crate_1 into truck_0 at distributor_2 WRONG \ndrive truck_0 from distributor_1 to distributor_2\nUse hoist_4 to load crate_1 into truck_0 at distributor_2\nUse hoist_4 to unload crate_2 from truck_0 at distributor_2\ndrive truck_0 from distributor_2 to distributor_1\nUse hoist_3 to drop crate_1 to pallet_3 at distributor_1 WRONG \nUse hoist_4 to drop crate_2 to pallet_4 at distributor_2 WRONG \nUse hoist_3 to unload crate_1 from truck_0 at distributor_1\nUse hoist_3 to drop crate_1 to pallet_3 at distributor_1\nUse hoist_4 to drop crate_2 to pallet_4 at distributor_2\n</PLAN>"}
{"domain": "depots", "instance_id": "160", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_2, crate_1 is at distributor_3, crate_2 is at depot_3, crate_3 is at distributor_2, crate_4 is at depot_2, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_5, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at distributor_0, hoist_6 is at distributor_1, hoist_7 is at distributor_2, hoist_8 is at distributor_3, hoist_9 is at distributor_4, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_5, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at distributor_0, pallet_6 is at distributor_1, pallet_7 is at distributor_2, pallet_8 is at distributor_3, pallet_9 is at distributor_4, truck_0 is at distributor_5, truck_1 is at depot_4, truck_2 is at depot_1, truck_3 is at distributor_4, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_4 is clear, pallet_0 is clear, pallet_1 is clear, pallet_10 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_8, crate_2 is on pallet_3, crate_3 is on crate_0, crate_4 is on pallet_2.\nMy goal is to have that crate_1 is on pallet_4, crate_2 is on crate_1, crate_3 is on pallet_0, crate_4 is on pallet_10.", "output": "My plan is as follows:\n<PLAN>\ndrive truck_3 from distributor_4 to depot_0\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_1 from depot_4 to distributor_3\nUse hoist_2 to lift crate_4 from pallet_2 at depot_2\nUse hoist_3 to lift crate_2 from pallet_3 at depot_3\nUse hoist_7 to lift crate_3 from crate_0 at distributor_2\ndrive truck_3 from depot_0 to distributor_2\nUse hoist_7 to load crate_3 into truck_3 at distributor_2\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_3 from distributor_2 to depot_0\nUse hoist_8 to lift crate_1 from pallet_8 at distributor_3 WRONG \nUse hoist_0 to unload crate_3 from truck_3 at depot_0\ndrive truck_0 from distributor_5 to depot_2\nUse hoist_2 to load crate_4 into truck_0 at depot_2\ndrive truck_0 from depot_2 to distributor_5\nUse hoist_10 to unload crate_4 from truck_0 at distributor_5\nUse hoist_0 to drop crate_3 to pallet_0 at depot_0\nUse hoist_10 to drop crate_4 to pallet_10 at distributor_5\nUse hoist_8 to lift crate_1 from pallet_8 at distributor_3\nUse hoist_4 to drop crate_2 to crate_1 at depot_4 WRONG \nUse hoist_8 to load crate_1 into truck_1 at distributor_3\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_1 from distributor_3 to depot_3\ndrive truck_1 from depot_3 to depot_4\nUse hoist_4 to unload crate_1 from truck_1 at depot_4\nUse hoist_4 to drop crate_1 to pallet_4 at depot_4\ndrive truck_1 from depot_0 to depot_0 WRONG \ndrive truck_1 from depot_4 to depot_3\nUse hoist_3 to load crate_2 into truck_1 at depot_3\nUse hoist_3 to load crate_2 into truck_1 at depot_3 WRONG \ndrive truck_1 from depot_3 to depot_4\nUse hoist_4 to unload crate_2 from truck_1 at depot_4\nUse hoist_4 to drop crate_2 to crate_1 at depot_4\n</PLAN>", "plan_length": 26, "raw_plan": ["(drive truck3 distributor4 depot0)", "(drive truck1 depot4 distributor3)", "(lift hoist2 crate4 pallet2 depot2)", "(lift hoist3 crate2 pallet3 depot3)", "(lift hoist7 crate3 crate0 distributor2)", "(drive truck3 depot0 distributor2)", "(load hoist7 crate3 truck3 distributor2)", "(drive truck3 distributor2 depot0)", "(unload hoist0 crate3 truck3 depot0)", "(drive truck0 distributor5 depot2)", "(load hoist2 crate4 truck0 depot2)", "(drive truck0 depot2 distributor5)", "(unload hoist10 crate4 truck0 distributor5)", "(drop hoist0 crate3 pallet0 depot0)", "(drop hoist10 crate4 pallet10 distributor5)", "(lift hoist8 crate1 pallet8 distributor3)", "(load hoist8 crate1 truck1 distributor3)", "(drive truck1 distributor3 depot3)", "(drive truck1 depot3 depot4)", "(unload hoist4 crate1 truck1 depot4)", "(drop hoist4 crate1 pallet4 depot4)", "(drive truck1 depot4 depot3)", "(load hoist3 crate2 truck1 depot3)", "(drive truck1 depot3 depot4)", "(unload hoist4 crate2 truck1 depot4)", "(drop hoist4 crate2 crate1 depot4)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_2, crate_1 is at distributor_3, crate_2 is at depot_3, crate_3 is at distributor_2, crate_4 is at depot_2, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_5, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at distributor_0, hoist_6 is at distributor_1, hoist_7 is at distributor_2, hoist_8 is at distributor_3, hoist_9 is at distributor_4, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_5, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at distributor_0, pallet_6 is at distributor_1, pallet_7 is at distributor_2, pallet_8 is at distributor_3, pallet_9 is at distributor_4, truck_0 is at distributor_5, truck_1 is at depot_4, truck_2 is at depot_1, truck_3 is at distributor_4, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_4 is clear, pallet_0 is clear, pallet_1 is clear, pallet_10 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_8, crate_2 is on pallet_3, crate_3 is on crate_0, crate_4 is on pallet_2.My goal is to have that crate_1 is on pallet_4, crate_2 is on crate_1, crate_3 is on pallet_0, crate_4 is on pallet_10.My plan is as follows:\n<PLAN>\ndrive truck_3 from distributor_4 to depot_0\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_1 from depot_4 to distributor_3\nUse hoist_2 to lift crate_4 from pallet_2 at depot_2\nUse hoist_3 to lift crate_2 from pallet_3 at depot_3\nUse hoist_7 to lift crate_3 from crate_0 at distributor_2\ndrive truck_3 from depot_0 to distributor_2\nUse hoist_7 to load crate_3 into truck_3 at distributor_2\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_3 from distributor_2 to depot_0\nUse hoist_8 to lift crate_1 from pallet_8 at distributor_3 WRONG \nUse hoist_0 to unload crate_3 from truck_3 at depot_0\ndrive truck_0 from distributor_5 to depot_2\nUse hoist_2 to load crate_4 into truck_0 at depot_2\ndrive truck_0 from depot_2 to distributor_5\nUse hoist_10 to unload crate_4 from truck_0 at distributor_5\nUse hoist_0 to drop crate_3 to pallet_0 at depot_0\nUse hoist_10 to drop crate_4 to pallet_10 at distributor_5\nUse hoist_8 to lift crate_1 from pallet_8 at distributor_3\nUse hoist_4 to drop crate_2 to crate_1 at depot_4 WRONG \nUse hoist_8 to load crate_1 into truck_1 at distributor_3\nUse hoist_4 to unload crate_2 from truck_1 at depot_4 WRONG \ndrive truck_1 from distributor_3 to depot_3\ndrive truck_1 from depot_3 to depot_4\nUse hoist_4 to unload crate_1 from truck_1 at depot_4\nUse hoist_4 to drop crate_1 to pallet_4 at depot_4\ndrive truck_1 from depot_0 to depot_0 WRONG \ndrive truck_1 from depot_4 to depot_3\nUse hoist_3 to load crate_2 into truck_1 at depot_3\nUse hoist_3 to load crate_2 into truck_1 at depot_3 WRONG \ndrive truck_1 from depot_3 to depot_4\nUse hoist_4 to unload crate_2 from truck_1 at depot_4\nUse hoist_4 to drop crate_2 to crate_1 at depot_4\n</PLAN>"}
{"domain": "depots", "instance_id": "120", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_3, crate_1 is at depot_3, crate_2 is at distributor_2, crate_3 is at distributor_4, crate_4 is at depot_2, crate_5 is at depot_2, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at distributor_0, hoist_5 is at distributor_1, hoist_6 is at distributor_2, hoist_7 is at distributor_3, hoist_8 is at distributor_4, hoist_9 is at distributor_5, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at distributor_0, pallet_5 is at distributor_1, pallet_6 is at distributor_2, pallet_7 is at distributor_3, pallet_8 is at distributor_4, pallet_9 is at distributor_5, truck_0 is at distributor_4, truck_1 is at depot_0, truck_2 is at depot_1, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_5 is clear, pallet_0 is clear, pallet_1 is clear, pallet_4 is clear, pallet_5 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_3, crate_2 is on pallet_6, crate_3 is on pallet_8, crate_4 is on pallet_2, crate_5 is on crate_4.\nMy goal is to have that crate_0 is on crate_1, crate_1 is on pallet_5, crate_2 is on pallet_1, crate_4 is on pallet_8, crate_5 is on pallet_4.", "output": "My plan is as follows:\n<PLAN>\ndrive truck_0 from distributor_4 to depot_2\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \ndrive truck_2 from depot_1 to depot_3\nUse hoist_2 to lift crate_5 from crate_4 at depot_2\nUse hoist_8 to unload crate_4 from truck_0 at distributor_4 WRONG \nUse hoist_2 to load crate_5 into truck_0 at depot_2\nUse hoist_2 to lift crate_4 from pallet_2 at depot_2\ndrive truck_0 from depot_2 to distributor_0 WRONG \ndrive truck_2 from distributor_3 to distributor_1 WRONG \nUse hoist_2 to load crate_4 into truck_0 at depot_2\nUse hoist_8 to load crate_3 into truck_0 at distributor_4 WRONG \ndrive truck_0 from depot_2 to distributor_0\nUse hoist_4 to unload crate_5 from truck_0 at distributor_0\nUse hoist_1 to drop crate_5 to pallet_4 at distributor_4 WRONG \nUse hoist_4 to drop crate_5 to pallet_4 at distributor_0\nUse hoist_6 to lift crate_2 from pallet_6 at distributor_2\ndrive truck_0 from distributor_0 to distributor_2\nUse hoist_6 to load crate_2 into truck_0 at distributor_2\ndrive truck_0 from distributor_2 to depot_1\nUse hoist_1 to unload crate_2 from truck_0 at depot_1\nUse hoist_3 to drop crate_3 to pallet_7 at depot_2 WRONG \nUse hoist_1 to drop crate_2 to pallet_1 at depot_1\nUse hoist_3 to lift crate_1 from pallet_3 at depot_3\nUse hoist_3 to load crate_1 into truck_2 at depot_3\ndrive truck_2 from depot_3 to distributor_1\nUse hoist_5 to unload crate_1 from truck_2 at distributor_1\nUse hoist_5 to drop crate_1 to pallet_5 at distributor_1\ndrive truck_0 from depot_1 to distributor_4\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_3\ndrive truck_2 from distributor_1 to distributor_3\nUse hoist_7 to load crate_0 into truck_2 at distributor_3\ndrive truck_2 from distributor_3 to distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \nUse hoist_5 to unload crate_0 from truck_2 at distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \nUse hoist_5 to drop crate_0 to crate_1 at distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4\nUse hoist_8 to load crate_3 into truck_0 at distributor_4\nUse hoist_8 to unload crate_4 from truck_0 at distributor_4\nUse hoist_8 to drop crate_4 to pallet_8 at distributor_4\n</PLAN>", "plan_length": 31, "raw_plan": ["(drive truck0 distributor4 depot2)", "(drive truck2 depot1 depot3)", "(lift hoist2 crate5 crate4 depot2)", "(load hoist2 crate5 truck0 depot2)", "(lift hoist2 crate4 pallet2 depot2)", "(load hoist2 crate4 truck0 depot2)", "(drive truck0 depot2 distributor0)", "(unload hoist4 crate5 truck0 distributor0)", "(drop hoist4 crate5 pallet4 distributor0)", "(lift hoist6 crate2 pallet6 distributor2)", "(drive truck0 distributor0 distributor2)", "(load hoist6 crate2 truck0 distributor2)", "(drive truck0 distributor2 depot1)", "(unload hoist1 crate2 truck0 depot1)", "(drop hoist1 crate2 pallet1 depot1)", "(lift hoist3 crate1 pallet3 depot3)", "(load hoist3 crate1 truck2 depot3)", "(drive truck2 depot3 distributor1)", "(unload hoist5 crate1 truck2 distributor1)", "(drop hoist5 crate1 pallet5 distributor1)", "(drive truck0 depot1 distributor4)", "(lift hoist7 crate0 pallet7 distributor3)", "(drive truck2 distributor1 distributor3)", "(load hoist7 crate0 truck2 distributor3)", "(drive truck2 distributor3 distributor1)", "(unload hoist5 crate0 truck2 distributor1)", "(drop hoist5 crate0 crate1 distributor1)", "(lift hoist8 crate3 pallet8 distributor4)", "(load hoist8 crate3 truck0 distributor4)", "(unload hoist8 crate4 truck0 distributor4)", "(drop hoist8 crate4 pallet8 distributor4)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_3, crate_1 is at depot_3, crate_2 is at distributor_2, crate_3 is at distributor_4, crate_4 is at depot_2, crate_5 is at depot_2, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at distributor_0, hoist_5 is at distributor_1, hoist_6 is at distributor_2, hoist_7 is at distributor_3, hoist_8 is at distributor_4, hoist_9 is at distributor_5, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at distributor_0, pallet_5 is at distributor_1, pallet_6 is at distributor_2, pallet_7 is at distributor_3, pallet_8 is at distributor_4, pallet_9 is at distributor_5, truck_0 is at distributor_4, truck_1 is at depot_0, truck_2 is at depot_1, hoist_0 is available, hoist_1 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_5 is clear, pallet_0 is clear, pallet_1 is clear, pallet_4 is clear, pallet_5 is clear, pallet_9 is clear, crate_0 is on pallet_7, crate_1 is on pallet_3, crate_2 is on pallet_6, crate_3 is on pallet_8, crate_4 is on pallet_2, crate_5 is on crate_4.My goal is to have that crate_0 is on crate_1, crate_1 is on pallet_5, crate_2 is on pallet_1, crate_4 is on pallet_8, crate_5 is on pallet_4.My plan is as follows:\n<PLAN>\ndrive truck_0 from distributor_4 to depot_2\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \ndrive truck_2 from depot_1 to depot_3\nUse hoist_2 to lift crate_5 from crate_4 at depot_2\nUse hoist_8 to unload crate_4 from truck_0 at distributor_4 WRONG \nUse hoist_2 to load crate_5 into truck_0 at depot_2\nUse hoist_2 to lift crate_4 from pallet_2 at depot_2\ndrive truck_0 from depot_2 to distributor_0 WRONG \ndrive truck_2 from distributor_3 to distributor_1 WRONG \nUse hoist_2 to load crate_4 into truck_0 at depot_2\nUse hoist_8 to load crate_3 into truck_0 at distributor_4 WRONG \ndrive truck_0 from depot_2 to distributor_0\nUse hoist_4 to unload crate_5 from truck_0 at distributor_0\nUse hoist_1 to drop crate_5 to pallet_4 at distributor_4 WRONG \nUse hoist_4 to drop crate_5 to pallet_4 at distributor_0\nUse hoist_6 to lift crate_2 from pallet_6 at distributor_2\ndrive truck_0 from distributor_0 to distributor_2\nUse hoist_6 to load crate_2 into truck_0 at distributor_2\ndrive truck_0 from distributor_2 to depot_1\nUse hoist_1 to unload crate_2 from truck_0 at depot_1\nUse hoist_3 to drop crate_3 to pallet_7 at depot_2 WRONG \nUse hoist_1 to drop crate_2 to pallet_1 at depot_1\nUse hoist_3 to lift crate_1 from pallet_3 at depot_3\nUse hoist_3 to load crate_1 into truck_2 at depot_3\ndrive truck_2 from depot_3 to distributor_1\nUse hoist_5 to unload crate_1 from truck_2 at distributor_1\nUse hoist_5 to drop crate_1 to pallet_5 at distributor_1\ndrive truck_0 from depot_1 to distributor_4\nUse hoist_7 to lift crate_0 from pallet_7 at distributor_3\ndrive truck_2 from distributor_1 to distributor_3\nUse hoist_7 to load crate_0 into truck_2 at distributor_3\ndrive truck_2 from distributor_3 to distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \nUse hoist_5 to unload crate_0 from truck_2 at distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4 WRONG \nUse hoist_5 to drop crate_0 to crate_1 at distributor_1\nUse hoist_8 to lift crate_3 from pallet_8 at distributor_4\nUse hoist_8 to load crate_3 into truck_0 at distributor_4\nUse hoist_8 to unload crate_4 from truck_0 at distributor_4\nUse hoist_8 to drop crate_4 to pallet_8 at distributor_4\n</PLAN>"}
{"domain": "depots", "instance_id": "80", "prompt_id": 0, "mistake_rate": 0.2, "instruction": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.", "input": "As initial conditions I have that, crate_0 is at distributor_3, crate_1 is at depot_3, crate_2 is at depot_0, crate_3 is at depot_1, crate_4 is at distributor_4, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_11 is at distributor_5, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_11 is at distributor_5, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at depot_4, truck_1 is at distributor_5, truck_2 is at depot_3, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_11 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_4 is clear, pallet_11 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, pallet_8 is clear, crate_0 is on pallet_9, crate_1 is on pallet_3, crate_2 is on pallet_0, crate_3 is on pallet_1, crate_4 is on pallet_10.\nMy goal is to have that crate_0 is on pallet_8, crate_1 is on crate_3, crate_2 is on pallet_1, crate_3 is on pallet_7.", "output": "My plan is as follows:\n<PLAN>\ndrive truck_2 from depot_3 to depot_0\nUse hoist_1 to lift crate_0 from pallet_8 at depot_4 WRONG \nUse hoist_0 to lift crate_2 from pallet_0 at depot_0\nUse hoist_0 to load crate_2 into truck_2 at depot_0\ndrive truck_2 from depot_0 to depot_1\nUse hoist_9 to lift crate_0 from pallet_9 at distributor_3\ndrive truck_2 from depot_4 to distributor_1 WRONG \ndrive truck_0 from depot_4 to distributor_2\ndrive truck_0 from distributor_2 to distributor_3\ndrive truck_2 from depot_1 to depot_3 WRONG \nUse hoist_9 to load crate_0 into truck_0 at distributor_3\ndrive truck_0 from distributor_3 to distributor_2\nUse hoist_8 to unload crate_0 from truck_0 at distributor_2\nUse hoist_8 to drop crate_0 to pallet_8 at distributor_2\nUse hoist_7 to drop crate_1 to crate_3 at distributor_1 WRONG \nUse hoist_1 to lift crate_3 from pallet_1 at depot_1\nUse hoist_1 to load crate_3 into truck_2 at depot_1\ndrive truck_2 from depot_3 to distributor_1 WRONG \nUse hoist_1 to unload crate_2 from truck_2 at depot_1\ndrive truck_2 from depot_1 to depot_3\nUse hoist_1 to drop crate_2 to pallet_1 at depot_1 WRONG \nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \ndrive truck_2 from depot_3 to distributor_1\nUse hoist_7 to unload crate_3 from truck_2 at distributor_1\nUse hoist_1 to drop crate_2 to pallet_1 at depot_1\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \nUse hoist_7 to drop crate_3 to pallet_7 at distributor_1\nUse hoist_3 to lift crate_1 from pallet_3 at depot_3\ndrive truck_2 from distributor_1 to depot_3\nUse hoist_3 to load crate_1 into truck_2 at depot_3\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \ndrive truck_2 from depot_3 to distributor_1\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1\nUse hoist_7 to drop crate_1 to crate_3 at distributor_1\n</PLAN>", "plan_length": 25, "raw_plan": ["(drive truck2 depot3 depot0)", "(lift hoist0 crate2 pallet0 depot0)", "(load hoist0 crate2 truck2 depot0)", "(drive truck2 depot0 depot1)", "(lift hoist9 crate0 pallet9 distributor3)", "(drive truck0 depot4 distributor2)", "(drive truck0 distributor2 distributor3)", "(load hoist9 crate0 truck0 distributor3)", "(drive truck0 distributor3 distributor2)", "(unload hoist8 crate0 truck0 distributor2)", "(drop hoist8 crate0 pallet8 distributor2)", "(lift hoist1 crate3 pallet1 depot1)", "(load hoist1 crate3 truck2 depot1)", "(unload hoist1 crate2 truck2 depot1)", "(drive truck2 depot1 depot3)", "(drive truck2 depot3 distributor1)", "(unload hoist7 crate3 truck2 distributor1)", "(drop hoist1 crate2 pallet1 depot1)", "(drop hoist7 crate3 pallet7 distributor1)", "(lift hoist3 crate1 pallet3 depot3)", "(drive truck2 distributor1 depot3)", "(load hoist3 crate1 truck2 depot3)", "(drive truck2 depot3 distributor1)", "(unload hoist7 crate1 truck2 distributor1)", "(drop hoist7 crate1 crate3 distributor1)"], "full_text_prompt": "I have to plan the logistics of transporting crates between a number of depots and distributors via trucks that are loaded by hoists. Depots and distributors are directly connected by roads (trucks can drive between any two depots or distributors).\nA depot is a type of place.\nA distributor is a type of place.\nA pallet is a type of surface.\nA crate is a type of surface.\nHere are the actions that can be performed:\nDrive a truck from one place to another place.\nUse a hoist to lift a crate from a surface at a place.\nUse a hoist to drop a crate to a surface at a place.\nUse a hoist to load a crate into a truck at a place.\nUse a hoist to unload a crate from a truck at a place.\nThe following are the restrictions on the actions:\nA truck can be driven from one place to another place only if the truck is at the origin place.\nOnce a truck has been driven from one place to another, it is not at the origin place and is at the destination place.\nA crate can be lifted by a hoist only if the hoist is at the same place as the crate, the hoist is available, and the crate is clear.\nOnce a crate has been lifted by a hoist from a surface at a place, the crate is not at the place, the hoist is lifting the crate, the hoist is not available, the surface is clear, and the crate is not on the surface.\nA crate can be dropped by a hoist to a surface only if the hoist and surface are both at the place, the surface is clear, and the hoist is lifting the crate.\nOnce a crate has been dropped by a hoist to a surface at a place, the hoist is available, the hoist is not lifting the crate, the crate is at the place, the surface is not clear, the crate is clear, and the crate is on the surface.\nA crate can be loaded by a hoist onto a truck at a place only if the hoist is at the same place, the truck is at the same place, and the hoist is lifting the crate.\nOnce a crate has been loaded by a hoist onto a truck at a place.\nA crate can be unloaded by a hoist from a truck at a place only if the hoist is at the same place as the truck, the hoist is available, and the crate is in the truck.\nOnce a crate has been unloaded by a hoist from a truck at a place, the crate is not in the truck, the hoist is not available, and the hoist is lifting the crate.As initial conditions I have that, crate_0 is at distributor_3, crate_1 is at depot_3, crate_2 is at depot_0, crate_3 is at depot_1, crate_4 is at distributor_4, hoist_0 is at depot_0, hoist_1 is at depot_1, hoist_10 is at distributor_4, hoist_11 is at distributor_5, hoist_2 is at depot_2, hoist_3 is at depot_3, hoist_4 is at depot_4, hoist_5 is at depot_5, hoist_6 is at distributor_0, hoist_7 is at distributor_1, hoist_8 is at distributor_2, hoist_9 is at distributor_3, pallet_0 is at depot_0, pallet_1 is at depot_1, pallet_10 is at distributor_4, pallet_11 is at distributor_5, pallet_2 is at depot_2, pallet_3 is at depot_3, pallet_4 is at depot_4, pallet_5 is at depot_5, pallet_6 is at distributor_0, pallet_7 is at distributor_1, pallet_8 is at distributor_2, pallet_9 is at distributor_3, truck_0 is at depot_4, truck_1 is at distributor_5, truck_2 is at depot_3, hoist_0 is available, hoist_1 is available, hoist_10 is available, hoist_11 is available, hoist_2 is available, hoist_3 is available, hoist_4 is available, hoist_5 is available, hoist_6 is available, hoist_7 is available, hoist_8 is available, hoist_9 is available, crate_0 is clear, crate_1 is clear, crate_2 is clear, crate_3 is clear, crate_4 is clear, pallet_11 is clear, pallet_2 is clear, pallet_4 is clear, pallet_5 is clear, pallet_6 is clear, pallet_7 is clear, pallet_8 is clear, crate_0 is on pallet_9, crate_1 is on pallet_3, crate_2 is on pallet_0, crate_3 is on pallet_1, crate_4 is on pallet_10.My goal is to have that crate_0 is on pallet_8, crate_1 is on crate_3, crate_2 is on pallet_1, crate_3 is on pallet_7.My plan is as follows:\n<PLAN>\ndrive truck_2 from depot_3 to depot_0\nUse hoist_1 to lift crate_0 from pallet_8 at depot_4 WRONG \nUse hoist_0 to lift crate_2 from pallet_0 at depot_0\nUse hoist_0 to load crate_2 into truck_2 at depot_0\ndrive truck_2 from depot_0 to depot_1\nUse hoist_9 to lift crate_0 from pallet_9 at distributor_3\ndrive truck_2 from depot_4 to distributor_1 WRONG \ndrive truck_0 from depot_4 to distributor_2\ndrive truck_0 from distributor_2 to distributor_3\ndrive truck_2 from depot_1 to depot_3 WRONG \nUse hoist_9 to load crate_0 into truck_0 at distributor_3\ndrive truck_0 from distributor_3 to distributor_2\nUse hoist_8 to unload crate_0 from truck_0 at distributor_2\nUse hoist_8 to drop crate_0 to pallet_8 at distributor_2\nUse hoist_7 to drop crate_1 to crate_3 at distributor_1 WRONG \nUse hoist_1 to lift crate_3 from pallet_1 at depot_1\nUse hoist_1 to load crate_3 into truck_2 at depot_1\ndrive truck_2 from depot_3 to distributor_1 WRONG \nUse hoist_1 to unload crate_2 from truck_2 at depot_1\ndrive truck_2 from depot_1 to depot_3\nUse hoist_1 to drop crate_2 to pallet_1 at depot_1 WRONG \nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \ndrive truck_2 from depot_3 to distributor_1\nUse hoist_7 to unload crate_3 from truck_2 at distributor_1\nUse hoist_1 to drop crate_2 to pallet_1 at depot_1\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \nUse hoist_7 to drop crate_3 to pallet_7 at distributor_1\nUse hoist_3 to lift crate_1 from pallet_3 at depot_3\ndrive truck_2 from distributor_1 to depot_3\nUse hoist_3 to load crate_1 into truck_2 at depot_3\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1 WRONG \ndrive truck_2 from depot_3 to distributor_1\nUse hoist_7 to unload crate_1 from truck_2 at distributor_1\nUse hoist_7 to drop crate_1 to crate_3 at distributor_1\n</PLAN>"}
